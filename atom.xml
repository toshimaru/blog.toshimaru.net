<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://blog.toshimaru.net/atom.xml" rel="self" type="application/atom+xml" /><link href="https://blog.toshimaru.net/" rel="alternate" type="text/html" /><updated>2021-03-06T17:43:25+09:00</updated><id>https://blog.toshimaru.net/atom.xml</id><title type="html">Hack Your Design!</title><subtitle>toshimaruの技術系なブログ</subtitle><author><name>Toshimaru</name></author><entry><title type="html">CircleCIのベースイメージを次世代イメージ cimg に移行する</title><link href="https://blog.toshimaru.net/use-circleci-cimg/" rel="alternate" type="text/html" title="CircleCIのベースイメージを次世代イメージ cimg に移行する" /><published>2021-03-05T00:00:00+09:00</published><updated>2021-03-05T00:00:00+09:00</updated><id>https://blog.toshimaru.net/use-circleci-cimg</id><content type="html" xml:base="https://blog.toshimaru.net/use-circleci-cimg/">&lt;p&gt;2020年にCircleCIの次世代イメージ・cimg が登場しました&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;個人のRuby on Railsプロジェクトで、従来のcircleci/rubyから次世代イメージであるところの&lt;a href=&quot;https://github.com/toshimaru/RailsTwitterClone/pull/920&quot;&gt;cimg/rubyに移行&lt;/a&gt;してみたので紹介します。&lt;/p&gt;

&lt;h2 id=&quot;ベースイメージの変更&quot;&gt;ベースイメージの変更&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;circleci/ruby&lt;/code&gt; から &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cimg/ruby&lt;/code&gt; へ変更します。&lt;/p&gt;

&lt;div class=&quot;language-diff highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; executors:
   default:
     working_directory: ~/app
     docker:
&lt;span class=&quot;gi&quot;&gt;+      - image: circleci/ruby:2.7-node-browsers
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;-      - image: cimg/ruby:2.7-browsers
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;circleci-公式-orb-の利用&quot;&gt;CircleCI 公式 Orb の利用&lt;/h2&gt;

&lt;p&gt;今回の変更とあわせて、下記２つのCircleCI公式Orbも導入しました。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://circleci.com/developer/orbs/orb/circleci/ruby&quot;&gt;CircleCI Developer Hub - circleci/ruby&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://circleci.com/developer/orbs/orb/circleci/browser-tools&quot;&gt;CircleCI Developer Hub - circleci/browser-tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;orbs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;circleci/ruby@1.1.2&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;browser-tools&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;circleci/browser-tools@1.1.3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;rspec-の実行&quot;&gt;RSpec の実行&lt;/h2&gt;

&lt;p&gt;上述のOrbを有効活用することで&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;bundle Install&lt;/li&gt;
  &lt;li&gt;chromedriverインストール&lt;/li&gt;
  &lt;li&gt;rspecの実行&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;のstepを下記のようにシンプルに記述することが可能になります。&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;rspec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;executor&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;default&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;checkout&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ruby/install-deps&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;browser-tools/install-chrome&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;browser-tools/install-chromedriver&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bin/rails db:schema:load --trace&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ruby/rspec-test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;rubocop-の実行&quot;&gt;rubocop の実行&lt;/h2&gt;

&lt;p&gt;rubocop の実行も同様に &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;circleci/ruby&lt;/code&gt; Orbに組み込まれており、簡単に実行できます。&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;rubocop&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;executor&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;default&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;checkout&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ruby/install-deps&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ruby/rubocop-check&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;最終形&quot;&gt;最終形&lt;/h2&gt;

&lt;p&gt;実際に &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;circleci/ruby&lt;/code&gt; から &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cimg/ruby&lt;/code&gt; へと移行した Pull Request の全体像としては下記のようになります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/toshimaru/RailsTwitterClone/pull/920&quot;&gt;Migrate CircleCI image from circleci/ruby to cimg/ruby by toshimaru · Pull Request&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;参考リンク&quot;&gt;参考リンク&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;紹介したCircleCI Orbs
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://circleci.com/developer/orbs/orb/circleci/ruby&quot;&gt;CircleCI Developer Hub - circleci/ruby&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://circleci.com/developer/orbs/orb/circleci/browser-tools&quot;&gt;CircleCI Developer Hub - circleci/browser-tools&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://circleci.com/developer/images/image/cimg/ruby&quot;&gt;cimg/ruby - CircleCI&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/CircleCI-Public/circleci-demo-ruby-rails/blob/master/.circleci/config.yml&quot;&gt;circleci-demo-ruby-rails/config.yml at master · CircleCI-Public/circleci-demo-ruby-rails&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://circleci.com/ja/blog/announcing-our-next-generation-convenience-images-smaller-faster-more-deterministic/&quot;&gt;次世代コンビニエンス イメージをリリース: より小さく、速く、確定的&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Toshimaru</name></author><category term="circleci" /><category term="ci" /><summary type="html">2020年にCircleCIの次世代イメージ・cimg が登場しました1。 次世代コンビニエンス イメージをリリース: より小さく、速く、確定的 &amp;#8617;</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/cimg.png" /><media:content medium="image" url="https://blog.toshimaru.net/images/posts/cimg.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Gemfile.lock 内の特定バージョンgemをインストールする bgem コマンド作った</title><link href="https://blog.toshimaru.net/rubygems-bundled-gems/" rel="alternate" type="text/html" title="Gemfile.lock 内の特定バージョンgemをインストールする bgem コマンド作った" /><published>2021-02-28T00:00:00+09:00</published><updated>2021-02-28T00:00:00+09:00</updated><id>https://blog.toshimaru.net/rubygems-bundled-gems</id><content type="html" xml:base="https://blog.toshimaru.net/rubygems-bundled-gems/">&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gemfile.lock&lt;/code&gt;に記述された特定バージョンのgemを簡単にインストールできる bgem コマンドを作った。&lt;/p&gt;

&lt;p&gt;（gem名としては &lt;a href=&quot;https://github.com/rubygems/rubygems&quot;&gt;rubygems/rubygems&lt;/a&gt; にインスパイアされて &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundled_gems&lt;/code&gt; とした）&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/toshimaru/bundled_gems&quot;&gt;toshimaru/bundled_gems: Install gem specified in Gemfile.lock without bundle install.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;モチベーション&quot;&gt;モチベーション&lt;/h2&gt;

&lt;p&gt;もともとは、GitHub Actionに &lt;a href=&quot;https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows&quot;&gt;cache機能&lt;/a&gt;が来る前に作ったもの。&lt;/p&gt;

&lt;p&gt;GitHub Action でCIしていた場合、cache機能がないと毎回 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle install&lt;/code&gt;走らせる必要があり、巨大プロジェクトだとそこがCIにおけるコストになっていた。&lt;/p&gt;

&lt;p&gt;また CI で rubocop だけを走らせている、みたいな場合、全てのライブラリのインストールは必要なく、rubocopと一部のライブラリさえあれば十分で、それ以外のライブラリのインストールはいわば無駄なインストールとなっている。&lt;/p&gt;

&lt;p&gt;「だったら必要なライブラリだけインストールしてCI走らせりゃいいじゃん」というのが今回のgemの着想。&lt;/p&gt;

&lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt;

&lt;h3 id=&quot;インストール&quot;&gt;インストール&lt;/h3&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;gem &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;bundled_gems
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;これで &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bgem&lt;/code&gt; コマンドが利用可能になる。&lt;/p&gt;

&lt;h3 id=&quot;gemfilelock-内のgemのインストール&quot;&gt;Gemfile.lock 内のgemのインストール&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ bgem install gem_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;こうすることで &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gemfile.lock&lt;/code&gt;内に記載されている &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gem_name&lt;/code&gt; のバージョンを読み取ってそれをインストールしてくれる（内部的には &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gem install gem_name:version&lt;/code&gt; を走らせている）。&lt;/p&gt;

&lt;p&gt;例としては、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bgem install rubocop&lt;/code&gt;とした場合、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gemfile.lock&lt;/code&gt;に記載されているバージョンの &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rubocop&lt;/code&gt; をインストールする。&lt;/p&gt;

&lt;h2 id=&quot;課題&quot;&gt;課題&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;installするgemの子となる依存gemのバージョンまでは解決してくれない点
    &lt;ul&gt;
      &lt;li&gt;このへん実装しようと思っていたら、先にGitHub公式の &lt;a href=&quot;https://github.com/actions/cache&quot;&gt;actions/cache&lt;/a&gt;が来てしまった次第。。。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;special-thanks&quot;&gt;Special Thanks&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gemfile.lock&lt;/code&gt; のパースに関しては、&lt;a href=&quot;https://github.com/ledsun&quot;&gt;@ledsun&lt;/a&gt; さんにサンプルをいただきました&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;。ありがとうございました。&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/ledsun/orgen&quot;&gt;ledsun/orgen&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Toshimaru</name></author><category term="ruby" /><category term="gem" /><category term="oss" /><summary type="html">Gemfile.lockに記述された特定バージョンのgemを簡単にインストールできる bgem コマンドを作った。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/bgem.png" /><media:content medium="image" url="https://blog.toshimaru.net/images/posts/bgem.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Dependabot で go modules の自動アップデートをする（go mod tidy付き）</title><link href="https://blog.toshimaru.net/dependabot-gomod/" rel="alternate" type="text/html" title="Dependabot で go modules の自動アップデートをする（go mod tidy付き）" /><published>2021-01-27T00:00:00+09:00</published><updated>2021-01-27T00:00:00+09:00</updated><id>https://blog.toshimaru.net/dependabot-gomod</id><content type="html" xml:base="https://blog.toshimaru.net/dependabot-gomod/">&lt;p&gt;Dependabot が GitHub の公式機能の一部として利用可能になりました。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;blogged. | DependabotをGitHub公式Dependabotに移行させた - Hack Your Design! &lt;a href=&quot;https://t.co/6Mb0XDSaSC&quot;&gt;https://t.co/6Mb0XDSaSC&lt;/a&gt;&lt;/p&gt;&amp;mdash; toshimaru (@toshimaru_e) &lt;a href=&quot;https://twitter.com/toshimaru_e/status/1273437750499270659?ref_src=twsrc%5Etfw&quot;&gt;June 18, 2020&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;ただ go modules のアップデートに関しては、アップデート時に &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go mod tidy&lt;/code&gt; を実行してくれないという問題がありました。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;renovate ならオプションでやってくれるみたいなのでGoプロジェクトはこっちに乗り換えるかー&lt;a href=&quot;https://t.co/qVbkb5UXlA&quot;&gt;https://t.co/qVbkb5UXlA&lt;/a&gt;&lt;/p&gt;&amp;mdash; toshimaru (@toshimaru_e) &lt;a href=&quot;https://twitter.com/toshimaru_e/status/1219800597982932992?ref_src=twsrc%5Etfw&quot;&gt;January 22, 2020&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;代替として、&lt;a href=&quot;https://github.com/renovatebot/renovate&quot;&gt;Renovate&lt;/a&gt;という &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go mod tidy&lt;/code&gt; してくれるアップデーターを使っていました。&lt;/p&gt;

&lt;p&gt;しかし、この度 Dependabot が &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go mod tidy&lt;/code&gt; も実行してくれるようになっていました。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Dependabot: `go mod tidy` and `vendor` support &lt;a href=&quot;https://t.co/x9Wwj0yuMG&quot;&gt;https://t.co/x9Wwj0yuMG&lt;/a&gt;&lt;/p&gt;&amp;mdash; GitHub Changelog (@GHchangelog) &lt;a href=&quot;https://twitter.com/GHchangelog/status/1318223496569290752?ref_src=twsrc%5Etfw&quot;&gt;October 19, 2020&lt;/a&gt;&lt;/blockquote&gt;

&lt;h2 id=&quot;dependabot-go-modules設定&quot;&gt;Dependabot Go Modules設定&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/dependabot.yml&lt;/code&gt; ファイルを作って、下記のように記述すればOK。&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# .github/dependabot.yml&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;updates&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;package-ecosystem&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;gomod&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;directory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Location of package manifests&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;schedule&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;weekly&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;下記のPRの通り、きちんと &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go mod tidy&lt;/code&gt; をやってくれています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/toshimaru/nyan/pull/104&quot;&gt;github.com/toshimaru/nyan/pull/104&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.blog/changelog/2020-10-19-dependabot-go-mod-tidy-and-vendor-support/&quot;&gt;Dependabot: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go mod tidy&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vendor&lt;/code&gt; support - GitHub Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/golang/go/wiki/Modules&quot;&gt;Modules · golang/go Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Toshimaru</name></author><category term="go" /><summary type="html">Dependabot が GitHub の公式機能の一部として利用可能になりました。</summary></entry><entry><title type="html">頑張らない在宅ワーク環境</title><link href="https://blog.toshimaru.net/no-hustle-wfh-setup/" rel="alternate" type="text/html" title="頑張らない在宅ワーク環境" /><published>2020-12-12T00:00:00+09:00</published><updated>2020-12-13T00:00:00+09:00</updated><id>https://blog.toshimaru.net/no-hustle-wfh-setup</id><content type="html" xml:base="https://blog.toshimaru.net/no-hustle-wfh-setup/">&lt;p&gt;この記事は &lt;a href=&quot;https://qiita.com/advent-calendar/2020/lenovo_env&quot;&gt;生産性向上のための環境整備2020 【PR】 Lenovo Advent Calendar 2020&lt;/a&gt; 12日目の記事です。&lt;/p&gt;

&lt;p&gt;Withコロナの時代においてリモートワーク、もっというとWork from Homeーーすなわち在宅ワークは当たり前のものとなりました。&lt;/p&gt;

&lt;p&gt;そんな中、少なくない人が＜最強の在宅ワーク環境＞を求めて、インターネットの海を泳いだことでしょう。&lt;/p&gt;

&lt;p&gt;その結果、見つかる情報は、&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;◯万円のディスプレイ （ドン！）&lt;/li&gt;
  &lt;li&gt;◯万円のデスク （ドン！）&lt;/li&gt;
  &lt;li&gt;◯万円のマイク （ドン！）&lt;/li&gt;
  &lt;li&gt;◯万円のヘッドホン （ドン！）&lt;/li&gt;
  &lt;li&gt;◯◯万円の高級チェア （ドドン！）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;みたいなものであったりします。&lt;/p&gt;

&lt;p&gt;ーーで、思うわけです。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;「そんな金もそんなスペースも家にはねぇ❗💢」&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;そもそもそんな金をかけて作る在宅ワーク環境は書斎や仕事部屋であったりしますが、そんな贅沢なスペースは誰しもがあるわけではありません。既存の限られたスペースの中でいかに仕事をするためのスペースを確保していくかが重要になります。&lt;/p&gt;

&lt;p&gt;また良いモノに高いお金を払う、それ自体は素晴らしいことですし否定はしませんが、誰しもが手元にそんなお金があるわけではありません。在りモノ・もしくは安価に環境が揃えられるのであればそれに越したことはありません。&lt;/p&gt;

&lt;p&gt;ということで、今日は「&lt;strong&gt;頑張らない在宅ワーク環境&lt;/strong&gt;」ということでまとめてみようと思います。&lt;/p&gt;

&lt;h2 id=&quot;この記事のゴール&quot;&gt;この記事のゴール&lt;/h2&gt;

&lt;p&gt;在りモノを活用しつつ、安価にそこそこの在宅ワーク環境を整えること&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;!--
## 前提
## この記事のターゲット
--&gt;

&lt;h2 id=&quot;椅子&quot;&gt;椅子&lt;/h2&gt;

&lt;p&gt;良い椅子・チェアがなく腰痛に悩まされている方も多くいるのでは、と思います。&lt;/p&gt;

&lt;p&gt;つい高級チェアなんかを求めがちですが、発想を転換させて「そもそも座らない」とするのはいかがでしょうか？&lt;/p&gt;

&lt;p&gt;僕は子ども用に購入した棚が高さとしてちょうど良かったので、そいつをちょいと拝借して雑なスタンディングデスク（？）を構築しました。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;これが在宅ワーク環境のリアルだ！（子ども用に新調した棚の上にむりやり作ったスタンディング環境） &lt;a href=&quot;https://t.co/gFMsDeIp75&quot;&gt;pic.twitter.com/gFMsDeIp75&lt;/a&gt;&lt;/p&gt;&amp;mdash; toshimaru (@toshimaru_e) &lt;a href=&quot;https://twitter.com/toshimaru_e/status/1260827322568994816?ref_src=twsrc%5Etfw&quot;&gt;May 14, 2020&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;ただずっと立っているのも疲れるので（無理に立ち続ける必要はないと思います）、たまに座れる椅子を横に用意しておくと良いかと思います。僕は5年以上前に&lt;a href=&quot;https://www.nitori-net.jp/ec/product/8700459s/&quot;&gt;ニトリで買った折り畳み椅子&lt;/a&gt;をいまだに使い続けています。&lt;/p&gt;

&lt;p class=&quot;warn&quot;&gt;&lt;a href=&quot;https://www.esquire.com/jp/menshealth/wellness/a30352943/standing-desk-benefits-truth/&quot;&gt;スタンディングデスクを使うことで全てが解決するわけではない&lt;/a&gt;ようなので、体勢を変えることやストレッチを挟むなどの工夫は依然必要だと思います。&lt;/p&gt;

&lt;p&gt;ただこれだけだと心許ないので気分にあわせて下記を使っています&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://amzn.to/3qSEjno&quot;&gt;Backjoy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://amzn.to/37bhfsb&quot;&gt;腰サポーター&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これらそのものが腰に効くというよりは、姿勢を矯正することで腰の負担を軽減してくれる、というモノと理解しています。&lt;/p&gt;

&lt;p&gt;良い椅子はないけど、仕事時の腰の負担を軽減したいという人にはおすすめのグッズです。&lt;/p&gt;

&lt;h2 id=&quot;ラップトップスタンド&quot;&gt;ラップトップスタンド&lt;/h2&gt;

&lt;p&gt;ラップトップスタンドとしては、&lt;a href=&quot;https://amzn.to/37dhrqG&quot;&gt;BoYataのノートパソコンスタンド&lt;/a&gt;を使っています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/dp/B07VXCVVRM/ref=as_li_ss_il?ie=UTF8&amp;amp;linkCode=li2&amp;amp;tag=toshimaru-22&amp;amp;linkId=84bbc110999727ee8549075d6cd1afae&amp;amp;language=ja_JP&quot; target=&quot;_blank&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=B07VXCVVRM&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=JP&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=toshimaru-22&amp;amp;language=ja_JP&quot; /&gt;&lt;/a&gt;&lt;img src=&quot;https://ir-jp.amazon-adsystem.com/e/ir?t=toshimaru-22&amp;amp;language=ja_JP&amp;amp;l=li2&amp;amp;o=9&amp;amp;a=B07VXCVVRM&quot; width=&quot;1&quot; height=&quot;1&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;border:none !important; margin:0px !important;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;他の製品より多少値が張るのですが、安いスタンド買って失敗したことのある僕にとって、これは買ってよかったと思える製品でした。&lt;/p&gt;

&lt;p&gt;抜群の安定感があることに加え高さ、角度がよい感じに調整できるのが素晴らしいです。&lt;/p&gt;

&lt;p class=&quot;info&quot;&gt;しっかりとしたモニタ &amp;amp; デスクがある方であれば&lt;a href=&quot;https://amzn.to/2W87iVX&quot;&gt;モニターアーム&lt;/a&gt;を取り付けると机上のスペースがスッキリして良さそうです。&lt;/p&gt;

&lt;h2 id=&quot;サブディスプレイ&quot;&gt;サブディスプレイ&lt;/h2&gt;

&lt;p&gt;金とスペースがあればウン万円するようなウルトラワイド曲面ディスプレイがほしいところですがそんなスペースも金もありません。&lt;/p&gt;

&lt;p&gt;MacユーザーかつiPadをお持ちであれば&lt;a href=&quot;https://support.apple.com/ja-jp/HT210380&quot;&gt;Sidecar で iPad をサブディスプレイとして使う&lt;/a&gt;のがオススメです。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;スタンディングスペースにSidecar iPad用のスタンド買い足して幾分かワーク体験がよくなった &lt;a href=&quot;https://t.co/cv1T8akL4j&quot;&gt;pic.twitter.com/cv1T8akL4j&lt;/a&gt;&lt;/p&gt;&amp;mdash; toshimaru (@toshimaru_e) &lt;a href=&quot;https://twitter.com/toshimaru_e/status/1318697515466682368?ref_src=twsrc%5Etfw&quot;&gt;October 20, 2020&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;ノートパソコンと高さをあわせるため、先程紹介したラップトップスタンドに加え、Amazonで見つけた安いスマホ兼タブレットスタンドを使ってます。&lt;/p&gt;

&lt;h2 id=&quot;キーボード&quot;&gt;キーボード&lt;/h2&gt;

&lt;p&gt;現状のラップトップ付属のキーボードに満足しているなら無理に用意する必要はないと思いますが、在宅ワークが状態化して家にいることが多いのであれば、使いやすい・疲れにくいキーボードを一台常備しても良いかと思います。&lt;/p&gt;

&lt;p&gt;僕はエンジニアなので元々手元にあったHHKBを使っています。ただ高いしエンジニア向けなので万人におすすめはしません。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/macbook-hhkb-sonshi-style/&quot;&gt;俺流 MacBook+HHKB 最強尊師スタイル&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/hhkb-hybrid-type-s/&quot;&gt;【レビュー】HHKB Hybrid Type-S をしばらく使ってみた感想 - Hack Your Design!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;何をもって使いやすいというのは人それぞれなので、ここでは特にコレ！といったおすすめキーボードは上げません。一番良いのは、実際に店頭にいって試してみて自分に最もあったものを購入することかと思います。&lt;/p&gt;

&lt;p class=&quot;info&quot;&gt;最近だと老舗の&lt;a href=&quot;https://amzn.to/2W8pyOV&quot;&gt;REALFORCE&lt;/a&gt;や&lt;a href=&quot;https://amzn.to/3nfbMWz&quot;&gt;HHKB&lt;/a&gt;でなくとも、1万円以下でも良いキーボードが買えるようなので、いろいろ調べてみると良いかと思います（こだわりすぎると、いわゆるキーボード沼にはまるので注意⚠️）。&lt;/p&gt;

&lt;h2 id=&quot;音声環境&quot;&gt;音声環境&lt;/h2&gt;

&lt;p&gt;リモートワークとともにリモート会議も当たり前のものとなりました。Zoom, Google Meet, Slack Callーー使っているリモート会議ツールはそれぞれでしょう。&lt;/p&gt;

&lt;p&gt;リモート会議で音声が悪いというのは喋る側、聴く側双方にとってかなりストレスとなります。ですので仕事を円滑に進めるためにも音声にはこだわりましょう。&lt;/p&gt;

&lt;p&gt;といっても、音声に関してはそこまでお金をかけなくていいと思っています。みなさんiPhoneは持ってますよね？ じゃあ付属のApple EarPodsを使いましょう。これだけで格段に喋る側、聴く側双方が幸せになれます。&lt;/p&gt;

&lt;p&gt;参考. &lt;a href=&quot;https://www.itmedia.co.jp/news/articles/2005/01/news118.html&quot;&gt;テレワーク用にヘッドセットは買わなくてもいい　“iPhoneのオマケ”が役に立つ - ITmedia NEWS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;一方、ソフトウェアでノイズを削減するというのも手です。&lt;/p&gt;

&lt;p&gt;おすすめは&lt;a href=&quot;https://ref.krisp.ai/u/ud778344eb&quot;&gt;Krisp&lt;/a&gt;です。Krispをかますだけで出力側、入力側の両方でめちゃめちゃノイズを削減してくれます。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-cards=&quot;hidden&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;最高のリモートミーティング体験を求めて Krisp を試用してみたけど、ホントにものっそい周囲のノイズがカットされていてすごかった&lt;br /&gt;Krisp | Noise Cancelling App &lt;a href=&quot;https://t.co/bF8bQ8q2xg&quot;&gt;https://t.co/bF8bQ8q2xg&lt;/a&gt;&lt;/p&gt;&amp;mdash; toshimaru (@toshimaru_e) &lt;a href=&quot;https://twitter.com/toshimaru_e/status/1240137161405607939?ref_src=twsrc%5Etfw&quot;&gt;March 18, 2020&lt;/a&gt;&lt;/blockquote&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;リモート戦国時代を生き抜くために Krisp を年間購読した&lt;/p&gt;&amp;mdash; toshimaru (@toshimaru_e) &lt;a href=&quot;https://twitter.com/toshimaru_e/status/1252784955878305792?ref_src=twsrc%5Etfw&quot;&gt;April 22, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;Beforeコロナ時代に、カフェとかからリモート会議繋ぐとめちゃめちゃ周囲のノイズが入っていたのですが、これを使うことでだいぶ改善されました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://iwashi.co/2020/03/27/Effective-Remote-Meeting&quot;&gt;効果的なリモート会議にするためのプラクティス&lt;/a&gt;から音声環境として意識すべき点をいくつか抜粋します。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ヘッドセット、イヤフォンマイクを使う&lt;/li&gt;
  &lt;li&gt;ヘッドセットには無線ではなく有線を&lt;/li&gt;
  &lt;li&gt;マイクミュートの使用&lt;/li&gt;
  &lt;li&gt;マイクは口元に近いほどよい&lt;/li&gt;
  &lt;li&gt;ネットワーク回線は安定したものを&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ネットワーク環境&quot;&gt;ネットワーク環境&lt;/h2&gt;

&lt;p&gt;在宅ワークにおいて強いネットワーク環境を用意することが大事なのは言うまでもありません。&lt;/p&gt;

&lt;p&gt;僕の場合、しばらく&lt;a href=&quot;https://amzn.to/348KppT&quot;&gt;Google Wifi&lt;/a&gt;を使っていたのですが、WiFiルーターを変更することでWifiの速度が劇的に向上しました。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;同じデバイス、回線、時間帯と条件を合わせて２つのWi-Fiルーターで速度テスト。これだけ速度が違うのだからやっぱWi-Fiルーターにはこだわりたい。 &lt;a href=&quot;https://t.co/VLn89H1xRS&quot;&gt;pic.twitter.com/VLn89H1xRS&lt;/a&gt;&lt;/p&gt;&amp;mdash; toshimaru (@toshimaru_e) &lt;a href=&quot;https://twitter.com/toshimaru_e/status/1337794637289775104?ref_src=twsrc%5Etfw&quot;&gt;December 12, 2020&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;（ちなみに早い結果のほうのルーターは&lt;a href=&quot;https://amzn.to/3qQbsjr&quot;&gt;AtermのWG1200HP3 &lt;/a&gt;です）&lt;/p&gt;

&lt;p&gt;インターネット回線に関しては家庭によっていろいろな制限がある（マンション共有回線が厳しい、高速なXXX社の回線は引けない、速度制限がある等）ので、すぐには改善できない方も多いかもしれませんが下記などで改善できそうなら検討してみてもいいかもしれません。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;WiFiルーターを早いもの・安定するものに変えてみる&lt;/li&gt;
  &lt;li&gt;WiFi中継機を仕事スペースの近くに用意してみる&lt;/li&gt;
  &lt;li&gt;無線接続を諦めて有線接続にしてみる&lt;/li&gt;
  &lt;li&gt;IPoE 接続方式に変えてみる&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;さいごに&quot;&gt;さいごに&lt;/h2&gt;

&lt;p&gt;みなさんはどんな工夫をして在宅ワーク環境を乗り越えているでしょうか？　もし「頑張らないリモート環境」のコンセプトに合致する良いアイディアがあればぜひ教えてください。😄&lt;/p&gt;

&lt;p&gt;余談で実は今年引越ししたのですが、本記事で紹介したようなセットアップさえ整っていれば、下記のとおり引越し後の部屋の片隅に引っ越しダンボールを積み上げて、即席のスタンディング環境を用意することができました。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;最強のWFH環境（2020年） &lt;a href=&quot;https://t.co/bwEdUgNUmX&quot;&gt;pic.twitter.com/bwEdUgNUmX&lt;/a&gt;&lt;/p&gt;&amp;mdash; toshimaru (@toshimaru_e) &lt;a href=&quot;https://twitter.com/toshimaru_e/status/1325591907687309312?ref_src=twsrc%5Etfw&quot;&gt;November 9, 2020&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;最後に在宅ワークのお供として飲んでいるコーヒーグッズのおすすめを置いておきます。&lt;/p&gt;

&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=toshimaru-22&amp;amp;language=ja_JP&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B00EJADDW4&amp;amp;linkId=71ac203f4b5d035f61d3cf6b8ff11888&quot;&gt;&lt;/iframe&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=toshimaru-22&amp;amp;language=ja_JP&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B074MX813G&amp;amp;linkId=a2f0a0cd65b264b7d5319baf90080eb7&quot;&gt;&lt;/iframe&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=toshimaru-22&amp;amp;language=ja_JP&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B07VFLG85K&amp;amp;linkId=34e1630223bc31fb9d8a438140d41ba5&quot;&gt;&lt;/iframe&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;一方で本当に良いと思えるものはケチらずお金を投資してよいと思ってます。 &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;たまに姿勢を変えて考え込んだり、ダラーっとリラックスしつつコーヒーを飲んだりするときにそれらが邪魔になったりするので常に使っているわけではありません。 &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Toshimaru</name></author><category term="wfh" /><category term="productivity" /><summary type="html">この記事は 生産性向上のための環境整備2020 【PR】 Lenovo Advent Calendar 2020 12日目の記事です。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/wfh-og.jpg" /><media:content medium="image" url="https://blog.toshimaru.net/images/posts/wfh-og.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">git switch養成ギプス</title><link href="https://blog.toshimaru.net/git-switch-restore/" rel="alternate" type="text/html" title="git switch養成ギプス" /><published>2020-12-09T00:00:00+09:00</published><updated>2020-12-09T00:00:00+09:00</updated><id>https://blog.toshimaru.net/git-switch-restore</id><content type="html" xml:base="https://blog.toshimaru.net/git-switch-restore/">&lt;p&gt;本記事は&lt;a href=&quot;https://qiita.com/advent-calendar/2020/git&quot;&gt;Git Advent Calendar 2020&lt;/a&gt; 9日目の記事です。&lt;/p&gt;

&lt;p&gt;git 2.23 にて &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git switch&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git restore&lt;/code&gt; というコマンドが導入されたことはみなさん既にご存知のことかと思います。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;One of our favorite open source projects has a big update... Git 2.23 is here!&lt;br /&gt;&lt;br /&gt;Read all about the latest release and new features ✨&lt;a href=&quot;https://t.co/fpQICF8Onc&quot;&gt;https://t.co/fpQICF8Onc&lt;/a&gt;&lt;/p&gt;&amp;mdash; GitHub (@github) &lt;a href=&quot;https://twitter.com/github/status/1162474366380269568?ref_src=twsrc%5Etfw&quot;&gt;August 16, 2019&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;雑に要約すると「&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git checkout&lt;/code&gt;に機能もたせすぎてわかりにくくなっちゃったから、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git switch&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git restore&lt;/code&gt;でわかりやすくしたよ！」ってことだと思います。&lt;/p&gt;

&lt;p&gt;一方、まだ&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git switch&lt;/code&gt;に移行しきれていないという人も多くいるのではないかと思います。実際、私の周囲でも今も&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git checkout&lt;/code&gt;を使っている人をちらほら見るので、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git switch&lt;/code&gt;に移行していくためのコツを書いてみます。&lt;/p&gt;

&lt;h2 id=&quot;結論&quot;&gt;結論&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;switch&lt;/code&gt; のaliasを設定しろ、そして&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;checkout&lt;/code&gt;のaliasを捨てろ&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;git-checkout-only時代&quot;&gt;git checkout only時代&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;checkout&lt;/code&gt;というコマンドは長ったらしいのでaliasを設定して運用していたのではないでしょうか。&lt;/p&gt;

&lt;p&gt;僕の場合、下記のようにaliasを設定しました。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# ~/.gitconfig
[alias]
  co = checkout
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ただこれだと &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git checkout&lt;/code&gt;をそのまま便利に使い続けてしまうので、思い切ってこいつを削除してしまうと良いかと思います。&lt;/p&gt;

&lt;p&gt;もしくは下記のようにメッセージ出すとかでもOK。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# ~/.gitconfig
[alias]
  co = !echo &quot;Use git switch/restore instead!&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;git-switch時代&quot;&gt;git switch時代&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git switch&lt;/code&gt; を使いやすくするために下記のようなaliasを設定します。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# ~/.gitconfig
[alias]
  sw = switch
  swc = switch -c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;こうすることでcheckoutコマンドが下記のように生まれ変わります。&lt;/p&gt;

&lt;h3 id=&quot;main-branch-へ切り替え&quot;&gt;main branch へ切り替え&lt;/h3&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git checkout main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;sw &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; switch
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git sw main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;main-branch-から-hoge-branch-作成&quot;&gt;main branch から hoge branch 作成&lt;/h3&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;git checkout -b hoge main
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;sw &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; switch &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;g swc hoge main
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;余談&quot;&gt;余談&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git restore&lt;/code&gt;に対する良いaliasは今のところ見つかっていません。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git reset&lt;/code&gt;とalias的に名前空間かぶつかるのでまだ良い命名できていないんですよね。&lt;/p&gt;</content><author><name>Toshimaru</name></author><category term="git" /><summary type="html">本記事はGit Advent Calendar 2020 9日目の記事です。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/git-switch.png" /><media:content medium="image" url="https://blog.toshimaru.net/images/posts/git-switch.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">PR作者を自動でアサインするGitHub Actions, auto-author-assign を作った</title><link href="https://blog.toshimaru.net/auto-author-assign/" rel="alternate" type="text/html" title="PR作者を自動でアサインするGitHub Actions, auto-author-assign を作った" /><published>2020-12-06T00:00:00+09:00</published><updated>2020-12-06T00:00:00+09:00</updated><id>https://blog.toshimaru.net/auto-author-assign</id><content type="html" xml:base="https://blog.toshimaru.net/auto-author-assign/">&lt;p&gt;本記事は&lt;a href=&quot;https://qiita.com/advent-calendar/2020/github-actions&quot;&gt;GitHub Actions Advent Calendar 2020&lt;/a&gt;６日目の記事です。&lt;/p&gt;

&lt;p&gt;今日は作ったGitHub Actions、&lt;a href=&quot;https://github.com/toshimaru/auto-author-assign&quot;&gt;auto-author-assign&lt;/a&gt;の紹介をしたいと思います。&lt;/p&gt;

&lt;h2 id=&quot;作ったきっかけ&quot;&gt;作ったきっかけ&lt;/h2&gt;

&lt;p&gt;Pull Request（以下、PRと表記）を作成をしたとき、多くの場合そのPRの担当者（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assignee&lt;/code&gt;）はそのPR作者自身になるかと思います。&lt;/p&gt;

&lt;p&gt;その「PR担当者をPR作者にアサインする」アクションを自動化した、というのが今回作成したGitHub Actionsになります。&lt;/p&gt;

&lt;h2 id=&quot;何が嬉しいか&quot;&gt;何が嬉しいか？&lt;/h2&gt;

&lt;p&gt;たくさんの人がPRを出しまくる、そんな大規模プロジェクトだとPR一覧を開いたときに&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;「誰がPRの担当者なのか？」がアイコンで一目でわかるようになる&lt;/li&gt;
  &lt;li&gt;（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Author&lt;/code&gt; に加えて）&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Assignee&lt;/code&gt; によるフィルターができるようになる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;あたりが嬉しさになります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/auto-author-assign/pull-request-list.png&quot; alt=&quot;PR list&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;設定&quot;&gt;設定&lt;/h2&gt;

&lt;p&gt;リポジトリに &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/auto-author-assign.yml&lt;/code&gt; みたいなファイルを用意して下記のように設定すればOK。&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Auto&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Author&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Assign&apos;&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;pull_request_target&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;opened&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;reopened&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;assign-author&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;toshimaru/auto-author-assign@v1.2.0&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;repo-token&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;on-pull_request-ではアサイン失敗することがある&quot;&gt;on: pull_request ではアサイン失敗することがある&lt;/h3&gt;

&lt;p&gt;最初、 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;on: pull_request&lt;/code&gt; でイベント発火させていたのですが、これだとfolkしたレポジトリからのPRで下記エラーが出てアサインが失敗します。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Error: Resource not accessible by integration
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;なぜなら folk したレポジトリからは &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;secrets.GITHUB_TOKEN&lt;/code&gt; にアクセスできないためです。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This event is similar to pull_request, except that it runs in the context of the base repository of the pull request (snip) This means that you can more safely make your secrets available to the workflows triggered by the pull request&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;via. &lt;a href=&quot;https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#pull_request_target&quot;&gt;Events that trigger workflows - GitHub Docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ということで、 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;on: pull_request_target&lt;/code&gt; 使ってActionを起動させる必要があります。&lt;/p&gt;

&lt;h2 id=&quot;余談&quot;&gt;余談&lt;/h2&gt;

&lt;p&gt;本Actionは&lt;a href=&quot;https://dev.to/devteam/announcing-the-github-actions-hackathon-on-dev-3ljn&quot;&gt;GitHub Actions Hackathon&lt;/a&gt;にも提出しました&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://dev.to/toshimaru/assign-pull-request-author-automatically-with-github-actions-2i9o&quot;&gt;Assign pull request author automatically with GitHub Actions - DEV Community 👩‍💻👨‍💻&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Toshimaru</name></author><category term="github_actions" /><category term="ci" /><category term="github" /><summary type="html">本記事はGitHub Actions Advent Calendar 2020６日目の記事です。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/auto-author-assign/auto-author-assign.jpg" /><media:content medium="image" url="https://blog.toshimaru.net/images/posts/auto-author-assign/auto-author-assign.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">rubocop-rails_config v1.0 をリリースした</title><link href="https://blog.toshimaru.net/rubocop-rails-config-v1/" rel="alternate" type="text/html" title="rubocop-rails_config v1.0 をリリースした" /><published>2020-11-23T00:00:00+09:00</published><updated>2020-11-23T00:00:00+09:00</updated><id>https://blog.toshimaru.net/rubocop-rails-config-v1</id><content type="html" xml:base="https://blog.toshimaru.net/rubocop-rails-config-v1/">&lt;p&gt;&lt;a href=&quot;https://github.com/toshimaru/rubocop-rails_config&quot;&gt;rubocop-rails_config&lt;/a&gt; gem の v1.0 をリリースした。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;rubocop-rails_config v1.0.0 has been released! rubocop-rails_config now requires rubocop v1.0. &lt;a href=&quot;https://t.co/PL2v9POeVC&quot;&gt;https://t.co/PL2v9POeVC&lt;/a&gt;&lt;/p&gt;&amp;mdash; toshimaru (@toshimaru_e) &lt;a href=&quot;https://twitter.com/toshimaru_e/status/1320895710254882817?ref_src=twsrc%5Etfw&quot;&gt;October 27, 2020&lt;/a&gt;&lt;/blockquote&gt;

&lt;h2 id=&quot;今までの流れ&quot;&gt;今までの流れ&lt;/h2&gt;

&lt;p&gt;もともと作ったきっかけとかの記事。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-cards=&quot;hidden&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;つくったやつ | Railsと同じRuboCopの設定が利用できるrubocop-rails gemを作った - Hack Your Design! &lt;a href=&quot;https://t.co/szG0eLPetS&quot;&gt;https://t.co/szG0eLPetS&lt;/a&gt;&lt;/p&gt;&amp;mdash; toshimaru (@toshimaru_e) &lt;a href=&quot;https://twitter.com/toshimaru_e/status/958123075572195331?ref_src=twsrc%5Etfw&quot;&gt;January 29, 2018&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;作ったプロジェクト名を公式に譲ってリネームした話。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-cards=&quot;hidden&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;Blogged. RuboCopチームにgemの名前を譲った話 - Hack Your Design! &lt;a href=&quot;https://t.co/vumSGBK3UN&quot;&gt;https://t.co/vumSGBK3UN&lt;/a&gt;&lt;/p&gt;&amp;mdash; toshimaru (@toshimaru_e) &lt;a href=&quot;https://twitter.com/toshimaru_e/status/1019011276561833985?ref_src=twsrc%5Etfw&quot;&gt;July 17, 2018&lt;/a&gt;&lt;/blockquote&gt;

&lt;h2 id=&quot;v10-に上げたきっかけ&quot;&gt;v1.0 に上げたきっかけ&lt;/h2&gt;

&lt;p&gt;rubocopメンテナの&lt;a href=&quot;https://github.com/koic&quot;&gt;@koic&lt;/a&gt;さんとは、rubocop v1.0 に&lt;a href=&quot;https://github.com/toshimaru/rubocop-rails_config/issues/71#issuecomment-617490886&quot;&gt;あわせて rubocop-rails_config v1.0 もリリースしようぜ&lt;/a&gt;と話していた。&lt;/p&gt;

&lt;p&gt;今回rubocop v1.0 がリリースされたことに加えて、Rails本体でも&lt;a href=&quot;https://github.com/rails/rails/pull/40436&quot;&gt;rubocop v1.0が使用されるようになった&lt;/a&gt;ことをきっかけとして rubocop-rails_config も v1.0 にあげることを決めた。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-cards=&quot;hidden&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;RuboCop 1.0 がリリースされた - koicの日記&lt;a href=&quot;https://t.co/ii353h4ZBQ&quot;&gt;https://t.co/ii353h4ZBQ&lt;/a&gt;&lt;/p&gt;&amp;mdash; Koichi ITO (@koic) &lt;a href=&quot;https://twitter.com/koic/status/1318884005941374979?ref_src=twsrc%5Etfw&quot;&gt;October 21, 2020&lt;/a&gt;&lt;/blockquote&gt;

&lt;h2 id=&quot;rubocop-rails_config-v101&quot;&gt;rubocop-rails_config v1.0.1&lt;/h2&gt;

&lt;p&gt;この記事を書いている時点で既に rubocop は v1.3 までリリースされていたので、 v1.3 までのバージョンは&lt;a href=&quot;https://github.com/toshimaru/rubocop-rails_config/pull/84&quot;&gt;サポートしておいた&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/toshimaru/rubocop-rails_config/releases/tag/v1.0.1&quot;&gt;Release v1.0.1 · toshimaru/rubocop-rails_config&lt;/a&gt;&lt;/p&gt;</content><author><name>Toshimaru</name></author><category term="rubocop" /><summary type="html">rubocop-rails_config gem の v1.0 をリリースした。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/rubocop-rails-config/readme.png" /><media:content medium="image" url="https://blog.toshimaru.net/images/posts/rubocop-rails-config/readme.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Kaigi on Railsで「FactoryBot the Right Way」を発表しました</title><link href="https://blog.toshimaru.net/kaigi-on-rails/" rel="alternate" type="text/html" title="Kaigi on Railsで「FactoryBot the Right Way」を発表しました" /><published>2020-10-07T00:00:00+09:00</published><updated>2020-10-08T00:00:00+09:00</updated><id>https://blog.toshimaru.net/kaigi-on-rails</id><content type="html" xml:base="https://blog.toshimaru.net/kaigi-on-rails/">&lt;p&gt;&lt;a href=&quot;https://kaigionrails.org/&quot;&gt;Kaigi on Rails&lt;/a&gt;で「FactoryBot the Right Way」というタイトルで発表しました&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h2 id=&quot;スライド&quot;&gt;スライド&lt;/h2&gt;

&lt;script async=&quot;&quot; class=&quot;speakerdeck-embed&quot; data-id=&quot;8084985a97ce4b6685d8528388da9779&quot; data-ratio=&quot;1.77777777777778&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;アーカイブ動画&quot;&gt;アーカイブ動画&lt;/h2&gt;

&lt;p&gt;動画もYouTubeにアーカイブとして上がっておりますので、音声付きで聴きたい方はこちらをどうぞ。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;先行して &lt;a href=&quot;https://twitter.com/toshimaru_e?ref_src=twsrc%5Etfw&quot;&gt;@toshimaru_e&lt;/a&gt; さんの動画をアップしました！他のセッションも順次公開していきますのでお楽しみに！ &lt;a href=&quot;https://twitter.com/hashtag/kaigionrails?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#kaigionrails&lt;/a&gt;&lt;a href=&quot;https://t.co/duhoF1Xu1S&quot;&gt;https://t.co/duhoF1Xu1S&lt;/a&gt; &lt;a href=&quot;https://t.co/y3PRYVRlO8&quot;&gt;https://t.co/y3PRYVRlO8&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kaigi on Rails (@kaigionrails) &lt;a href=&quot;https://twitter.com/kaigionrails/status/1312397413592653824?ref_src=twsrc%5Etfw&quot;&gt;October 3, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;感想&quot;&gt;感想&lt;/h2&gt;

&lt;p&gt;今回は初のビデオ録画登壇でした。&lt;/p&gt;

&lt;p&gt;今までのリモート登壇（&lt;a href=&quot;/career-strategy-for-around-thirty-engineer/&quot;&gt;アラサーエンジニアの生存戦略&lt;/a&gt;、&lt;a href=&quot;/how-to-deal-with-fat-model/&quot;&gt;Fat Modelの倒し方&lt;/a&gt;）は基本Zoomを使ったLIVE登壇だったので、今回初めて録画登壇を経験できて良かったと思います。&lt;/p&gt;

&lt;p&gt;録画のセットアップとしては下記を利用しました。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;プレゼンテーションツール: Keynote&lt;/li&gt;
  &lt;li&gt;スライド録画+音声録音: Keynoteのレコーディング機能 (with Krisp)
    &lt;ul&gt;
      &lt;li&gt;参考: &lt;a href=&quot;https://support.apple.com/ja-jp/guide/keynote/tan8a5df9cc5/mac&quot;&gt;MacのKeynoteでオーディオを録音する - Apple サポート&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Backup用音声録音: QuickTime Player
    &lt;ul&gt;
      &lt;li&gt;参考: &lt;a href=&quot;https://support.apple.com/ja-jp/guide/quicktime-player/qtpf25d6f827/mac&quot;&gt;MacのQuickTime Playerでオーディオを録音する - Apple サポート&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;スピーカー側の動画撮影: iPad&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Kaigi on Railsのコアコンセプトは 「初学者から上級者までが楽しめるWeb系の技術カンファレンス」 です。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ということでしたが、今回の発表の内容的には初学者もそこそこ楽しめる内容になっていのではないでしょうか。参考になったのなら幸いです&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/hashtag/kaigionrails?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#kaigionrails&lt;/a&gt; 発表資料チラ見せ。FactoryBotをより上手に使いこなしたい初級者〜中級者レベルの方にはそこそこ有益な情報になっていると思いますので是非😊 &lt;a href=&quot;https://t.co/dQDOzP3BpX&quot;&gt;pic.twitter.com/dQDOzP3BpX&lt;/a&gt;&lt;/p&gt;&amp;mdash; toshimaru (@toshimaru_e) &lt;a href=&quot;https://twitter.com/toshimaru_e/status/1311079864070369280?ref_src=twsrc%5Etfw&quot;&gt;September 29, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;おわり&quot;&gt;おわり&lt;/h2&gt;

&lt;p&gt;Kaigi on Railsをオンラインで開催してくださったチーフオーガナイザーの &lt;a href=&quot;https://twitter.com/okuramasafumi&quot;&gt;@okuramasafumi&lt;/a&gt; をはじめ、運営スタッフの皆さま、ありがとうございました。&lt;/p&gt;

&lt;h2 id=&quot;参考リンク&quot;&gt;参考リンク&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;公式ドキュメント
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/thoughtbot/factory_bot/blob/master/GETTING_STARTED.md&quot;&gt;GETTING_STARTED.md&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/thoughtbot/factory_bot/blob/master/NAME.md&quot;&gt;Project Naming History&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ベンチマークソースコード
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/toshimaru/factory-bot-the-right-way&quot;&gt;toshimaru/factory-bot-the-right-way&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fukabori.fm/episode/13&quot;&gt;13. ペアプロやテストの疑問とか、ソフトウェアエンジニアの育成とか | fukabori.fm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sinsoku.hatenablog.com/entry/2017/04/09/214728&quot;&gt;Rails アンチパターン - 錆びついたファクトリー (factory_girl) - アジャイルSEの憂鬱&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://magazine.rubyist.net/articles/kaigi_on_rails/index.html&quot;&gt;Rubyist Magazine: Kaigi on Rails 特集号&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;たぶん文法的には「FactoryBot &lt;strong&gt;in&lt;/strong&gt; the right way」ってのが正しい気がするけど、こちらがゴロが良かったということでそれはご愛嬌で。。。 &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;RailsDM2018で発表したこちらの内容もあわせて参考にしていただけると :pray: &lt;a href=&quot;/rdm2018-active-record-anti-patterns/&quot;&gt;railsdm2018で「ActiveRecordデータ処理アンチパターン」を発表しました&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Toshimaru</name></author><category term="presentation" /><category term="rspec" /><category term="rails" /><summary type="html">Kaigi on Railsで「FactoryBot the Right Way」というタイトルで発表しました1。 たぶん文法的には「FactoryBot in the right way」ってのが正しい気がするけど、こちらがゴロが良かったということでそれはご愛嬌で。。。 &amp;#8617;</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/kaigi-on-rails.png" /><media:content medium="image" url="https://blog.toshimaru.net/images/posts/kaigi-on-rails.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">「アラサーエンジニアの生存戦略」を発表しました</title><link href="https://blog.toshimaru.net/career-strategy-for-around-thirty-engineer/" rel="alternate" type="text/html" title="「アラサーエンジニアの生存戦略」を発表しました" /><published>2020-08-09T00:00:00+09:00</published><updated>2020-09-11T00:00:00+09:00</updated><id>https://blog.toshimaru.net/career-strategy-for-around-thirty-engineer</id><content type="html" xml:base="https://blog.toshimaru.net/career-strategy-for-around-thirty-engineer/">&lt;p&gt;&lt;a href=&quot;https://medpeer.connpass.com/event/181835/&quot;&gt;リードエンジニアから学ぶMedPeerのプロダクト開発&lt;/a&gt;という僕が所属する企業のイベントで、「&lt;a href=&quot;https://speakerdeck.com/toshimaru/career-strategy-for-around-thirty-engineer&quot;&gt;アラサーエンジニアの生存戦略&lt;/a&gt;」というタイトルで発表しました。&lt;/p&gt;

&lt;script async=&quot;&quot; class=&quot;speakerdeck-embed&quot; data-id=&quot;314bb46f6f1e423d98dddadd84e9bc77&quot; data-ratio=&quot;1.77777777777778&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;発表の経緯&quot;&gt;発表の経緯&lt;/h2&gt;

&lt;p&gt;もともとの発表の着想となったエントリはこちらになります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/like-a-sponge-as-an-engineer/&quot;&gt;技術者としてスポンジであり続けること　あるいは老害回避戦略の話&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;エンジニアリングとは常に学習し続けることである。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;思うに、コードを書かず学習意欲を失ってしまった35歳のおじさんたちが自分がコードが書けないこと・学ばないことの言い訳として言い出し始めたのがこの「35歳定年説」の真実じゃないだろうか。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;この文章は僕自身が若手とは言えない年齢となり今後シニアな立場へとなっていく中で「自分は老害化していくのではないか」という危機感から自戒も込めて書いたものである。願わくば五年後十年後自分がここに書いたような老害になっていないことを祈る。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;この記事のトピックとしては、「エンジニアの学習」「老害にならないためのマインド」になります。&lt;/p&gt;

&lt;p&gt;これらのトピックに「キャリア論」を加えて、「エンジニアにとってのキャリア戦略」みたいな話はどこかでまとめてみたいなー、という思いがありました。&lt;/p&gt;

&lt;p&gt;そんな中、僕の所属する企業から「会社ミートアップを開催するので、シニアエンジニア向けのネタで登壇してくれないか？」という話が舞い込んできたので、今回の発表に至ったという感じです。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;会社主催イベントの登壇依頼来ているけど、同僚が十分にテックトークしてくれそうなので、僕はアラサーエンジニア向けのエモエモ・エンジニアキャリアトークでもしようかと画策している&lt;/p&gt;&amp;mdash; toshimaru (@toshimaru_e) &lt;a href=&quot;https://twitter.com/toshimaru_e/status/1281043327958147072?ref_src=twsrc%5Etfw&quot;&gt;July 9, 2020&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;また、僕自身がアラサーといえる世代ではなくなってきて（35歳に接近してきていて）自分の今の考えをスナップショットとして残しておきたかったという思いもあります。この発表内容がアラフォーになっても通じるものかは今後自分自身の身を持って検証していきたいと思っています。&lt;/p&gt;

&lt;p&gt;正直、この手のキャリア論みたいなものはおっさんの成功体験語りみたいなものになりがちな気がしていて（それこそ老害トークですね）、そうはならないように気をつけたつもりです。&lt;/p&gt;

&lt;p&gt;なのでスライド中にも書いた通り、歩むキャリアに「正解はない」というスタンスですし、最終的に「自分の道は自分で決める」というスタンスです。安易な正解はないとした上で、確固たる軸は確立しておきましょうねという話です。&lt;/p&gt;

&lt;h2 id=&quot;発表のメインメッセージ&quot;&gt;発表のメインメッセージ&lt;/h2&gt;

&lt;p&gt;今回の発表のメインメッセージとしては要約すると下記の通りです。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;技術の判断軸（審美眼）を持ち、継続的に学習しましょう&lt;/li&gt;
  &lt;li&gt;自身の仕事の価値観（仕事観）を明確にし、成長できるキャリアを歩みましょう&lt;/li&gt;
  &lt;li&gt;成長のためにチャレンジし続けよう&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;審美眼という言葉は &lt;a href=&quot;https://twitter.com/t_wada&quot;&gt;twada&lt;/a&gt; さんからお借りいたしました。詳しくは&lt;a href=&quot;https://speakerdeck.com/twada/worse-is-better-understanding-the-spiral-of-technologies-2019-edition&quot;&gt;スライド&lt;/a&gt;と合わせて下記Podcastを聴いてみるとよいかと思います。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://fukabori.fm/episode/28&quot;&gt;28. 技術選定の審美眼(1) w/ twada | fukabori.fm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fukabori.fm/episode/29&quot;&gt;29. 技術選定の審美眼(2) w/ twada | fukabori.fm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;お前の場合どうなのよ&quot;&gt;お前の場合どうなのよ？&lt;/h2&gt;

&lt;p&gt;おっさんの成功体験語りにならないようにあえて自分の話は発表内には多くは入れませんでした。ただ本発表に至る原体験としては僕自身の20代の経験が元になっていることは間違いありません。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://files.speakerdeck.com/presentations/314bb46f6f1e423d98dddadd84e9bc77/slide_12.jpg&quot; alt=&quot;全能感&quot; /&gt;&lt;/p&gt;

&lt;p&gt;これとかまさに20代中盤くらいの僕です。&lt;/p&gt;

&lt;p&gt;若手時代は黙ってても成長してきました。時期的には丁度新卒3~5年くらいですかね。そりゃそうだ、知らないことしかない。ただ目の前の技術を追いかけるだけで十分成長してきた。ある程度成長実感を得た、さぁどうする？　周囲を見渡す、そこにはさらに広い世界があった。自分の小ささを実感する、20代後半。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://files.speakerdeck.com/presentations/314bb46f6f1e423d98dddadd84e9bc77/slide_19.jpg&quot; alt=&quot;憂鬱&quot; /&gt;&lt;/p&gt;

&lt;p&gt;そんなときに僕がとったチャレンジが「マネージャーへの挑戦」でした。単に技術者としてやっているだけじゃ成長に陰りが出てきた。＜非連続的な成長＞へとつながるNext Dotがマネージャーへの挑戦だったわけです。実際振り返ってみると、これは僕にとっての大きな成長へとつながったと実感しています。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://files.speakerdeck.com/presentations/314bb46f6f1e423d98dddadd84e9bc77/slide_59.jpg&quot; alt=&quot;チャレンジする&quot; /&gt;&lt;/p&gt;

&lt;p&gt;（一方で、この手のチャレンジは誰しもが即座にできるわけでなくタイミング・運も重要なので、そういう意味で僕は運が良かったと思っています）&lt;/p&gt;

&lt;h2 id=&quot;ロールモデルになっている人たち&quot;&gt;ロールモデルになっている人たち&lt;/h2&gt;

&lt;p&gt;発表内ではバイネームで言及しなかったものの、いくつかロールモデルになっている人たちを補足します&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h3 id=&quot;35歳定年説とか関係なさそうな人&quot;&gt;35歳定年説とか関係なさそうな人&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Miyagawa さん
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://rebuild.fm/&quot;&gt;Rebuild.fm&lt;/a&gt;のホストの方&lt;/li&gt;
      &lt;li&gt;昔からPerl Hackerとして有名で、現Fastly勤務、アメリカ在住&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/kazuho&quot;&gt;kazuho&lt;/a&gt; さん
    &lt;ul&gt;
      &lt;li&gt;同Fastly勤務、&lt;a href=&quot;https://github.com/h2o/h2o&quot;&gt;H2O&lt;/a&gt;の作者&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://blog.kazuhooku.com/2017/01/fastly.html&quot;&gt;OSS活動が転職のきっかけになった&lt;/a&gt;のは良い話&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mattn&quot;&gt;mattn&lt;/a&gt; さん
    &lt;ul&gt;
      &lt;li&gt;OSSの世界で大活躍している方&lt;/li&gt;
      &lt;li&gt;本当に幅広くOSSコントリビュートされていてすごいなぁと尊敬します&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Guido van Rossum
    &lt;ul&gt;
      &lt;li&gt;Python の作者。GoogleからDropboxに転職&lt;/li&gt;
      &lt;li&gt;引退に至る最後の最後までエンジニアリングし続けた人。カッコイイ！
        &lt;ul&gt;
          &lt;li&gt;
            &lt;blockquote&gt;
              &lt;p&gt;While mypy was one of the projects Guido spent a lot of his time on, he also cared deeply about making engineering culture, both at Dropbox and in the Python community, more inclusive for women.&lt;/p&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://blog.dropbox.com/topics/company/thank-you--guido&quot;&gt;Thank you, Guido | Dropbox Blog&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;登大遊さん
    &lt;ul&gt;
      &lt;li&gt;最近だとこのニュースが話題になりました: &lt;a href=&quot;https://xtech.nikkei.com/atcl/nxt/column/18/00001/04192/&quot;&gt;天才プログラマーのテレワークシステムに4万人殺到、開発費わずか65万円&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;彼のすごさはこの記事に集約されています。絶対マネはできませんが…
        &lt;ul&gt;
          &lt;li&gt;
            &lt;blockquote&gt;
              &lt;p&gt;僕は、1 日に少なくとも 3,000 行程度、多く書くときで 10,000 行以上のプログラムを書くことができる。その結果、多い月で 10 万行 / 月くらいである。なお、言語は書くソフトウェアの性質上、大半が C 言語である。&lt;/p&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://softether.hatenadiary.org/entry/20070324/p1&quot;&gt;論理的思考の放棄 - 登 大遊 (Daiyuu Nobori) の個人日記&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;楽しんで技術学習している人&quot;&gt;楽しんで技術学習している人&lt;/h3&gt;

&lt;p&gt;「継続的学習において楽しむことは重要だ」と発表しましたが、楽しんで学習を継続してる方で参考にしたい方でいうと下記です。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/DQNEO&quot;&gt;ドキュネオ&lt;/a&gt;さん
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://qiita.com/DQNEO/items/2efaec18772a1ae3c198&quot;&gt;Goコンパイラをゼロから作って147日でセルフホストを達成した - Qiita&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;楽しんで続けていたからこそできる偉業だなぁと思いました&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=d0mYwTj2O1M&quot;&gt;builderscon の発表&lt;/a&gt;も素晴らしい&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/tomzoh&quot;&gt;tomzoh&lt;/a&gt; さん
    &lt;ul&gt;
      &lt;li&gt;PHPer Kaigi Organizerの方（いろいろなイベントのオーガナイザーやってらっしゃってすごい）&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.hasegawa-tomoki.com/blog/2018/10/16/php-terminal-nes-emulator/&quot;&gt;PHPで動くファミコンエミュレータを作った&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;PHPでファミコンエミュレータを作ってみようという発想がすごいし、達成するのもすごい&lt;/li&gt;
          &lt;li&gt;（とむぞーさん以外にもファミコンエミュレータを作ってらっしゃる方は多くいるようです。こういった興味の持てる学習トピックを１つ見つけてやり込むのは良さそうですね）&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/Lily0727K&quot;&gt;Lillian&lt;/a&gt; さん
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://note.com/neko_chan0214/n/n3a64bc1e1412&quot;&gt;医師 → Google という異色の経歴&lt;/a&gt;の方&lt;/li&gt;
      &lt;li&gt;地頭よければソフトウェアエンジニアへの転身も華麗にできるという良い例&lt;/li&gt;
      &lt;li&gt;プログラミング初学者は学習リソースとか学習方法は参考にしてみていいかもしれません&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;エンジニア35歳定年説の嘘&quot;&gt;「エンジニア35歳定年説」の嘘&lt;/h2&gt;

&lt;p&gt;上記に紹介させていただいた方々はほんのごく一部ですが、そんな方々を見ていて「もう35歳だしコードは書けないわぁ」とか「新しいこと学習できなくなってきたわぁ」とか言ってられないのは明白ですね。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://files.speakerdeck.com/presentations/314bb46f6f1e423d98dddadd84e9bc77/slide_22.jpg&quot; alt=&quot;定年説&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;アラフォーアラフィフに向けて&quot;&gt;アラフォー、アラフィフに向けて&lt;/h2&gt;

&lt;p&gt;一方で「生涯コードを書き続ける」ことだけが正解だとは思っていなくて、Linux作者のリーナス・トーバルズやRuby作者のMatzのように&lt;a href=&quot;https://ja.wikipedia.org/wiki/%E5%84%AA%E3%81%97%E3%81%84%E7%B5%82%E8%BA%AB%E3%81%AE%E7%8B%AC%E8%A3%81%E8%80%85&quot;&gt;優しい終身の独裁者&lt;/a&gt;として存在を確立している人もいます。彼らは今でこそ最前線でコードは書いてはいませんが、コミュニティにとって重要な存在であることは言うまでもないでしょう。&lt;/p&gt;

&lt;p&gt;またエンジニアキャリアパスの上を目指す人は技術以外の知識を深める必要が出てくるでしょう。具体的には組織運営の手法であったり経営に関する知識であったりします。アラフォー、アラフィフに向けてジョブグレードを高めていきたい人にとってはより多角的な知識・経験が求められるようになっていく気がしています。&lt;/p&gt;

&lt;p&gt;今回の発表は僕自身がアラサーだったのでターゲットとしてもアラサー世代になりましたが、アラフォー世代にも通じるところが多くあるとは考えているので&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;（アラフィフ世代に通じるかは自信がないですが）、今後僕がアラフォー世代になったときに本発表内容がどれだけ通じるのかは僕自身検証していきたいと思っています。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://files.speakerdeck.com/presentations/314bb46f6f1e423d98dddadd84e9bc77/slide_38.jpg&quot; alt=&quot;雑キャリアパス&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;アンサーソング&quot;&gt;アンサーソング&lt;/h2&gt;

&lt;p&gt;元同僚が良いツッコミを書いてくれました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://note.com/imagawa_yakata/n/na2ddc9126f7f&quot;&gt;アラサー終盤エンジニアの生存戦略｜いまがわ｜note&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;しかしこうした「成長」を最も重視したキャリアのモデルはアラサーエンジニア全般に適したものでは無い。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;要するにとしまるさんの発表はエンジニアの「成長戦略」であって「生存戦略」ではないと言いたかった&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;指摘としてはもっともで、発表タイトルとしては＜生存戦略＞というキャッチーな言葉をあえて選びましたが、正しくタイトルを付けると＜成長戦略＞であり、もっと言うなら「アラサーエンジニアの成長のためのキャリア戦略」と言うべきものでしょう。&lt;/p&gt;

&lt;p&gt;本発表は「成長したいと思っているエンジニア」を暗黙的なターゲットとしており、「別に成長とかどうでもいいし〜」みたいな人にはあまり響かない・刺さらないかもしれません。一方、そんな人にも共通して言えることがあって、それが「キャリアの軸・仕事観は持っておく」ということです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://files.speakerdeck.com/presentations/314bb46f6f1e423d98dddadd84e9bc77/slide_67.jpg&quot; alt=&quot;ぶれない軸&quot; /&gt;&lt;/p&gt;

&lt;p&gt;それさえハッキリしていれば特に僕から言うこともないし、迷うこともないと思うんですよね。&lt;/p&gt;

&lt;p&gt;例えば「俺は何より金が重要じゃ！」って人はお賃金だけを指標として持ってキャリアを選択していけばいいし、「この事業にフルコミットしたいんじゃ！他の要素はどうでもええ！」って人は自分の目先の成長ではなくフルコミットしたい事業成長に全力を注ぐべきだと思います（えてしてそれが自分の成長にも結果的につながるケースが多い）。むしろそちらのほうが変に＜成長＞に束縛されず楽しく生きていけそうで健全とさえ感じます。&lt;/p&gt;

&lt;p&gt;発表内のメッセージとしては「エンジニア業界で長く生存し続けられるのは最後まで学習しつづけるヤツだ」という意識高い系メッセージでしたが、そもそも成長しなくともある程度技術力があればしばらくやっていけると正直思いますし、「成長しないキャリアを選択した」のであればそれはそれで全く否定すべきものではないでしょう。&lt;/p&gt;

&lt;p&gt;最終的にやっぱり一番大事なのは「&lt;strong&gt;自分の道は自分で決める&lt;/strong&gt;」、これに尽きると思います。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://files.speakerdeck.com/presentations/314bb46f6f1e423d98dddadd84e9bc77/slide_68.jpg&quot; alt=&quot;自分の道は自分で決める&quot; /&gt;&lt;/p&gt;

&lt;!-- （説教臭いのでカット）年齢を経るにつれ人間の価値観は良い意味でも悪い意味でも固定化していきます。（僕の発表含め）それに口出しする人がいるかもしれません。それに「うるせぇ」と返せるくらいの軸を持ちましょう。他人に耳を貸すなという意味ではありません。他の人の話を聴いた上でそれを自分の中で消化（昇華）して、「これが俺の人生だ」って納得して、胸を張って言える人生が素敵だなぁと思います。 --&gt;

&lt;h2 id=&quot;発表を終えての感想&quot;&gt;発表を終えての感想&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;今回はエモめ成分多めの発表だったので Keynote を使ってスライドを作成しました
    &lt;ul&gt;
      &lt;li&gt;図・絵を自由に入れられたり、レイアウトを柔軟に変えたりできるのは良い（markdown のみで作ったスライドだとこうもいきません）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;画像素材は &lt;a href=&quot;https://pixabay.com/ja/&quot;&gt;pixabay&lt;/a&gt; を使わせていただきました
    &lt;ul&gt;
      &lt;li&gt;プレゼン内で画像素材を適切に使うことで、オーディエンスに内容をよりイメージさせやすくすることができます&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;リモート発表は&lt;a href=&quot;/how-to-deal-with-fat-model-after/&quot;&gt;銀座Railsの前回&lt;/a&gt;に引き続き二回目だったのですんなりできました
    &lt;ul&gt;
      &lt;li&gt;やっぱりオーディエンスの顔が見れないとか、反応ないとかは悲しいけど、これがIT系勉強会のニューノーマルだと思って落ち着くまではこのスタイルを続けたいと思います&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;ここではあくまで知名度のある人だけ書きます。ですが有名であることがロールモデルになる人の必要条件というわけではありません。 &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;実際、はてブコメントを観ていると「アラサーより上の世代だけどわかる」というコメントが寄せられていました。 &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Toshimaru</name></author><category term="presentation" /><summary type="html">リードエンジニアから学ぶMedPeerのプロダクト開発という僕が所属する企業のイベントで、「アラサーエンジニアの生存戦略」というタイトルで発表しました。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/career/slide_0.jpg" /><media:content medium="image" url="https://blog.toshimaru.net/images/posts/career/slide_0.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Rubyで数値の0埋め</title><link href="https://blog.toshimaru.net/ruby-0-padding/" rel="alternate" type="text/html" title="Rubyで数値の0埋め" /><published>2020-06-30T00:00:00+09:00</published><updated>2020-06-30T00:00:00+09:00</updated><id>https://blog.toshimaru.net/ruby-0-padding</id><content type="html" xml:base="https://blog.toshimaru.net/ruby-0-padding/">&lt;p&gt;Rubyで数値の0埋めするときの書き方をよく忘れるのでメモ。&lt;/p&gt;

&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;結論としては下記のように書くとよい。&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;number: %09&amp;lt;number&amp;gt;d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;number: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; &quot;number: 000000001&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;rubyで数値の0埋め&quot;&gt;Rubyで数値の0埋め&lt;/h2&gt;

&lt;p&gt;Rubyで数値の0埋めしようと思うとこんな感じのコードになる。&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;number: %09d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; &quot;number: 000000001&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.ruby-lang.org/ja/latest/doc/print_format.html&quot;&gt;sprintf フォーマット&lt;/a&gt;はC由来の関数だ。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%09d&lt;/code&gt;の意味としては&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%d&lt;/code&gt;が数値、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;09&lt;/code&gt;は9桁の0埋めという意味になる。&lt;/p&gt;

&lt;p&gt;また、&lt;a href=&quot;https://docs.ruby-lang.org/ja/latest/class/String.html#I_--25&quot;&gt;String#%&lt;/a&gt;を使う方法もある。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sprintf&lt;/code&gt;と同じ挙動をする。&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;number: %09d&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; &quot;number: 000000001&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;こちらのほうがより簡潔な表記だ。&lt;/p&gt;

&lt;h2 id=&quot;rubocopのオススメ書き方&quot;&gt;RuboCopのオススメ書き方&lt;/h2&gt;

&lt;p&gt;上述の書き方でも問題ないのだが、rubocop（デフォルト設定）に通すと下記の通り怒られる。&lt;/p&gt;

&lt;h3 id=&quot;favor-format-over-sprintf&quot;&gt;Favor format over sprintf&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C: Style/FormatString: Favor format over sprintf.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sprintf&lt;/code&gt;ではなく&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;format&lt;/code&gt;を使え、と。また &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;String#%&lt;/code&gt; を使った書き方も下記の指摘がくる。&lt;/p&gt;

&lt;h3 id=&quot;favor-format-over-string&quot;&gt;Favor format over String#%&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C: Style/FormatString: Favor format over String#%.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ちなみに&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;format&lt;/code&gt;は&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sprintf&lt;/code&gt;のエイリアス関数。&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;rb_define_global_function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sprintf&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f_sprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rb_define_global_function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;format&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f_sprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ref. &lt;a href=&quot;https://github.com/ruby/ruby/blob/946e5cc668f66a4a0b79461047d3fcba8b71eef0/object.c#L4630-L4631&quot;&gt;ruby/object.c at 946e5cc668f66a4a0b79461047d3fcba8b71eef0 · ruby/ruby&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;rubocopの指摘に従って下記のように修正してみる。&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;number: %09d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; &quot;number: 000000001&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;prefer-annotated-tokens&quot;&gt;Prefer annotated tokens&lt;/h3&gt;

&lt;p&gt;これでもrubocopに下記のように怒られる。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C: Style/FormatStringToken: Prefer annotated tokens (like %&amp;lt;foo&amp;gt;s) over unannotated tokens (like %s).
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;foo&amp;gt;&lt;/code&gt;のようなannotated tokenを使って名前を与えてやれ、とのことらしい。&lt;/p&gt;

&lt;h2 id=&quot;結論&quot;&gt;結論&lt;/h2&gt;

&lt;p&gt;rubocopの指摘を乗り越えて、最終的には下記で完成です。&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;number: %09&amp;lt;number&amp;gt;d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;number: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; &quot;number: 000000001&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Toshimaru</name></author><category term="ruby" /><summary type="html">Rubyで数値の0埋めするときの書き方をよく忘れるのでメモ。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/ruby/zero-padding.png" /><media:content medium="image" url="https://blog.toshimaru.net/images/posts/ruby/zero-padding.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>