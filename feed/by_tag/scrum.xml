<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://blog.toshimaru.net/feed/by_tag/scrum.xml" rel="self" type="application/atom+xml" /><link href="https://blog.toshimaru.net/" rel="alternate" type="text/html" /><updated>2021-05-10T00:55:05+09:00</updated><id>https://blog.toshimaru.net/feed/by_tag/scrum.xml</id><title type="html">Hack Your Design!</title><subtitle>toshimaruの技術系なブログ</subtitle><author><name>Toshimaru</name></author><entry><title type="html">認定スクラムマスター研修に行ってきました</title><link href="https://blog.toshimaru.net/scrum-training/" rel="alternate" type="text/html" title="認定スクラムマスター研修に行ってきました" /><published>2016-01-20T00:00:00+09:00</published><updated>2018-02-08T00:00:00+09:00</updated><id>https://blog.toshimaru.net/scrum-training</id><content type="html" xml:base="https://blog.toshimaru.net/scrum-training/">&lt;p&gt;昨年末にスクラムマスター研修を受けてきて、認定スクラムマスター (CSM)となりました。スクラムマスター研修で学んだこととして社内で共有した内容を本ブログでも共有してみようと思います。&lt;/p&gt;

&lt;h2 id=&quot;scrum-vs-agile-歴史から学ぶ&quot;&gt;Scrum vs Agile 〜歴史から学ぶ〜&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;1993年: スクラム誕生&lt;/li&gt;
  &lt;li&gt;2001年: アジャイルソフトウェア開発宣言
    &lt;ul&gt;
      &lt;li&gt;アジャイルマニフェスト: &lt;a href=&quot;http://agilemanifesto.org/iso/ja/manifesto.html&quot;&gt;アジャイルソフトウェア開発宣言&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;アジャイル原則:  &lt;a href=&quot;http://agilemanifesto.org/iso/ja/principles.html&quot;&gt;アジャイル宣言の背後にある原則&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;アジャイルは「より良い開発/方法を探している」という状態のことです。状態なので原理的には「アジャイル開発をしている」という表現は正しくありません。振り返ってみて「あのプロジェクトはアジャイルだった」と評価できるもの。極端に言うといわゆるウォーターフォール型の開発も１つのアジャイルと定義することもできます。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Don’t do agile, be agile&lt;/em&gt; （訳: アジャイル開発をするな、アジャイルであれ）&lt;/p&gt;

&lt;p&gt;スクラムのほうがアジャイルより歴史的には古く、アジャイルの定義が曖昧な一方、スクラムはきちんと確立された方法論で現在もアップデートされ続けているフレームワークです(年２回)。ただ出版社のマーケティング戦略的に「アジャイル」というバズワードを使わなきゃ本が売れないという理由もあってか、世の中には＜アジャイルという皮を被った何か＞が氾濫しています。「アジャイル」という魔法のコトバに惑わされてはいけないのです。&lt;/p&gt;

&lt;h2 id=&quot;スクラムとは何か&quot;&gt;スクラムとは何か？&lt;/h2&gt;

&lt;p&gt;スクラムとは &lt;strong&gt;＜現状を把握するためのフレームワーク＞&lt;/strong&gt;。どのプロジェクトにおいても現状を把握した結果、大体において問題はあることから &lt;strong&gt;＜問題を発見するフレームワーク＞&lt;/strong&gt; と言われることもあります。&lt;/p&gt;

&lt;p&gt;なのでポイント（超重要！）は、スクラムをやったからといって、&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;生産性は向上しません&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;人が成長することはありません&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;プロダクトが改善することはありません&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;あくまでもこれらは、現状を把握した結果として期待できるものであって、スクラムをやれば必ず得られる結果というわけではありません。スクラムもまた、銀の弾丸ではないのです。&lt;/p&gt;

&lt;p&gt;逆にチームの現状を把握できていないのであれば、それはスクラムとは呼べません。そして「スクラムは優秀な人じゃなければできない」というのも間違いです。優秀じゃない人でも現状を把握してそこそこの成果を出せるようにするのがスクラムというフレームワークです。&lt;/p&gt;

&lt;h2 id=&quot;スクラムのルール&quot;&gt;スクラムのルール&lt;/h2&gt;

&lt;p&gt;全部で19個あります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/scrum/scrum1.png&quot; alt=&quot;scrum&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;スクラムの三本柱&quot;&gt;スクラムの三本柱&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;透明性&lt;/strong&gt; – Transparency&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;検証&lt;/strong&gt; – Inspect&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;適合&lt;/strong&gt; (検証に基づいた適合) – Adapt&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;スクラムの３つの役割&quot;&gt;スクラムの３つの役割&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;プロダクトオーナー&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;チームのROIを最大化させる（ビジネスのROIではないということに注意）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;スクラムマスター&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;開発が Scrum と呼べる状態にする&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;スクラムじゃない方法を提案するのもまた、スクラムマスターの役割&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;チーム&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;7人±2人&lt;/strong&gt; が１つのスクラムチームを構成するのがのぞましいとされています。&lt;/p&gt;

&lt;h3 id=&quot;スクラムの5つのセレモニー&quot;&gt;スクラムの5つのセレモニー&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Sprint Planning – スプリント計画&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;短期計画&lt;/li&gt;
      &lt;li&gt;何を実現しようとしているのかを明確に&lt;/li&gt;
      &lt;li&gt;どの順番（優先順位）で開発を進めるのか&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Daily Scrum – デイリースクラム/朝会（朝じゃなくてもよい）&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;15分間&lt;/li&gt;
      &lt;li&gt;毎日の学習を共有&lt;/li&gt;
      &lt;li&gt;議論は行わない&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Product Backlog Refinement – プロダクトバックログ見直し&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;中長期計画（現在のスプリントは含まれないことに注意）&lt;/li&gt;
      &lt;li&gt;スプリントの5-10%使って見直しを行う&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sprint Review – スプリントレビュー&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;動くプロダクト・ドキュメントで成果を確認する&lt;/li&gt;
      &lt;li&gt;プロダクト触ってもっとプロダクトを良くする&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sprint Retrospective – スプリントレトロスペクティブ/振り返り&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;チームが生産性を高めるために取らなきゃいけないアクションを1つ以上決める&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/scrum/scrum2.jpeg&quot; alt=&quot;scrum sprint&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;アーチファクト&quot;&gt;アーチファクト&lt;/h3&gt;

&lt;p&gt;アーティファクト、成果物とでも訳しましょうか。下記４つがそれにあたります。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;スプリントバックログ&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;プロダクトバックログ&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Impediment List&lt;/strong&gt; - 障害リスト&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Acceptance Criteria&lt;/strong&gt; - 受け入れ条件&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;その他&quot;&gt;その他&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Sprint&lt;/strong&gt; - スプリント&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sprint Stop&lt;/strong&gt; - スプリント停止&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DONE&lt;/strong&gt; - 製品が完了する&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Potentially shippable product increment&lt;/strong&gt; – 出荷可能な製品をリリースする&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;スクラムが適さないシーン&quot;&gt;スクラムが適さないシーン&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;プロダクトの生産期間が短い
    &lt;ul&gt;
      &lt;li&gt;例) 2ヶ月で終わってしまうプロジェクト&lt;/li&gt;
      &lt;li&gt;スクラムはチームビルディングで最低３ヶ月かかる。そしてその３ヶ月を反復してチームを改善させていく。つまり３ヶ月以内のプロジェクトでスクラムを行うのは難しい（やれなくもないが）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;要件・技術が単純なプロダクト
    &lt;ul&gt;
      &lt;li&gt;スクラムは要件・技術的要素が複雑な場合に適したアプローチ&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;自律的なチームとは&quot;&gt;自律的なチームとは&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;チームの明確なゴールがある&lt;/li&gt;
  &lt;li&gt;チームの明確なバウンダリー（境界線）がある&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;「自律的なチームかどうかの判断基準は何？」への回答は「&lt;strong&gt;個人がチームのゴールを達成するために何をすべきか0.1秒以内に判別し行動できる&lt;/strong&gt;」といえます。&lt;/p&gt;

&lt;h2 id=&quot;見積もり方法&quot;&gt;見積もり方法&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;相対見積もり&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;一番簡単なタスクのポイントが1だとしてそれに対する相対的な見積もり&lt;/li&gt;
      &lt;li&gt;プロダクトバックログアイテムはこちらの見積もり方法が適している&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;絶対見積もり&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;xx時間とかの見積もり&lt;/li&gt;
      &lt;li&gt;スプリントバックログアイテムにはこちらの方法が適している&lt;/li&gt;
      &lt;li&gt;1スプリントバックログアイテムが0.5時間〜1時間になるのが理想的な状態&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;ここで重要なポイントとしては &lt;strong&gt;スクラムマスターは絶対に計画せずにチームが進むことを許容してはいけません&lt;/strong&gt; 。スクラムをやるなら &lt;strong&gt;徹底的に計画してください。妥協は許されません&lt;/strong&gt; ここがスクラムをやる上でのチームが持たなければならない＜覚悟＞となります。逆に言うとこの覚悟が持てないならスクラムをやるべきではありません。&lt;/p&gt;

&lt;h2 id=&quot;done&quot;&gt;DONE&lt;/h2&gt;

&lt;p&gt;DONEはDefinition of doneのことです。そしてDefinition of doneには doneとundoneの２つが含まれます。&lt;/p&gt;

&lt;p&gt;どういうことでしょうか。例えば「ログイン機能を作る」というタスクを考えてみましょう。ログイン機能のDONEとして何をイメージするでしょうか？「フォームに正しい値を入力して正しくログインできること」「間違った値を入力してログインできないこと」「変な値でバリデーションエラーメッセージがでること」などが簡単に思い浮かぶと思います。&lt;/p&gt;

&lt;p&gt;ではそれで本当にログイン機能はDONEと言えるのでしょうか。違います、DONEにはログイン機能の単体テストやその結合テスト、さらにはセキュリティテスト、負荷テスト、またはその機能のドキュメンテーションも全て含まれてのDONEです。そしてDONEにはそれで完了しているdoneとそれで完了しなかった、例えばこのケースで言うと「テストは後でかこう」「セキュリティ試験は全ての機能が完成してから実施」などのundoneも含まれています。&lt;/p&gt;

&lt;p&gt;このundoneが後回しになって積み上がった状態がプロジェクトの炎上状態であり、スクラムとして不健全な状態といえます。健全なスクラムは１スプリント毎にこのundoneを着実に消化していきます。&lt;/p&gt;

&lt;h2 id=&quot;プロダクトバックログの書き方&quot;&gt;プロダクトバックログの書き方&lt;/h2&gt;

&lt;p&gt;研修ではユーザーストーリーとAcceptance Criteriaの２つを書いて１つのプロダクトバックログアイテムとしました。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;ユーザーストーリー&lt;/strong&gt;: {who}として {what}がほしい なぜなら{why}だから&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Acceptance Criteria&lt;/strong&gt;: 受け入れ条件 ユーザーストーリーが達成できたといえる &lt;strong&gt;誰が見てもわかる明確な条件&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ベロシティ&quot;&gt;ベロシティ&lt;/h2&gt;

&lt;p&gt;これらのプロダクトバックログアイテムに対して先ほどの見積もりのポイントを付けていきます。そして &lt;strong&gt;1スプリント中にチームが消化できるポイント数のことをベロシティ&lt;/strong&gt; といいます。&lt;/p&gt;

&lt;p&gt;このベロシティは安定させるべきです。もしベロシティが安定していないのならばそれはポイントの付け方が間違っているか、チームに何かしら問題がある可能性が高いです。&lt;/p&gt;

&lt;h2 id=&quot;スクラムが成功している状態とは&quot;&gt;スクラムが成功している状態とは？&lt;/h2&gt;

&lt;p&gt;スクラムチームとして &lt;strong&gt;3ヶ月で46%生産性が向上している状態&lt;/strong&gt; がスクラムが成功している状態です。じゃあ46%向上している状態とはどう測ったらよいかというと、スクラム講師曰く、先ほど言及したundoneが3ヶ月というスパンで1つでも消化できていれば46%生産性が上がったと言っていいとのことでした。&lt;/p&gt;

&lt;p&gt;しかしこれは非常に難しいことで、どんなに成功しているスクラムチームでも1年に1回でもそれが達成できていればうまくできているほうだとのことでした。&lt;/p&gt;

&lt;h2 id=&quot;スクラムマスター役割スキル&quot;&gt;スクラムマスター役割・スキル&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;状況分析&lt;/strong&gt;: シチュエーショニング&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;ティーチング&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;ファシリテーティング&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;メンタリング&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;コーチング&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そしてスクラムマスターはこれらの行為をやるだけで満足してはいけません。やった上で &lt;strong&gt;結果が出ないと意味がありません。&lt;/strong&gt; つまりティーチングをやったからスクラムマスターの役割を果たしたとはいえず、ティーチングをやった結果、それを受けた者の行動が変わることも含めてスクラムマスターの役割ということです。&lt;/p&gt;

&lt;p&gt;「謙虚さ」と同時に「屈強さ」がスクラムマスターには必要です。&lt;/p&gt;

&lt;h2 id=&quot;受講してみての感想&quot;&gt;受講してみての感想&lt;/h2&gt;

&lt;p&gt;今回のスクラムマスター研修では「スクラムとは何か」を原理的な立場から学びました。&lt;/p&gt;

&lt;p&gt;受講してわかったことは世の開発現場には似非スクラムが溢れているなーってことでした。スプリント回しているからスクラムですとか、カンバンでタスク管理して朝会やってスクラムですとか、リソース足りないのでうちは開発チームメンバーとスクラムマスターをの２つのロールを兼任してますとか…。&lt;/p&gt;

&lt;p&gt;スクラムの基本原則から言うと役割の兼任はNGですし、スクラムは具体的なタスク管理手法は規定していないのでカンバンでやろうとJIRAでやろうとGithub Issueでやろうとそれはスクラムの原理原則とは関係ありません。&lt;/p&gt;

&lt;p&gt;朝会以外にもスクラムの大事なセレモニーはあって必ずそれらはスキップしてはいけないものとなってます。スプリントを回すにしても、ちゃんとそのスプリントは計画とあっていたのかとか、ちゃんと受け入れ条件をクリアする品質でスプリントの成果物が上がってるかとか、スプリント間に差し込みタスクがなかったかとかいろいろやらなきゃいけないことや考えることはあります。&lt;/p&gt;

&lt;p&gt;そして感じたこととしては、スタートアップのアーリーフェーズだとなかなか原理的な意味でのスクラムは難しいのではということでした。スクラムやりたくともリソースが全然足りないのでスクラムマスター、プロダクトオーナーはそもそも置けないとか、スクラムのロールを兼任せざるを得ないとか。&lt;/p&gt;

&lt;p&gt;またアーリーフェーズだと人の出入り（特に新しいメンバーを迎えるケース）も激しいと思うのでそうなるとスクラムチームは再度チームビルディングからやり直さなければなりません（このチームビルディングで1 Sprintは消費すると言われています）。&lt;/p&gt;

&lt;p&gt;なのでこういった開発現場で出来ることとしてはスクラムのフレームワークの中で良いと思うもの、有効だと思うものを選択して組織に有効な＜スクラムエッセンスを取り入れた開発＞を実践することではないでしょうか。&lt;/p&gt;

&lt;p&gt;一方で上記に書いたように「スクラムじゃない別の方法を提案するのもスクラムマスターの役割」と書きました。なのでスクラムにこだわる必要は全然なくて、スクラムがチームにマッチしないと思うならスクラムマスターは別の手法を提案できなきゃダメです。例えばそれがウォーターフォールでもいいしDDDでもいいしリーンスタートアップだっていいのです。&lt;/p&gt;

&lt;p&gt;そういう意味でスクラムマスターは(おそらく皆が)思っている以上にその役割を全うすることが難しいものだと感じました。&lt;/p&gt;

&lt;h2 id=&quot;参考になりそうな他の人の体験記&quot;&gt;参考になりそうな他の人の体験記&lt;/h2&gt;

&lt;p&gt;スクラムマスター研修に行かれた他の方の体験記を紹介します。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://makopi23.blog.fc2.com/blog-entry-155.html&quot;&gt;makopi23のブログ 認定スクラムマスター研修（CSM）を振り返る&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://qiita.com/kara_i/items/fab490c08bb467d2c842&quot;&gt;認定スクラムマスター研修のメモ書き - Qiita&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.slideshare.net/yangiYa/csm2014-1114&quot;&gt;認定スクラムマスター研修に行ってきました&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;こちらも参考にどうぞ&quot;&gt;こちらも参考にどうぞ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.scrumguides.org/download.html&quot;&gt;公式スクラムガイド&lt;/a&gt; Japanese を選択してもらえれば日本語バージョンが閲覧できます&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.slideshare.net/zaruhiroyukisakuraba/ss-77861697&quot;&gt;スクラム導入に向けて：スクラムは救世主となるのか？&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.ryuzee.com/contents/blog/7120&quot;&gt;スクラムプロジェクト開始のベストプラクティス | Ryuzee.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Toshimaru</name></author><category term="scrum" /><category term="management" /><category term="tech" /><summary type="html">昨年末にスクラムマスター研修を受けてきて、認定スクラムマスター (CSM)となりました。スクラムマスター研修で学んだこととして社内で共有した内容を本ブログでも共有してみようと思います。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/scrum/scrum.jpg" /><media:content medium="image" url="https://blog.toshimaru.net/images/posts/scrum/scrum.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>