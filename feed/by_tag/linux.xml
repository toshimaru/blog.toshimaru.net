<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://blog.toshimaru.net/feed/by_tag/linux.xml" rel="self" type="application/atom+xml" /><link href="https://blog.toshimaru.net/" rel="alternate" type="text/html" /><updated>2020-10-07T21:26:45+09:00</updated><id>https://blog.toshimaru.net/feed/by_tag/linux.xml</id><title type="html">Hack Your Design!</title><subtitle>toshimaruの技術系なブログ</subtitle><author><name>Toshimaru</name></author><entry><title type="html">bcコマンドで16進数変換</title><link href="https://blog.toshimaru.net/bc-decimal-hex/" rel="alternate" type="text/html" title="bcコマンドで16進数変換" /><published>2013-12-05T00:00:00+09:00</published><updated>2013-12-05T00:00:00+09:00</updated><id>https://blog.toshimaru.net/bc-decimal-hex</id><content type="html" xml:base="https://blog.toshimaru.net/bc-decimal-hex/">&lt;p&gt;パッと計算したいときにはよくコマンドラインを立ち上げて&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bc&lt;/code&gt;コマンドを使います。基本10進数を扱うのがメインなんですが、たまーに16進数とかも扱いたいときがあります。その方法をご紹介。&lt;/p&gt;

&lt;h2 id=&quot;基本&quot;&gt;基本&lt;/h2&gt;

&lt;p&gt;基本は下記の２つの値を設定して10進数以外を扱うことができます。（初期値は10で設定されてます）&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;obase&lt;/code&gt;: 出力したい進数を設定&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ibase&lt;/code&gt;: 入力となる進数を設定&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;10進数16進数&quot;&gt;10進数→16進数&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;obase&lt;/code&gt;を設定すればOK.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;obase=16
255
FF
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;255 -&amp;gt; FF です。&lt;/p&gt;

&lt;h2 id=&quot;16進数10進数&quot;&gt;16進数→10進数&lt;/h2&gt;

&lt;p&gt;逆もいってみます。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ibase&lt;/code&gt;を設定します。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ibase=16
AA
170
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;AA -&amp;gt; 170 です。&lt;/p&gt;

&lt;h2 id=&quot;2進数8進数&quot;&gt;2進数、8進数&lt;/h2&gt;

&lt;p&gt;もちろん他にも2進数やら8進数やら設定次第でOKです。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;obase=2
255
11111111
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;255 -&amp;gt; 11111111 です。&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://linux.just4fun.biz/%E9%80%86%E5%BC%95%E3%81%8DUNIX%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/bc%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A716%E9%80%B2%E6%95%B0%E3%80%8110%E9%80%B2%E6%95%B0%E3%80%818%E9%80%B2%E6%95%B0%E3%80%812%E9%80%B2%E6%95%B0%E3%81%AE%E5%A4%89%E6%8F%9B%E3%83%BB%E8%A8%88%E7%AE%97%E3%82%92%E8%A1%8C%E3%81%86.html&quot;&gt;bcコマンドで16進数、10進数、8進数、2進数の変換・計算を行う方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Toshimaru</name></author><category term="linux" /><summary type="html">パッと計算したいときにはよくコマンドラインを立ち上げてbcコマンドを使います。基本10進数を扱うのがメインなんですが、たまーに16進数とかも扱いたいときがあります。その方法をご紹介。</summary></entry><entry><title type="html">「たった一行でもっと高画質の画像を集める方法」のシェルスクリプトコード解説</title><link href="https://blog.toshimaru.net/sh3iz/" rel="alternate" type="text/html" title="「たった一行でもっと高画質の画像を集める方法」のシェルスクリプトコード解説" /><published>2012-12-24T00:00:00+09:00</published><updated>2019-11-02T00:00:00+09:00</updated><id>https://blog.toshimaru.net/sh3iz</id><content type="html" xml:base="https://blog.toshimaru.net/sh3iz/">&lt;p&gt;&lt;a href=&quot;http://d.hatena.ne.jp/shi3z/20121217/1355695824&quot;&gt;たった一行でもっと高画質の画像を集める方法&lt;/a&gt;にあったシェルスクリプトのコード。&lt;/p&gt;

&lt;h2 id=&quot;ソース&quot;&gt;ソース&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;matome_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;j &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;1..10&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
  for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;curl &lt;span class=&quot;nv&quot;&gt;$matome_url&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\?&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$j&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'_jWidgetData'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sed &lt;/span&gt;s/&lt;span class=&quot;se&quot;&gt;\&amp;amp;&lt;/span&gt;quot&lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;/&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;/g | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;url&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;\:\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[^&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;]*&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;cut&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; 3 &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
    &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$2_$cnt&lt;/span&gt;.jpg &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;expr&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$cnt&lt;/span&gt; + 1&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;done
done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;その中の１行、このコードの意味がよくわからなかったので調べてみた。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nv&quot;&gt;$matome_url&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\?&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$j&lt;/span&gt;| &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'_jWidgetData'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sed &lt;/span&gt;s/&lt;span class=&quot;se&quot;&gt;\&amp;amp;&lt;/span&gt;quot&lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;/&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;/g | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;url&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;\:\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[^&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;]*&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;cut&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;バラすと下記のようになる。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl https://matome.naver.jp/odai/2128076173257260401 | &lt;span class=&quot;c&quot;&gt;# curlでデータ取得&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'_jWidgetData'&lt;/span&gt; |                                   &lt;span class=&quot;c&quot;&gt;# _jWidgetData(画像URLが含まれている行)をgrep&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sed &lt;/span&gt;s/&lt;span class=&quot;se&quot;&gt;\&amp;amp;&lt;/span&gt;quot&lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;/&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;/g |                                   &lt;span class=&quot;c&quot;&gt;# &amp;amp;quot; を &quot; に変換&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;url&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;\:\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[^&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;]*&quot;&lt;/span&gt; |                             &lt;span class=&quot;c&quot;&gt;# url&quot;:&quot;http:~ をgrepで抜き出す&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cut&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; 3                                          &lt;span class=&quot;c&quot;&gt;# ⇡をurl,:,http:~ の３つに分割してURLである３つめをcut!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;出力結果&quot;&gt;出力結果&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://imgcc.naver.jp/kaze/mission/USER/20121010/16/112376/0/800x1126x5e102d37fb7211123e76a10.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121009/16/112376/1/1134x1548x5a8f6dace3e8a811e2caeb.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121222/16/112376/1/1152x1643xa71b65cd2d7ccfbd9ab501.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121022/16/112376/3/1470x2048xf91af81cc31725554aa6a1.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121223/16/112376/0/800x1067xce40c56866a0c1349b12d40.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121223/16/112376/1/800x1067xda8507d549b33034789af92.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121222/16/112376/0/1120x1680xe367f4d20758df59051771.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121218/16/112376/3/800x1200xf0e163f978b6340999a3627.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121220/16/112376/2/800x1149x504004fca0a43ae177b6b94.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121220/16/112376/1/909x1346xbc20b11869f748acf5dfcb9.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121220/16/112376/0/1066x1600x961a7ad10008867d0b4dc4.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121218/16/112376/1/703x1024x9c2810c4630ee676e88581e.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121215/16/112376/0/1226x1671x7380daad05950ec9f27aa1.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121218/16/112376/5/900x1280x8feb008f284438ae077799f.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121219/16/112376/0/799x1200xa22a34c73b464cc8c008887.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121219/16/112376/1/1200x800x596d41a8093f6663d2f51d5.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121216/16/112376/1/1500x2150x03d096234d12754f302cae.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121216/16/112376/0/683x1024x85dc2bb2d1fb1168ee2815c.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121214/16/112376/2/530x800x764574c1e912f5a46846fe56.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121214/16/112376/3/1280x1900x1ce4cf74906fd926a96f41.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121214/16/112376/0/900x1200xaca3d3fec5d57eec05c514a.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121214/16/112376/8/531x800xc515ec8798a9a4032daca277.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121207/16/112376/24/1033x1550x7c9c3cd8928ab0fbf19548.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121202/16/112376/1/1033x1550x6e0dc201a49d96d93740d1.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121208/16/112376/1/1033x1550xf007fde2a5343d1a0a55d1.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121209/16/112376/7/854x1280xeabf817b9a607e419f2472f.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121209/16/112376/6/896x1280x08f71b1d54aa4bd5c2ef364.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121209/16/112376/5/1280x1682xd727f8325bec6c51d47212.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121209/16/112376/4/800x1067xcec4822757324881e9978c9.jpg
http://imgcc.naver.jp/kaze/mission/USER/20121209/16/112376/3/1280x1920x0a1ca8283d2796132f14e3.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;この「◯◯で水着画像を集める」系のネタ元はPHPでしたが、シェルでもいけちゃうんですね。奥深い・・・&lt;/p&gt;</content><author><name>Toshimaru</name></author><category term="linux" /><category term="shell" /><category term="bash" /><summary type="html">たった一行でもっと高画質の画像を集める方法にあったシェルスクリプトのコード。</summary></entry><entry><title type="html">プロセス毎のメモリ使用量を調べるコマンド</title><link href="https://blog.toshimaru.net/linux/" rel="alternate" type="text/html" title="プロセス毎のメモリ使用量を調べるコマンド" /><published>2012-12-02T00:00:00+09:00</published><updated>2019-11-02T00:00:00+09:00</updated><id>https://blog.toshimaru.net/linux</id><content type="html" xml:base="https://blog.toshimaru.net/linux/">&lt;p&gt;メモリを食いつぶしてたプロセスがいたのでそれを調べるときに利用したコマンド。&lt;/p&gt;
&lt;p&gt;これでズラっとでます。&lt;/p&gt;
&lt;div&gt;
  &lt;pre&gt;$ ps alx  | awk '{printf (&amp;quot;%d\t%s\n&amp;quot;, $8,$13)}'&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;しかし、このコマンドの結果が見づらい。なので&lt;strong&gt;使用量の多い順にソートしてトップ10を出してみる&lt;/strong&gt;と下記のようなコマンドになります。&lt;/p&gt;

&lt;div&gt;
  &lt;pre&gt;$ ps alx  | awk '{printf (&amp;quot;%d\t%s\n&amp;quot;, $8,$13)}' | sort -nr | head -10&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;参考&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://at-aka.blogspot.jp/2006/07/linux.html&quot;&gt;Linux でプロセスごとのメモリー使用量を調べる&lt;/a&gt;&lt;/p&gt;</content><author><name>Toshimaru</name></author><category term="shell" /><category term="linux" /><summary type="html">メモリを食いつぶしてたプロセスがいたのでそれを調べるときに利用したコマンド。 これでズラっとでます。 $ ps alx | awk '{printf (&amp;quot;%d\t%s\n&amp;quot;, $8,$13)}'</summary></entry><entry><title type="html">john the ripper を使用してパスワードクラッキング</title><link href="https://blog.toshimaru.net/john-the-ripper/" rel="alternate" type="text/html" title="john the ripper を使用してパスワードクラッキング" /><published>2011-12-10T00:00:00+09:00</published><updated>2011-12-10T00:00:00+09:00</updated><id>https://blog.toshimaru.net/john-the-ripper</id><content type="html" xml:base="https://blog.toshimaru.net/john-the-ripper/">&lt;p&gt;簡単で想像しやすいパスワードをLinuxで設定すると簡単にクラックできちゃいますよ、ということを確かめるためにも、今日は&lt;a href=&quot;http://www.openwall.com/john/&quot;&gt;john the ripper&lt;/a&gt;というツールを使ってパスワードを解析してみます。&lt;/p&gt;
&lt;p&gt;まずはインストール。&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;$ sudo apt-get install john&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;クラックするユーザーを作成。&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;$ useradd test
$ passwd test&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;ここでは、ユーザー名を&quot;test&quot;,パスワードも&quot;test&quot;という単純なアカウントを作成します。&lt;/p&gt;
&lt;p&gt;まずはパスワードとshadowファイルを統合させたファイルを作成。&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;$ sudo unshadow /etc/passwd /etc/shadow &amp;gt; /tmp/passfile&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;単純なアカウントなのでシングルモードで解析できます。&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;$ john --single /tmp/passfile
test:test:1001:1001::/home/test:/bin/sh&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;ということでパスワードは解析完了。 他にも辞書ファイルを使ったり、総当たりで当たっていったりもできるようです。&lt;/p&gt;</content><author><name>Toshimaru</name></author><category term="linux" /><category term="security" /><summary type="html">簡単で想像しやすいパスワードをLinuxで設定すると簡単にクラックできちゃいますよ、ということを確かめるためにも、今日はjohn the ripperというツールを使ってパスワードを解析してみます。 まずはインストール。 $ sudo apt-get install john</summary></entry><entry><title type="html">SNMPサーバを立てて、クライアントからsnmpwalkする</title><link href="https://blog.toshimaru.net/snmpsnmpwalk/" rel="alternate" type="text/html" title="SNMPサーバを立てて、クライアントからsnmpwalkする" /><published>2011-12-04T00:00:00+09:00</published><updated>2011-12-04T00:00:00+09:00</updated><id>https://blog.toshimaru.net/snmpsnmpwalk</id><content type="html" xml:base="https://blog.toshimaru.net/snmpsnmpwalk/">&lt;p&gt;お仕事でSNMPを使うことがありましたので勉強がてらメモ。&lt;/p&gt;
&lt;div&gt;
  &lt;pre&gt;$ sudo apt-get install snmp snmpd&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;localhostにsnmpwalkしてMIBツリーの情報を取得できます。&lt;/p&gt;

&lt;div&gt;
&lt;pre&gt;$ snmpwalk -v 1 -c public localhost
 iso.3.6.1.2.1.1.1.0 = STRING: &amp;quot;Linux ubuntu 3.0.0-12-generic #20-Ubuntu SMP Fri Oct 7 14:56:25 UTC 2011 x86_64&amp;quot;
 iso.3.6.1.2.1.1.2.0 = OID: iso.3.6.1.4.1.8072.3.2.10
（以下略...）&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;デフォルトの状態だとlocalhostのみで外部からsnmpwalkできないので、/etc/snmp/snmpd.conf　のagentAddressを下記のように編集してsnmpdを再起動する。&lt;/p&gt;

&lt;div&gt;
  &lt;pre&gt;agentAddress  udp:161&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;これで外部からsnmpwalkできるようになります。&lt;/p&gt;

&lt;h3&gt;参考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.atmarkit.co.jp/flinux/rensai/root07/root07c.html&quot;&gt;http://www.atmarkit.co.jp/flinux/rensai/root07/root07c.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.uetyi.mydns.jp/wordpress/snmp-setting/entry-137.html&quot;&gt;http://www.uetyi.mydns.jp/wordpress/snmp-setting/entry-137.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Toshimaru</name></author><category term="linux" /><category term="network" /><summary type="html">お仕事でSNMPを使うことがありましたので勉強がてらメモ。 $ sudo apt-get install snmp snmpd</summary></entry><entry><title type="html">vmware上のubuntuのネットワーク設定</title><link href="https://blog.toshimaru.net/vmwareubuntu/" rel="alternate" type="text/html" title="vmware上のubuntuのネットワーク設定" /><published>2011-11-02T00:00:00+09:00</published><updated>2011-11-02T00:00:00+09:00</updated><id>https://blog.toshimaru.net/vmwareubuntu</id><content type="html" xml:base="https://blog.toshimaru.net/vmwareubuntu/">&lt;p&gt;をちょっとメモ&lt;/p&gt;
&lt;p&gt;まずはeth0に静的IPを割り振りましょう。/etc/network/interfaces を下記のような感じで書き換える。&lt;/p&gt;
&lt;p&gt;（参考：&lt;a href=&quot;http://tobysoft.net/wiki/index.php?Ubuntu%2F%A5%A4%A5%F3%A5%B9%A5%C8%A1%BC%A5%EB%B8%E5%A4%CE%C0%DF%C4%EA#v8e1badd&quot;&gt;Ubuntu/インストール後の設定&lt;/a&gt; ）&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;auto lo
iface lo inet loopback

auto eth0
iface eth0 inet static         # ↓ 注意：この日本語コメントは削除してください（でないとかしくなります）
        address 192.168.0.100  # ← IPアドレス
        network 192.168.0.0  # ← (サブ)ネットワークのアドレス .0で終わるはず
        netmask 255.255.255.0  # ← ネットマスク
        broadcast 192.168.0.255 # ←ブロードキャストアドレス .255で終わるはず
        :ateway 192.168.0.1  # ← ゲートウェイ（ルーター）のアドレス
        dns-nameservers 192.168.0.10  # ← DNSのアドレス&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;設定を変えたら以下のコマンドで設定を反映させます。&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;sudo /etc/init.d/networking restart&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;するとこんなエラー。&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;eth0: ERROR while getting interface flags: No such device&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;これに対しては、以下の対応をするとよいよう。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt; /etc/udev/rules.d/70-persistent-net.rulesの SUBSYSTEM==&amp;rdquo;net&amp;rdquo;から始まる行を削除（またはコメントアウト） &lt;/li&gt;
&lt;li&gt; /etc/udev/rules.d/75-persistent-net-generator.rulesの以下2行を削除（またはコメントアウト） &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(参考：&lt;a href=&quot;http://namahage.dip.jp/blog/2107&quot;&gt;vmwareのubuntuを別PCへ移動で eth0: ERROR&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;これで問題なく通りましたとさ。&lt;/p&gt;</content><author><name>Toshimaru</name></author><category term="linux" /><category term="network" /><summary type="html">をちょっとメモ まずはeth0に静的IPを割り振りましょう。/etc/network/interfaces を下記のような感じで書き換える。 （参考：Ubuntu/インストール後の設定 ） auto lo iface lo inet loopback</summary></entry></feed>