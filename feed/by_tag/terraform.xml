<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://blog.toshimaru.net/feed/by_tag/terraform.xml" rel="self" type="application/atom+xml" /><link href="https://blog.toshimaru.net/" rel="alternate" type="text/html" /><updated>2022-06-22T10:09:46+09:00</updated><id>https://blog.toshimaru.net/feed/by_tag/terraform.xml</id><title type="html">Hack Your Design!</title><subtitle>toshimaruの技術系なブログ</subtitle><author><name>Toshimaru</name></author><entry><title type="html">terraformでDigitalOceanに簡単ドロップレット作成</title><link href="https://blog.toshimaru.net/terraform/" rel="alternate" type="text/html" title="terraformでDigitalOceanに簡単ドロップレット作成" /><published>2016-04-05T00:00:00+09:00</published><updated>2016-04-05T00:00:00+09:00</updated><id>https://blog.toshimaru.net/terraform</id><content type="html" xml:base="https://blog.toshimaru.net/terraform/"><![CDATA[<p><a href="https://www.terraform.io/">Terraform</a>を使って1円クラウド、<a href="https://m.do.co/c/a79091850c6e">DigitalOcean</a>にドロップレットをさくっと立ててみます。Vagrantに似たツールではありますが、Vagrantよりシンプルでかつ軽量に動作します。</p>

<h2 id="環境">環境</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ terraform version
Terraform v0.6.14
</code></pre></div></div>

<p>上記のバージョンの terraform を使っていきます。</p>

<h2 id="tfファイル作成">tfファイル作成</h2>

<p>terraformファイル、例えば<code class="language-plaintext highlighter-rouge">test.tf</code>ファイルを下記のように作成します（<code class="language-plaintext highlighter-rouge">.tf</code>という拡張子でファイル名はなんでもよいようです）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Configure the DigitalOcean Provider
provider "digitalocean" {
  token = "your_digitalocean_token"
}

# Create a web server
resource "digitalocean_droplet" "web" {
  image = "ubuntu-14-04-x64"
  name = "web-1"
  region = "sfo1"
  size = "512mb"
  ssh_keys = [123456]
}
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">token</code>にはDigitalOceanのあなた自身のトークンをセットしてください。</p>

<p>ちなみに上記にある <code class="language-plaintext highlighter-rouge">ssh_keys</code> の id は下記のようにAPI経由で取得できます（jqを使ってます）。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ curl "https://api.digitalocean.com/v2/account/keys" -H "Authorization: Bearer your_token" | jq ".ssh_keys[0].id"
</code></pre></div></div>

<h2 id="terraform-実行プラン表示">terraform 実行プラン表示</h2>

<p><code class="language-plaintext highlighter-rouge">terraform plan</code>で実行プランを表示できます。これで何が作成されるかを確認しましょう。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ terraform plan
Refreshing Terraform state prior to plan...


The Terraform execution plan has been generated and is shown below.
Resources are shown in alphabetical order for quick scanning. Green resources
will be created (or destroyed and then created if an existing resource
exists), yellow resources are being changed in-place, and red resources
will be destroyed.

Note: You didn't specify an "-out" parameter to save this plan, so when
"apply" is called, Terraform can't guarantee this is what will execute.

+ digitalocean_droplet.web
    image:                "" =&gt; "ubuntu-14-04-x64"
    ipv4_address:         "" =&gt; "&lt;computed&gt;"
    ipv4_address_private: "" =&gt; "&lt;computed&gt;"
    ipv6_address:         "" =&gt; "&lt;computed&gt;"
    ipv6_address_private: "" =&gt; "&lt;computed&gt;"
    locked:               "" =&gt; "&lt;computed&gt;"
    name:                 "" =&gt; "web-1"
    region:               "" =&gt; "sfo1"
    size:                 "" =&gt; "512mb"
    ssh_keys.#:           "" =&gt; "1"
    ssh_keys.0:           "" =&gt; "123456"
    status:               "" =&gt; "&lt;computed&gt;"


Plan: 1 to add, 0 to change, 0 to destroy.
</code></pre></div></div>

<h2 id="プラン実行">プラン実行</h2>

<p>確認後は<code class="language-plaintext highlighter-rouge">terraform apply</code>で実際に作成を行えます。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ terraform apply
digitalocean_droplet.web: Creating...
image:                "" =&gt; "ubuntu-14-04-x64"
ipv4_address:         "" =&gt; "&lt;computed&gt;"
ipv4_address_private: "" =&gt; "&lt;computed&gt;"
ipv6_address:         "" =&gt; "&lt;computed&gt;"
ipv6_address_private: "" =&gt; "&lt;computed&gt;"
locked:               "" =&gt; "&lt;computed&gt;"
name:                 "" =&gt; "web-1"
region:               "" =&gt; "sfo1"
size:                 "" =&gt; "512mb"
ssh_keys.#:           "" =&gt; "1"
ssh_keys.0:           "" =&gt; "123456"
status:               "" =&gt; "&lt;computed&gt;"
digitalocean_droplet.web: Creation complete

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

The state of your infrastructure has been saved to the path
below. This state is required to modify and destroy your
infrastructure, so keep it safe. To inspect the complete state
use the `terraform show` command.

State path: terraform.tfstate
</code></pre></div></div>

<h2 id="作成物の情報表示">作成物の情報表示</h2>

<p><code class="language-plaintext highlighter-rouge">terraform show</code> で作成物の情報を表示できます。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ terraform show
digitalocean_droplet.web:
  id = 12808253
  image = ubuntu-14-04-x64
  ipv4_address = 1.2.3.4
  locked = false
  name = web-1
  region = sfo1
  size = 512mb
  ssh_keys.# = 1
  ssh_keys.0 = 123456
  status = active
</code></pre></div></div>

<p>確かにできあがってます。</p>

<h2 id="ドロップレット削除">ドロップレット削除</h2>

<p>ほっとくとどんどん課金されていきますので使い終わったら削除しましょう。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ terraform destroy
Do you really want to destroy?
  Terraform will delete all your managed infrastructure.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

digitalocean_droplet.web: Refreshing state... (ID: 12808253)
digitalocean_droplet.web: Destroying...
digitalocean_droplet.web: Destruction complete

Apply complete! Resources: 0 added, 0 changed, 1 destroyed.
</code></pre></div></div>

<hr />

<p>この記事を気に入っていただけたなら下記のリファラルリンクよりDigital Oceanにご登録いただけますと筆者が喜びます(*´ω｀*)</p>

<p><a href="https://m.do.co/c/a79091850c6e"><img src="/images/digitalocean.png" alt="digitalocean" /></a></p>]]></content><author><name>Toshimaru</name></author><category term="digitalocean" /><category term="terraform" /><summary type="html"><![CDATA[Terraformを使って1円クラウド、DigitalOceanにドロップレットをさくっと立ててみます。Vagrantに似たツールではありますが、Vagrantよりシンプルでかつ軽量に動作します。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/terraform.png" /><media:content medium="image" url="https://blog.toshimaru.net/images/posts/terraform.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>