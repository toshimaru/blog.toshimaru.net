<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://blog.toshimaru.net/feed/by_tag/podcast.xml" rel="self" type="application/atom+xml" /><link href="https://blog.toshimaru.net/" rel="alternate" type="text/html" /><updated>2021-05-31T14:30:38+09:00</updated><id>https://blog.toshimaru.net/feed/by_tag/podcast.xml</id><title type="html">Hack Your Design!</title><subtitle>toshimaruの技術系なブログ</subtitle><author><name>Toshimaru</name></author><entry><title type="html">boot.fm Podcast に出演しました</title><link href="https://blog.toshimaru.net/bootfm-podcast/" rel="alternate" type="text/html" title="boot.fm Podcast に出演しました" /><published>2016-12-29T00:00:00+09:00</published><updated>2016-12-29T00:00:00+09:00</updated><id>https://blog.toshimaru.net/bootfm-podcast</id><content type="html" xml:base="https://blog.toshimaru.net/bootfm-podcast/">&lt;p&gt;ちょっと前だが今月&lt;a href=&quot;https://bootfm.github.io/&quot;&gt;boot.fm&lt;/a&gt;というTech系Podcastに出演した。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;最近流行りのTechポッドキャストに出演しました。分報、フロントエンド技術とどう付き合うか、コードレビュー、mrubyあたりを話してます | Vol.4: Code review as a prior investment &lt;a href=&quot;https://t.co/FjRE8HQa4E&quot;&gt;https://t.co/FjRE8HQa4E&lt;/a&gt;&lt;/p&gt;&amp;mdash; toshimaru (@toshimaru_e) &lt;a href=&quot;https://twitter.com/toshimaru_e/status/809544891696939009&quot;&gt;December 15, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;そのフォローアップや話しきれなかったことなど書いてみます。&lt;/p&gt;

&lt;h2 id=&quot;slack分報タスク管理について&quot;&gt;Slack分報・タスク管理について&lt;/h2&gt;

&lt;p&gt;分報の元ネタ: &lt;a href=&quot;http://c16e.com/1511101558/&quot;&gt;Slackで簡単に「日報」ならぬ「分報」をチームで実現する3ステップ〜Problemが10分で解決するチャットを作ろう | Craftsman Software Inc.&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;僕が思う分報の良い点&quot;&gt;僕が思う分報の良い点&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;日報より情報発信の敷居がずっと低い
    &lt;ul&gt;
      &lt;li&gt;多分一番分かりやすい喩えは &lt;strong&gt;社内Twitter&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;カジュアルなコミュニケーションができる
    &lt;ul&gt;
      &lt;li&gt;ハマっていることとかさらっと書いたら誰かが助け舟を出してくれたり&lt;/li&gt;
      &lt;li&gt;ゆるーい雑談とかも&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;リアルタイムなコミュニケーションができる
    &lt;ul&gt;
      &lt;li&gt;Podcast内で紹介した&lt;a href=&quot;https://toshi.slack.com/apps/A0HBTUUPK--todo&quot;&gt;/todo&lt;/a&gt;みたいなSlackインテグレーションアプリと組み合わせることによって、リアルタイムにタスクのWIP/DONEを関係者に共有できる&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;基本的に僕は日報を書いていきたいと思っているのだけど、日報真面目に書いているとけっこう時間がかかってしまう。最初は乗り気しなかったけどとりあえずやってみるかと始めた分報だが、日報ハードル高すぎ問題を感じていた僕には丁度良くハマった。&lt;/p&gt;

&lt;p&gt;情報発信の対象となる受け手も限られていて、些細なこともカジュアルに書きやすいし読み手を過剰に意識することも少ない。&lt;/p&gt;

&lt;h3 id=&quot;僕が思う分報の悪い点&quot;&gt;僕が思う分報の悪い点&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Slackチャンネル多くなる
    &lt;ul&gt;
      &lt;li&gt;1チャンネル/user なので人数分チャンネルできる&lt;/li&gt;
      &lt;li&gt;JOINしすぎると間違いなくノイズになるのでMuteなり加入チャンネル選ぶなりで凌ぐ&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;知性のない発言が多くなる（かもしれない）
    &lt;ul&gt;
      &lt;li&gt;そういうのも含めて社内Twitterでありカジュアルなコミュニケーションなんだからまぁ良い点ともいえる&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;その他slackで便利そうなやつ&quot;&gt;その他Slackで便利そうなやつ&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://toshi.slack.com/apps/category/At0G5YTKU2-analytics&quot;&gt;便利な Slack Integration App&lt;/a&gt; 使ってKPIとか流してみる&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/masuidrive/miyamoto&quot;&gt;masuidrive/miyamoto&lt;/a&gt; でSlack勤怠管理してみるとか&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hubot.github.com/&quot;&gt;HUBOT&lt;/a&gt;みたいなChatbotを棲ませて自動化実現したり便利機能を提供したりとか&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;便利な Slack Integration App もどんどん増えているのでそういうのはどんどん導入していくと良いと思う。&lt;/p&gt;

&lt;p&gt;Chatbot系はアイディア勝負。便利な使い方あればどんどん紹介してほしいと思う。&lt;/p&gt;

&lt;h2 id=&quot;フロントエンド-vs-バックエンド&quot;&gt;フロントエンド vs バックエンド&lt;/h2&gt;

&lt;p&gt;僕が最近React書いてて感じている「Railsやりつつフロントエンドのキャッチアップはしきれないし〜自分の書いているコードに自信を持ていないし〜けっこう妥協しちゃってるんですよ〜」という悩み相談みたいな感じになってしまったかもしれない。&lt;/p&gt;

&lt;p&gt;お二人ともPodcast内で話したが、結論としては至極まっとうで、プロトタイピングやそもそもJavaScriptヘビーにSPAを作る必要がないのであれば無理してJS書くことないし、Railsのレールに乗っかってけばいいじゃんという感じ。&lt;/p&gt;

&lt;p&gt;SPAにすることがプロダクトの価値として高くなるのであればReactなりAngularなり導入に踏み切ればいいじゃん、という感じ。ただそうなってくるとどうしてもRailsのレールから外れて開発を進めていく必要があり、レールを外れる勇気と覚悟が必要でウッ…となる。&lt;/p&gt;

&lt;p&gt;とここまで書いてアレですが、Podcast収録した時点ではリリースされていなかった&lt;a href=&quot;https://github.com/rails/webpacker&quot;&gt;rails/webpacker&lt;/a&gt;が現在出てきており、とうとうRailsにもyarn、webpackへの世界へのレールが開かれようとしております。そしてwebpackerの仕組みに乗っかってReactがinstallできるような仕組みも用意されつつある。&lt;/p&gt;

&lt;p&gt;そういう流れが整備されていけば多少僕が今抱えている不安感も和らぐだろうと思いました。&lt;/p&gt;

&lt;h2 id=&quot;コードレビューについて&quot;&gt;コードレビューについて&lt;/h2&gt;

&lt;p&gt;けっこう自分が今コードレビューに時間をかけているので、コードレビュー質的・時間的にどれくらいやるもんなんって話。&lt;/p&gt;

&lt;p&gt;コスト、というとコストかけたくないでござる！みたいなことを暗に思っているのではと思われてしまうかもしれないが、そうではない。基本的にレビューにはコストをかけるべきだし、短期的には時間がかかろうともそれは中長期的にチームの生産性向上につながると思ってる。つまりコードレビューに時間をかけるということはチームへの投資であるということ。&lt;/p&gt;

&lt;p&gt;そのコードレビューをどう効率的に回していくかという話もできればよかったけどそれはまた別の機会に。まぁ基本的に丁寧なコードレビューをしようと思うとやっぱり時間はかかる。&lt;/p&gt;

&lt;h2 id=&quot;mruby&quot;&gt;mruby&lt;/h2&gt;

&lt;p&gt;mrubyワンチャンある？って話。得られた知見はこうだ。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Rubyのシンタックスはmrubyでもだいぶ動く&lt;/li&gt;
  &lt;li&gt;mrubygem エコシステムはまだまだ未成熟&lt;/li&gt;
  &lt;li&gt;Cを書く覚悟が必要（mrubygemないときにCを書く場面がある）&lt;/li&gt;
  &lt;li&gt;信頼できない mrubygem だとたまに環境がぶっ壊れることある&lt;/li&gt;
  &lt;li&gt;デバッグは(現在のところ)printデバッグ&lt;/li&gt;
  &lt;li&gt;パフォーマンスが求められる場面だとmrubyよりはgolangが良い&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;参考リンク&quot;&gt;参考リンク&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://bootfm.github.io/&quot;&gt;boot.fm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://roppongirb.connpass.com/event/42633/&quot;&gt;Roppongi.rb #2 “Infrastructure x Ruby” - connpass&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://seleck.cc/822&quot;&gt;リモートワークは敢えて取り入れない。Gunosyデータ分析部「情報共有」の仕組みとは | SELECK&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/k0kubun/mitamae&quot;&gt;k0kubun/mitamae: Configuration management tool embedding mruby, which is alternative implementation of Itamae&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://qiita.com/k0kubun/items/3995d3b730b63ef67c56&quot;&gt;Rubyを評価するCLIツールはCRubyとmrubyのどちらで実装するべきか - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Toshimaru</name></author><category term="podcast" /><category term="tech" /><summary type="html">ちょっと前だが今月boot.fmというTech系Podcastに出演した。</summary></entry></feed>