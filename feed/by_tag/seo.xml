<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://blog.toshimaru.net/feed/by_tag/seo.xml" rel="self" type="application/atom+xml" /><link href="https://blog.toshimaru.net/" rel="alternate" type="text/html" /><updated>2023-12-31T17:41:45+09:00</updated><id>https://blog.toshimaru.net/feed/by_tag/seo.xml</id><title type="html">Hack Your Design!</title><subtitle>toshimaruの技術系なブログ</subtitle><author><name>Toshimaru</name></author><entry><title type="html">Google Custom Searchのサイト設置方法</title><link href="https://blog.toshimaru.net/google-custom-search-engine/" rel="alternate" type="text/html" title="Google Custom Searchのサイト設置方法" /><published>2019-03-08T00:00:00+09:00</published><updated>2019-05-31T00:00:00+09:00</updated><id>https://blog.toshimaru.net/google-custom-search-engine</id><content type="html" xml:base="https://blog.toshimaru.net/google-custom-search-engine/"><![CDATA[<p>サイトにGoogle Custom Searchを設定・設定しましたのでその手順をメモします。</p>

<h2 id="google-custom-searchカスタム検索エンジンとは">Google Custom Search（カスタム検索エンジン）とは？</h2>

<p>Google Custom Search（カスタム検索エンジン）はGoogleの検索アルゴリズムでサイト内検索の結果を表示してくれるサービスです。<strong>カスタム検索</strong> と銘打っている通り、検索設定や検索結果のデザイン・レイアウトをカスタマイズすることが可能です。</p>

<h2 id="google-custom-searchのタグを取得手順">Google Custom Searchのタグを取得手順</h2>

<p>Google Custom Searchのタグの取得手順を説明していきます。</p>

<h3 id="検索エンジンを追加">検索エンジンを追加</h3>

<p>まずは検索エンジンを追加します。</p>

<p><img src="/images/posts/cse/top1.png" alt="" /></p>

<p>追加すると下記のような基本設定メニューと右側には検索フォームのプレビューが現れます。必要に応じて設定してください。基本的にはそのままでも大丈夫でしょう。</p>

<p><img src="/images/posts/cse/2.png" alt="" /></p>

<p>ちなみにAdsenseとアカウントを接続していれば収益化も可能なようです。今回はOffにしています。</p>

<p><img src="/images/posts/cse/adsense.png" alt="" /></p>

<h3 id="デザイン設定">デザイン設定</h3>

<p>左のメニューからデザインメニューを開けば、検索結果のレイアウトを選択することができます。今回は全幅を選択しました。</p>

<p><img src="/images/posts/cse/design.png" alt="" /></p>

<p>デフォルトでGoogleがいくつかのテーマを用意してくれています。特にこだわりなければデフォルトでいいでしょう。</p>

<p><img src="/images/posts/cse/theme.png" alt="" /></p>

<h3 id="デザインカスタマイズ">デザインカスタマイズ</h3>

<p>デザインの詳細なカスタムも可能です。下記のメニューからカラーコードを設定することが可能です。今回はブログの背景色（<code class="language-plaintext highlighter-rouge">F3F3F3</code>）と合わせます。本項目はサイトのテイストに合わせて変更してください。</p>

<p><img src="/images/posts/cse/custom.png" alt="" /></p>

<p>検索結果も本ブログの背景色（<code class="language-plaintext highlighter-rouge">F3F3F3</code>）に合わせておきます。</p>

<p><img src="/images/posts/cse/custom2.png" alt="" /></p>

<h3 id="コードを取得">コードを取得</h3>

<p>「<strong>保存してコードを取得</strong>」すればコードが取得できます。</p>

<p><img src="/images/posts/cse/code.png" alt="" /></p>

<h2 id="コードをサイトに設置">コードをサイトに設置</h2>

<p>さぁこれでコードが準備できました。では次にこのコードをサイトに貼ります。今回は<code class="language-plaintext highlighter-rouge">search.html</code>に下記のようにコードを貼ることにしました。検索表示したいエリアにコードをそのまま貼り付けただけです。</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"search"</span><span class="nt">&gt;</span>
<span class="nt">&lt;script&gt;</span>
  <span class="p">(</span><span class="nf">function </span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">cx</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">011796726412992573594:-wfuo7spt_k</span><span class="dl">'</span><span class="p">;</span>
    <span class="kd">var</span> <span class="nx">gcse</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">createElement</span><span class="p">(</span><span class="dl">'</span><span class="s1">script</span><span class="dl">'</span><span class="p">);</span>
    <span class="nx">gcse</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">text/javascript</span><span class="dl">'</span><span class="p">;</span>
    <span class="nx">gcse</span><span class="p">.</span><span class="k">async</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
    <span class="nx">gcse</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">https://cse.google.com/cse.js?cx=</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">cx</span><span class="p">;</span>
    <span class="kd">var</span> <span class="nx">s</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">getElementsByTagName</span><span class="p">(</span><span class="dl">'</span><span class="s1">script</span><span class="dl">'</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span>
    <span class="nx">s</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nf">insertBefore</span><span class="p">(</span><span class="nx">gcse</span><span class="p">,</span> <span class="nx">s</span><span class="p">);</span>
  <span class="p">})();</span>
<span class="nt">&lt;/script&gt;</span>
<span class="nt">&lt;gcse:search&gt;&lt;/gcse:search&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<h2 id="検索フォーム">検索フォーム</h2>

<p>検索フォームは下記のように作成することができます。</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;form</span> <span class="na">id=</span><span class="s">"search-form"</span> <span class="na">action=</span><span class="s">"/search"</span> <span class="na">method=</span><span class="s">"get"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"search"</span> <span class="na">class=</span><span class="s">"search-txt"</span> <span class="na">name=</span><span class="s">"q"</span> <span class="na">placeholder=</span><span class="s">"Search"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/form&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">action</code>には上手順で作成したコードの貼ってあるページ先に設定してください。</li>
  <li>methodには<code class="language-plaintext highlighter-rouge">get</code>を設定してください</li>
  <li>検索クエリは<code class="language-plaintext highlighter-rouge">q</code>で機能します</li>
</ul>

<p>この検索フォームを使って下記のような検索結果が表示させることができれば成功です。</p>

<p><img src="/images/posts/cse/result.png" alt="" /></p>

<h2 id="現在のウィンドウで検索結果を開く">現在のウィンドウで検索結果を開く</h2>

<p>そのままだと別ウィンドウで検索結果が開いてしまいます。同一ウィンドウで開くようにするためにはコード内のタグを下記のように変更すれば同一ウィンドウで開くことができるようになります。<code class="language-plaintext highlighter-rouge">linktarget="_self</code> の属性が追加されているのが変更点です。</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;gcse:search</span> <span class="na">linktarget=</span><span class="s">"_self"</span><span class="nt">&gt;&lt;/gcse:search&gt;</span>
</code></pre></div></div>

<h2 id="参考ドキュメント">参考ドキュメント</h2>

<ul>
  <li><a href="https://developers.google.com/custom-search/docs/element">Custom Search Element Control API  |  Custom Search  |  Google Developers</a></li>
</ul>]]></content><author><name>Toshimaru</name></author><category term="seo" /><summary type="html"><![CDATA[サイトにGoogle Custom Searchを設定・設定しましたのでその手順をメモします。 Google Custom Search（カスタム検索エンジン）とは？ Google Custom Search（カスタム検索エンジン）はGoogleの検索アルゴリズムでサイト内検索の結果を表示してくれるサービスです。カスタム検索 と銘打っている通り、検索設定や検索結果のデザイン・レイアウトをカスタマイズすることが可能です。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/cse/og.png" /><media:content medium="image" url="https://blog.toshimaru.net/images/posts/cse/og.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Roppongi.rb#8で「Make Rails Documents SEO(Search Engine Optimized)」を発表しました</title><link href="https://blog.toshimaru.net/make-rails-documents-seo-search-engine-optimized/" rel="alternate" type="text/html" title="Roppongi.rb#8で「Make Rails Documents SEO(Search Engine Optimized)」を発表しました" /><published>2019-02-25T00:00:00+09:00</published><updated>2019-02-27T00:00:00+09:00</updated><id>https://blog.toshimaru.net/make-rails-documents-seo-search-engine-optimized</id><content type="html" xml:base="https://blog.toshimaru.net/make-rails-documents-seo-search-engine-optimized/"><![CDATA[<p><a href="https://roppongirb.connpass.com/event/118218/">Roppongi.rb #8</a>にて「Make Rails Documents SEO(Search Engine Optimized)」と題して発表してきた。</p>

<h2 id="発表スライド">発表スライド</h2>

<script async="" class="speakerdeck-embed" data-id="2238d7f3d662436b943b125a7b10fec1" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"></script>

<h2 id="railsdocgithubio">railsdoc.github.io</h2>

<p>発表では僕が過去に行ったいくつかのRails公式ドキュメントのSEO対応の紹介とともに、現在進めているプロジェクトである<a href="https://railsdoc.github.io/">railsdoc.github.io</a>を紹介した。</p>

<p>GitHub: <a href="https://github.com/railsdoc/railsdoc.github.io">railsdoc/railsdoc.github.io: Rails API Documentation.</a></p>

<h2 id="railsdocgithubioのゴール">railsdoc.github.ioのゴール</h2>

<ul>
  <li><a href="https://api.rubyonrails.org/">api.rubyonrails.org</a>をSEO強くする</li>
  <li><a href="https://api.rubyonrails.org/">api.rubyonrails.org</a>を使いやすくする</li>
</ul>

<p>下記はついでにできると良いなーと考えていること。</p>

<ul>
  <li>フロントの技術を少しだけモダンに
    <ul>
      <li><a href="https://getbootstrap.com/">bootstrap</a>を使ってデザイン構成しやすくする</li>
    </ul>
  </li>
  <li>GitHubといい感じの連携</li>
  <li>AMP対応もできると良さそう</li>
</ul>

<h2 id="railsdocgithubioの今後">railsdoc.github.ioの今後</h2>

<p>発表内で紹介したが今後については下記のように考えている。</p>

<ul>
  <li>コードベース整備中 &amp; 未実装箇所の実装</li>
  <li>folk版sdocじゃない独自のドキュメント生成gemを作りたい</li>
</ul>

<h2 id="紹介したprissue">紹介したPR/Issue</h2>

<ul>
  <li><a href="https://github.com/rails/weblog/pull/88">Introduce jekyll-seo-tag by toshimaru · Pull Request #88 · rails/weblog</a></li>
  <li><a href="https://github.com/rails/homepage/pull/73">Add Jekyll SEO tag and Jekyll sitemap by benbalter · Pull Request #73 · rails/homepage</a></li>
  <li><a href="https://github.com/rails/rails/pull/34860">Make Ruby on Rails Guides SNS-friendly by toshimaru · Pull Request #34860 · rails/rails</a></li>
  <li><a href="https://github.com/rails/rails/issues/27633">No Rails 5 in apidock.com/rails · Issue #27633 · rails/rails</a></li>
</ul>

<h2 id="紹介したrails公式ドキュメント">紹介したRails公式ドキュメント</h2>

<ol>
  <li><a href="rubyonrails.org">rubyonrails.org</a></li>
  <li><a href="weblog.rubyonrails.org">weblog.rubyonrails.org</a></li>
  <li><a href="guides.rubyonrails.org">guides.rubyonrails.org</a></li>
  <li><a href="api.rubyonrails.org">api.rubyonrails.org</a></li>
</ol>

<h2 id="その他">その他</h2>

<ul>
  <li>発表には<a href="https://www.deckset.com/">Deckset 2</a>を使った（ずっとDeckset1使ってたけど2にUpdateした）</li>
  <li>何かあればイシューに書いてほしい <a href="https://github.com/railsdoc/railsdoc.github.io/issues">github.com/railsdoc/railsdoc.github.io/issues</a></li>
</ul>]]></content><author><name>Toshimaru</name></author><category term="presentation" /><category term="seo" /><category term="rails" /><summary type="html"><![CDATA[Roppongi.rb #8にて「Make Rails Documents SEO(Search Engine Optimized)」と題して発表してきた。発表スライドは下記になる。発表では僕が過去に行ったいくつかのRails公式ドキュメントのSEO対応の紹介とともに、現在進めているプロジェクトであるrailsdoc.github.ioを紹介した。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/roppongirb8/og.png" /><media:content medium="image" url="https://blog.toshimaru.net/images/posts/roppongirb8/og.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">SEOという言葉の醜悪さ、SEOではなくクローラー・人間のための最適化を</title><link href="https://blog.toshimaru.net/goodbye-seo-hello-gco/" rel="alternate" type="text/html" title="SEOという言葉の醜悪さ、SEOではなくクローラー・人間のための最適化を" /><published>2016-11-29T00:00:00+09:00</published><updated>2016-11-29T00:00:00+09:00</updated><id>https://blog.toshimaru.net/goodbye-seo-hello-gco</id><content type="html" xml:base="https://blog.toshimaru.net/goodbye-seo-hello-gco/"><![CDATA[<p>SEOという言葉が嫌いだ。そこにはビジネスがあり、カネがあり、カネの匂いを嗅ぎつけたSEO業者たちがいる。</p>

<p>最近、DeNAの運営するキュレーションメディア、<a href="https://welq.jp/">WELQ</a>でこんなニュースがあった。</p>

<ul>
  <li><a href="http://www.itmedia.co.jp/news/articles/1610/26/news117.html">「死にたい」検索トップの「welq」の記事、DeNAが広告削除　「不適切」指摘受け - ITmedia ニュース</a></li>
  <li><a href="https://www.landerblue.co.jp/blog/?p=30141">DeNAがやってるウェルク（Welq）っていうのが企業としてやってはいけない一線を完全に越えてる件（第１回）</a></li>
</ul>

<p>このような指摘を受け、DeNAは下記のような発表を出した。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">【WELQからのお知らせ】「専門家による記事確認および記事内容に関する通報フォームの設置」について<a href="https://t.co/73waKiYTpg">https://t.co/73waKiYTpg</a> <a href="https://t.co/0TvY7psRlu">https://t.co/0TvY7psRlu</a></p>&mdash; WELQ - ウェルク (@welq_pr) <a href="https://twitter.com/welq_pr/status/802082119552004096">November 25, 2016</a></blockquote>

<p>僕はこの一連の件に関してあれこれうるさく言うつもりもないしその言葉も持ち合わせてないが、SEOについて最近ぼんやり考えていることを再考するきっかけとなったのでそこらへんを書いてみるとする。</p>

<h2 id="seoという言葉の醜悪さ">SEOという言葉の醜悪さ</h2>

<p>SEO、サーチエンジン最適化という言葉にどことなく醜悪さを感じてしまうのは僕だけだろうか。</p>

<p>サーチエンジン最適化という行為そのものは必要なことだ。Googleに適切にページを評価してもらうために最適化を行う。Webサイト運営者であれば誰もがすべきことであろう。しかしその最適化のテクニックが逆手に取られ＜招かれざるページ＞が検索順位の上位に上がってしまうことが往々にしてある。</p>

<p>あなたもこんな経験はないだろうか。あなたは検索したい物事があってキーワードを検索フォームに入れて検索する。一番上に出てくるそれらしき見出しをクリックする。しかしそのページは広告、アフィリエイト、外部リンクで埋め尽くされている。まともに読めるコンテンツはファーストビューには全くない。スクロールを進める。どうやらここから本文だ、とあなたは読み進める。そのコンテンツは内容スカスカの低品質記事だった。</p>

<p>このように上がってくるページはいわゆる<a href="https://ja.wikipedia.org/wiki/%E6%A4%9C%E7%B4%A2%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%B3%E3%82%B9%E3%83%91%E3%83%A0">検索エンジンスパム</a>と呼ばれユーザーから忌み嫌われるものだ。</p>

<p>もちろんこういった低品質ページを弾くためのアルゴリズム改善にGoogleは日々心血注いでいる。そしてそのアルゴリズムのアップデート・スパム対策は一定の効果をもたらしている（参考: <a href="https://www.google.com/intl/ja_ALL/insidesearch/howsearchworks/fighting-spam.html">スパム対策 – 検索サービス – Google</a>）。</p>

<p>一方でアルゴリズムで全てのスパムを弾くことはできていないのが現実だ。今でもGoogleの検索結果上位にスパムページが上がってくることは散見される事象だ。このようなGoogleのアルゴリズムの隙間を縫ってページを上げることを<a href="https://ferret-plus.com/1924">ブラックハットSEO</a>という（反対語はホワイトハットSEO）。</p>

<p>このようなブラックハットSEOが横行すると、低品質ページが検索結果の上位を占めることとなり、検索の主体としてのユーザーがヘイトを溜めていくこととなる。そしてユーザーはSEOという行為にある種の悪どさを感じてしまう。</p>

<h2 id="google-crawler-optimization">Google Crawler Optimization</h2>

<p>僕はそのどことなく小賢しい響きのあるSEOに代えて別な言葉を提唱したい。<strong>Google Crawler Optimization</strong>（以下GCO）、つまりGoogleクローラのための最適化だ。といっても表面的に言っていることはSEOと同じである。</p>

<p>SEOの文脈でサーチエンジンといった場合、たいていの場合がGoogleの検索エンジンのことを指すので、サーチエンジン最適化はGoogle検索エンジン最適化とも言える。そして検索エンジン最適化のためにはサイトを巡回してくるクローラー（Googlebot）を相手に最適化をするのでそれはクローラー最適化とも言える。</p>

<p>ではなぜSEOとGCO区別したいかというと、それぞれが目指すゴール・目的をはっきりと分けたかったからだ。</p>

<h2 id="seoとgcoの違い">SEOとGCOの違い</h2>

<p>SEOとGCOの違いはこうだ<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>。</p>

<table>
  <thead>
    <tr>
      <th> </th>
      <th>SEO</th>
      <th>GCO</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>目的</strong></td>
      <td>ページの順位を上げること</td>
      <td>ページを適切にGoolgeクローラーに適切に解釈させること<br />（その結果として順位が上がろうが下がろうが関係ない）</td>
    </tr>
    <tr>
      <td><strong>やり方</strong></td>
      <td>1. 正攻法なホワイトハットSEOによって順位を上げる<br />2. 不正なブラックハットSEOによって順位を上げる</td>
      <td>- ホワイトハットSEOの手法のみを許容する<br />- Googleの公式ガイドライン（<a href="https://static.googleusercontent.com/media/www.Google.com/ja//intl/ja/webmasters/docs/search-engine-optimization-starter-guide-ja.pdf">検索エンジン最適化スターターガイド</a>, <a href="https://support.google.com/webmasters/answer/35769?hl=ja">ウェブマスター向けガイドライン</a>）を忠実に実施、その他世に溢れるSEOテクニック情報などは無視<br />- クローラー最適化の一環としてTwitterクローラ最適化・Facebookクローラ最適化なども行う（OGタグなどの各種タグ設定）</td>
    </tr>
  </tbody>
</table>

<p>僕も本ブログなどはそれなりにSEOを意識して作っている。しかしその目的はサイトランクを上げることではない。サイトを適切にGoogleに評価してもらうためだ。評価の結果別にランクが下になろうとあまり気にしない。それがGoogleの下した評価であり勝負の結果だからだ<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">2</a></sup>。</p>

<p>みんながGoogleの推奨する最適化を行って同じ土俵に立った上で勝敗はGoogleのアルゴリズムに任せようね、ってスタンスが僕は一番スッキリする。</p>

<p>とは言っても全ての人が土俵に立てるわけでもないし、土俵の立ち方がわからない人もいる。そういう人たちをサポートするためにSEOビジネスは今後も必要だし、生き続けていく必要があるだろう。</p>

<h2 id="ユーザーファーストを貫こう">ユーザーファーストを貫こう</h2>

<p>最終的にGoogleが見据えるのはユーザーだ。ユーザーにとって価値のある記事を届けるためのアルゴリズムだ。なので我々もGoogleのための最適化を行うならば、基本的にはその先にいるユーザーのことを考え、ユーザーファーストを貫くべきだろう。</p>

<p>「<strong>HTTPS化するとページランク上がるらしいから、HTTPSにしとこうぜ</strong>」</p>

<p>違う。ユーザーの通信をよりセキュアなものにするためにHTTPS化をするのであって、順位を上げるためではない。</p>

<p>日本ではあまり大きな声で言う人は少ないが、スノーデン事件以降、HTTPS/TLSでユーザーの通信内容を守るということは個人情報保護において極めて重要だ。</p>

<p>「<strong>検索結果に露出増えるらしいからAMP対応しようぜ</strong>」</p>

<p>違う。高速なWebブラウジング体験を実現するためにAMPというフォーマットを使うのであって、検索結果への露出は副次的効果だ。</p>

<p>Googleは高速なWeb体験を重要視する。なぜならGoogleはWebページのレスポンスが遅くなると多くのユーザーがページを離脱することを数字的なエビデンスをもとに知っているからだ。そして世界を見渡せば通信環境が劣悪な国・地域に住むユーザーがたくさんいることも知っている。彼らのためな高速なHTMLサブセットがAMPだ。</p>

<p>そう考えるとAMPだけ速ければ良いという考えにはならず、AMP以外の通常ページだってユーザー・ファーストという点で速くあるべきだ。</p>

<h2 id="正しいseoへと向かうために">正しいSEOへと向かうために</h2>

<p>真摯にSEOと向き合いきちんとSEOが良い方向にいくように情報発信しているSEOの専門家の方もいる。名前を挙げるとたとえば<a href="https://twitter.com/tsuj">@tsuj</a>さんだ。</p>

<p>辻さんのような方がSEO専門家という立場から、モラルのないSEO業者を監視・批判していくことでSEO業界全体が適切な良い方向に向かうことを期待したい。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">昔、医師監修に関わった事がありますし、いまやっている人の話も聞きますが、大変。専門医監修を十分な品質で行うのは大きなコストがかかりますし、医師不足ですのでそもそも困難です。<br />記事の大量掲載をするサイトで十分な品質での医師監修の体制を作るのは、無理な気がします。</p>&mdash; 辻正浩 | Masahiro Tsuji (@tsuj) <a href="https://twitter.com/tsuj/status/802472803983179776">November 26, 2016</a></blockquote>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">Googleで行われる全検索の5%は健康関係というのは周知の事実なのでそこに金脈があることは明らかでしたがモラルの壁があったのですよね。<br />ですが大手がその壁を無視して大儲けしたので今は二匹目のドジョウ狙いが次々と産まれている所。このままだと悪質な医療情報が更にネットに蔓延します。</p>&mdash; 辻正浩 | Masahiro Tsuji (@tsuj) <a href="https://twitter.com/tsuj/status/802477361555849216">November 26, 2016</a></blockquote>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">医療情報関連の問題の大きさを認識していない人たちが作った劣化welqみたいなサイトも既にあるみたいですけど。welqだけで終わる問題ではないはずなので、早めに諦めて撤退しちゃったほうがいいんじゃないですかね。最低でもwelqと同程度かそれ以下の品質の所は。</p>&mdash; 辻正浩 | Masahiro Tsuji (@tsuj) <a href="https://twitter.com/tsuj/status/802480245202792449">November 26, 2016</a></blockquote>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">独立してから5年間、わたしは健康・医療関連の仕事は色々と判断が難しいので全部断ってきた位ですので、気軽にやっちゃう人／会社が信じられないのですが。医療関連の情報に関わるのは本当に怖いし覚悟が必要と思っていますし、逸脱したところがうまくいくべきとは思えません。</p>&mdash; 辻正浩 | Masahiro Tsuji (@tsuj) <a href="https://twitter.com/tsuj/status/802481887545462784">November 26, 2016</a></blockquote>

<p>またライターという立場から朽木さん（<a href="twitter.com/amanojerk">@amanojerk</a>）も積極的に本件に関して情報発信・問題提起をしている。</p>

<p><a class="twitter-moment" href="https://twitter.com/i/moments/803077459264450562">【随時更新】信頼性の高い医療情報サイトまとめ</a></p>

<p>朽木さんのようにしっかりとライティング活動をしている方もいるので、本件によって変にライターが貶められないことを祈るばかりだ。</p>

<h2 id="よりよいwebへと向かうために">よりよいWEBへと向かうために</h2>

<p>インターネットの海にある情報は今も昔も玉石混交だ。それをGoogleが圧倒的なテクノロジーを武器に情報フィルタリングをかけてくれている。Googleのふるいが正しく機能している限りにおいて、情報の絶対量が多くなることは良い事だ。問題は玉に混じった石ころたちで、これにどう対処していくべきか。</p>

<p><img src="/images/posts/google-result.jpg" alt="google result" /></p>

<p>:point_up:<strong>ページに遷移する手前の検索結果画面でGoogleがユーザーへ情報を提供するケースも増えてきている</strong></p>

<p>正直言うと検索エンジンスパムに関しては僕は楽観的だ。アルファ碁やGoogle Photo、Google翻訳でご存字の通り、昨今のGoogleのディープラーニング技術の進化は目を見張るものがある。人間にしかできなかった行為が次々に機械に置き換えられていく。スパムも結局精度の問題でしっかり機械が学習してスパム判定精度が上がっていけばスパムは適切に弾けるだろう。</p>

<p>ただ今回のWELQの記事はどうかというとちょっと疑問で、WELQの提供する圧倒的な分量で一部の専門家にしかその真偽がわからないような内容をGoogleが正しく真偽も含めてランク付けできるか？というと僕にはよくわからない（剽窃行為は判定できそうだが）。</p>

<p>そうなると、情報発信者としてのモラルの問題になってくる。適当な情報は発信しない、引用と自分の文章を区別する、きちんと一次情報に当たる、情報ソースを明記する、など。そこはやっぱり、ビジネスという軸とは別に情報発信者としてモラルが必要だ。</p>

<p>より良いWEBへと向かうためにキュレーションメディア各位には石な情報を量産するのではなく、きちんと玉な情報を発信していってもらいたいと願います。</p>

<h2 id="welqについて">WELQについて</h2>

<p>まぁここまで書いたのでWELQについて一言いっておくと、DeNAくらいの規模の会社がSEOノウハウ・人・モノ・金を総動員させてパワープレイすればそりゃページのランクは上がる。しかし医療・健康というテーマ・分野においては人の命がかかわってくる場合もあるので、そこは情報発信の立場として慎重になるべきでしょう。<a href="http://dena-palette.jp/">DeNAパレットメディア</a>含め、良い情報がウェブに増えていくことは良いことですので頑張ってください。</p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>あくまでも上定義は僕個人が考えた定義であって一般的なSEOの定義とは異なる点に留意 <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:2" role="doc-endnote">
      <p>とはいえ気合を入れて書いた記事が他のページに負けたりするのはちょっと悔しい <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Toshimaru</name></author><category term="seo" /><category term="web" /><summary type="html"><![CDATA[SEOという言葉が嫌いだ。そこにはビジネスがあり、カネがあり、カネの匂いを嗅ぎつけたSEO業者たちがいる。最近、DeNAの運営するキュレーションメディア、WELQでこんなニュースがあった。 「死にたい」検索トップの「welq」の記事、DeNAが広告削除　「不適切」指摘受け - ITmedia ニュース DeNAがやってるウェルク（Welq）っていうのが企業としてやってはいけない一線を完全に越えてる件（第１回） このような指摘を受け、DeNAは下記のような発表を出した。僕はこの一連の件に関してあれこれうるさく言うつもりもないしその言葉も持ち合わせてないが、SEOについて最近ぼんやり考えていることを再考するきっかけとなったのでそこらへんを書いてみるとする。]]></summary></entry><entry><title type="html">Google Analyticsにみるブログ記事のバズり方の流れ</title><link href="https://blog.toshimaru.net/buzz-flow/" rel="alternate" type="text/html" title="Google Analyticsにみるブログ記事のバズり方の流れ" /><published>2013-11-23T00:00:00+09:00</published><updated>2013-11-23T00:00:00+09:00</updated><id>https://blog.toshimaru.net/buzz-flow</id><content type="html" xml:base="https://blog.toshimaru.net/buzz-flow/"><![CDATA[<p><a href="/cool-ui/">先日のブログ記事</a>がバズりました。現時点でおおよそtweet数1200、いいね数1000、はてブ数900となっています。はてブ数500以上もらったのは始めての経験でGoogle Analyticsを興味深く眺めてたんですが、面白い傾向が見えたので個人的メモの意味もこめて書いてみます。</p>

<h2 id="バズによるページビュー変化">バズによるページビュー変化</h2>

<p>まずは今月のページビューのチャート。</p>

<p><img src="/images/posts/buzz/chart.png" alt="pageview chart" /></p>

<p>今までのビュー数がアホみたいにみえますね（笑）。恐るべしバズ効果。</p>

<h2 id="流入元">流入元</h2>

<p>これだけ各種SNSでシェアされたので、次はどこからの流入が最も多かったのかが気になりました。</p>

<p><img src="/images/posts/buzz/sources.png" alt="流入元" /></p>

<p>なんと一番はTwitterでもFacebookでもはてなでもなくGunosyでした！　いかにみんながGunosyで情報を消化しているかがわかりますね。</p>

<h2 id="gunosy砲twitter砲facebook砲はてブ砲それぞれの波及順序">Gunosy砲、Twitter砲、Facebook砲、はてブ砲それぞれの波及順序</h2>

<p>今回Gunosy砲、Twitter砲、Facebook砲、はてブ砲全てを食らったわけですがどういう順番で砲撃されるかを見てみました。</p>

<p><img src="/images/posts/buzz/compare2.png" alt="比較２" /></p>

<ul>
  <li>青：全体</li>
  <li>オレンジ：Gunosy</li>
  <li>緑：はてな</li>
  <li>紫：Twitter</li>
  <li>黄：Facebook</li>
</ul>

<p><img src="/images/posts/buzz/compare.png" alt="比較１" /></p>

<p>なんとなく感じてた自分の感覚値と一緒の感じでした。順番としてはこんな感じです。</p>

<ol>
  <li>Twitter/Facebookでシェアされ始める。と同時にはてなブックマークされ始める。</li>
  <li>はてな新着エントリ入り→ホットエントリ入り→はてなからのアクセス数が一気に増える</li>
  <li>Twitterのシェアがどんどん拡大、アクセス数も増える</li>
  <li>Twitter/はてなの流入が落ち着き始める頃に記事がGunosyに取り上げられる→Gunosyから大量アクセス</li>
  <li>1-4の間、Facebookからはじわじわとアクセス数が上がっている</li>
</ol>

<p>Gunosyに取り上げられた日の翌日にはアクセス数が落ち着き始める感じでしょうか。</p>

<h2 id="軽く分析">軽く分析</h2>

<p>FBいいね数、Tweet数はだいたい同じにもかかわらずFacebookからの流入のほうがTwitterよりも少ないのは面白かった。つまりFacebookのほうが共有されたとしても波及効果はTwitterよりも低いということになりますね。</p>

<p>長い記事だったせいか読者傾向に大きな違いは見られなかったです。みんな５分くらいは滞在して読んでくれたみたいです。</p>

<p>あとGunosyからのアクセス数が一番多かったのは驚きでした。自分もニュースソースのほとんどはGunosyから見るようにしているのですが、みなさんもそうなんですね。</p>]]></content><author><name>Toshimaru</name></author><category term="seo" /><summary type="html"><![CDATA[先日のブログ記事がバズりました。現時点でおおよそtweet数1200、いいね数1000、はてブ数900となっています。はてブ数500以上もらったのは始めての経験でGoogle Analyticsを興味深く眺めてたんですが、面白い傾向が見えたので個人的メモの意味もこめて書いてみます。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/buzz/compare.png" /><media:content medium="image" url="https://blog.toshimaru.net/images/posts/buzz/compare.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>