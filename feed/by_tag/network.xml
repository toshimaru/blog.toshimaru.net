<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://blog.toshimaru.net/feed/by_tag/network.xml" rel="self" type="application/atom+xml" /><link href="https://blog.toshimaru.net/" rel="alternate" type="text/html" /><updated>2024-02-06T13:03:33+09:00</updated><id>https://blog.toshimaru.net/feed/by_tag/network.xml</id><title type="html">Hack Your Design!</title><subtitle>toshimaruの技術系なブログ</subtitle><author><name>Toshimaru</name></author><entry><title type="html">RailsアプリケーションをLAN内に公開する</title><link href="https://blog.toshimaru.net/publish-rails-app-in-lan/" rel="alternate" type="text/html" title="RailsアプリケーションをLAN内に公開する" /><published>2015-07-17T00:00:00+09:00</published><updated>2015-07-17T00:00:00+09:00</updated><id>https://blog.toshimaru.net/publish-rails-app-in-lan</id><content type="html" xml:base="https://blog.toshimaru.net/publish-rails-app-in-lan/"><![CDATA[<p>普通に<code class="language-plaintext highlighter-rouge">rails server</code>した場合、デフォルトでlocalhost:3000でリッスンするので、LAN(Local Area Network)内の外部のクライアントからローカルIPではアクセスすることができません。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ rails server
=&gt; Booting WEBrick
=&gt; Rails 4.2.3 application starting in development on http://localhost:3000
=&gt; Run `rails server -h` for more startup options
=&gt; Ctrl-C to shutdown server
</code></pre></div></div>

<p>これをLAN内に公開したい場合はどうするか。下記のように<code class="language-plaintext highlighter-rouge">binding</code>のオプションを付けてその値として<code class="language-plaintext highlighter-rouge">0.0.0.0</code>を指定します。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ rails server --binding=0.0.0.0
=&gt; Booting WEBrick
=&gt; Rails 4.2.3 application starting in development on http://0.0.0.0:3000
=&gt; Run `rails server -h` for more startup options
=&gt; Ctrl-C to shutdown server
</code></pre></div></div>

<p>このコマンドを使うことで同じLAN内にいるクライアントからRailsが起動しているマシンのローカルIPをポート番号とともに（例: <code class="language-plaintext highlighter-rouge">192.168.1.xx:3000</code>）を叩けば、アプリケーションへとアクセス可能になります。</p>

<h2 id="なぜ0000">なぜ0.0.0.0？</h2>

<p><code class="language-plaintext highlighter-rouge">rails server</code>コマンドはデフォルトで<strong>ループバックアドレス</strong>、つまりlocalhost(<code class="language-plaintext highlighter-rouge">127.0.0.1</code>)にバインドされます。ループバックアドレスは自分自身を指し示すアドレスなのでなので外部からのアクセスは弾かれます。</p>

<blockquote>
  <p>常に「自分自身」を指すIPアドレスは、当然ですが、他のコンピュータとの通信などには使えません。</p>

  <p><a href="http://www.arearesearch.co.jp/learn/ip/09.html">ローカルループバックアドレス | IPラーニング</a></p>
</blockquote>

<p>よってデフォルトの<code class="language-plaintext highlighter-rouge">rails server</code>起動コマンドではでは外部からのアクセスは遮断されます。</p>

<p>一方、<code class="language-plaintext highlighter-rouge">0.0.0.0</code>はどうかというと、<code class="language-plaintext highlighter-rouge">0.0.0.0</code>のアドレスには複数の意味があり文脈によって意味が異なっています。今回の場合、ループバックアドレス含む全てのIPアドレスという意味です。ときに<code class="language-plaintext highlighter-rouge">0.0.0.0</code>のアドレスは<strong>ワイルドカードアドレス</strong>と言われることもあります。</p>

<blockquote>
  <p>システムにおけるすべてのインタフェースのすべてのIPアドレス</p>

  <p><a href="http://news.mynavi.jp/news/2016/10/25/414/">IPv4アドレス「0.0.0.0」の意味は? | マイナビニュース</a></p>
</blockquote>

<p>本記事で紹介した<code class="language-plaintext highlighter-rouge">rails server</code>のコマンドは<code class="language-plaintext highlighter-rouge">binding</code>オプションによって<code class="language-plaintext highlighter-rouge">0.0.0.0</code>に明示的にバインドすることにより、外部からのアクセスも許可しています。</p>

<h2 id="参考">参考</h2>

<ul>
  <li><a href="http://stackoverflow.com/questions/29132719/rails-application-not-visible-to-local-network">osx yosemite - Rails application not visible to local network - Stack Overflow</a></li>
  <li><a href="https://fossbytes.com/ip-address-0-0-0-0-meaning-default-route-uses/">What Does The IP Address 0.0.0.0 Really Mean? What Are Its Different Uses?</a></li>
</ul>]]></content><author><name>Toshimaru</name></author><category term="rails" /><category term="network" /><summary type="html"><![CDATA[普通に`rails server`した場合、デフォルトでlocalhost:3000でリッスンするので、LAN(Local Area Network)内の外部のクライアントからLocal IPではアクセスすることができません。これを解決するためにはどうしたらよいでしょうか。]]></summary></entry><entry><title type="html">MacOSでMACアドレスを変更するコマンド</title><link href="https://blog.toshimaru.net/change-mac-address/" rel="alternate" type="text/html" title="MacOSでMACアドレスを変更するコマンド" /><published>2013-08-02T00:00:00+09:00</published><updated>2013-08-02T00:00:00+09:00</updated><id>https://blog.toshimaru.net/change-mac-address</id><content type="html" xml:base="https://blog.toshimaru.net/change-mac-address/"><![CDATA[<h2 id="macアドレスの変更コマンド">MACアドレスの変更コマンド</h2>

<p>MACアドレスを変更するコマンドが思ったより簡単に実行できたのでご紹介。(環境はMac OS X 10.8)</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>ifconfig en0 ether XX:XX:XX:XX:XX:XX
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">XX:XX:XX:XX:XX:XX</code> の部分に変更したいMACアドレスを入れて実行してください。</p>

<h2 id="ランダムなmacアドレスを生成">ランダムなMACアドレスを生成</h2>

<p>MACアドレスを適当に生成したければこちらをどうぞ。</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>openssl rand <span class="nt">-hex</span> 6 | <span class="nb">sed</span> <span class="s1">'s/\(..\)/\1:/g; s/.$//'</span>
</code></pre></div></div>

<p>このコマンドで下記のようなランダムなMACアドレスを生成してくれます。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>f8:e4:03:88:9d:37
83:c8:ab:8b:39:4d
0b:ad:21:f1:03:9c
...
</code></pre></div></div>

<h2 id="参考">参考</h2>
<ul>
  <li><a href="http://whatismyipaddress.com/change-mac">How do I change my MAC address?</a></li>
</ul>]]></content><author><name>Toshimaru</name></author><category term="mac" /><category term="network" /><summary type="html"><![CDATA[MACアドレスを変更するコマンドが思ったより簡単に実行できたのでご紹介。(MAC OS X 10.8)]]></summary></entry><entry><title type="html">SNMPサーバを立てて、クライアントからsnmpwalkする</title><link href="https://blog.toshimaru.net/snmpsnmpwalk/" rel="alternate" type="text/html" title="SNMPサーバを立てて、クライアントからsnmpwalkする" /><published>2011-12-04T00:00:00+09:00</published><updated>2011-12-04T00:00:00+09:00</updated><id>https://blog.toshimaru.net/snmpsnmpwalk</id><content type="html" xml:base="https://blog.toshimaru.net/snmpsnmpwalk/"><![CDATA[<p>お仕事でSNMPを使うことがありましたので勉強がてらメモ。</p>
<div>
  <pre>$ sudo apt-get install snmp snmpd</pre>
</div>

<p>localhostにsnmpwalkしてMIBツリーの情報を取得できます。</p>

<div>
<pre>$ snmpwalk -v 1 -c public localhost
 iso.3.6.1.2.1.1.1.0 = STRING: &quot;Linux ubuntu 3.0.0-12-generic #20-Ubuntu SMP Fri Oct 7 14:56:25 UTC 2011 x86_64&quot;
 iso.3.6.1.2.1.1.2.0 = OID: iso.3.6.1.4.1.8072.3.2.10
（以下略...）</pre>
</div>

<p>デフォルトの状態だとlocalhostのみで外部からsnmpwalkできないので、/etc/snmp/snmpd.conf　のagentAddressを下記のように編集してsnmpdを再起動する。</p>

<div>
  <pre>agentAddress  udp:161</pre>
</div>

<p>これで外部からsnmpwalkできるようになります。</p>

<h3>参考</h3>
<ul>
<li><a href="http://www.atmarkit.co.jp/flinux/rensai/root07/root07c.html">http://www.atmarkit.co.jp/flinux/rensai/root07/root07c.html</a></li>
<li><a href="http://www.uetyi.mydns.jp/wordpress/snmp-setting/entry-137.html">http://www.uetyi.mydns.jp/wordpress/snmp-setting/entry-137.html</a></li>
</ul>]]></content><author><name>Toshimaru</name></author><category term="linux" /><category term="network" /><summary type="html"><![CDATA[お仕事でSNMPを使うことがありましたので勉強がてらメモ。sudo apt-get install snmp snmpd]]></summary></entry><entry><title type="html">vmware上のubuntuのネットワーク設定</title><link href="https://blog.toshimaru.net/vmwareubuntu/" rel="alternate" type="text/html" title="vmware上のubuntuのネットワーク設定" /><published>2011-11-02T00:00:00+09:00</published><updated>2011-11-02T00:00:00+09:00</updated><id>https://blog.toshimaru.net/vmwareubuntu</id><content type="html" xml:base="https://blog.toshimaru.net/vmwareubuntu/"><![CDATA[<p>をちょっとメモ</p>
<p>まずはeth0に静的IPを割り振りましょう。/etc/network/interfaces を下記のような感じで書き換える。</p>
<p>（参考：<a href="http://tobysoft.net/wiki/index.php?Ubuntu%2F%A5%A4%A5%F3%A5%B9%A5%C8%A1%BC%A5%EB%B8%E5%A4%CE%C0%DF%C4%EA#v8e1badd">Ubuntu/インストール後の設定</a> ）</p>
<div class="CodeRay">
  <div class="code"><pre>auto lo
iface lo inet loopback

auto eth0
iface eth0 inet static         # ↓ 注意：この日本語コメントは削除してください（でないとかしくなります）
        address 192.168.0.100  # ← IPアドレス
        network 192.168.0.0  # ← (サブ)ネットワークのアドレス .0で終わるはず
        netmask 255.255.255.0  # ← ネットマスク
        broadcast 192.168.0.255 # ←ブロードキャストアドレス .255で終わるはず
        :ateway 192.168.0.1  # ← ゲートウェイ（ルーター）のアドレス
        dns-nameservers 192.168.0.10  # ← DNSのアドレス</pre></div>
</div>

<p>設定を変えたら以下のコマンドで設定を反映させます。</p>
<div class="CodeRay">
  <div class="code"><pre>sudo /etc/init.d/networking restart</pre></div>
</div>

<p>するとこんなエラー。</p>
<div class="CodeRay">
  <div class="code"><pre>eth0: ERROR while getting interface flags: No such device</pre></div>
</div>

<p>これに対しては、以下の対応をするとよいよう。</p>
<ol>
<li> /etc/udev/rules.d/70-persistent-net.rulesの SUBSYSTEM==&rdquo;net&rdquo;から始まる行を削除（またはコメントアウト） </li>
<li> /etc/udev/rules.d/75-persistent-net-generator.rulesの以下2行を削除（またはコメントアウト） </li>
</ol>
<p>(参考：<a href="http://namahage.dip.jp/blog/2107">vmwareのubuntuを別PCへ移動で eth0: ERROR</a>）</p>
<p>これで問題なく通りましたとさ。</p>]]></content><author><name>Toshimaru</name></author><category term="linux" /><category term="network" /><summary type="html"><![CDATA[をちょっとメモ まずはeth0に静的IPを割り振りましょう。/etc/network/interfaces を下記のような感じで書き換える。 （参考：Ubuntu/インストール後の設定 ） auto lo iface lo inet loopback]]></summary></entry></feed>