<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://blog.toshimaru.net/feed/by_tag/rfc.xml" rel="self" type="application/atom+xml" /><link href="https://blog.toshimaru.net/" rel="alternate" type="text/html" /><updated>2022-06-22T10:09:46+09:00</updated><id>https://blog.toshimaru.net/feed/by_tag/rfc.xml</id><title type="html">Hack Your Design!</title><subtitle>toshimaruの技術系なブログ</subtitle><author><name>Toshimaru</name></author><entry><title type="html">メールアドレス登録時に安心して使える文字列</title><link href="https://blog.toshimaru.net/rfc/" rel="alternate" type="text/html" title="メールアドレス登録時に安心して使える文字列" /><published>2012-07-11T00:00:00+09:00</published><updated>2012-07-11T00:00:00+09:00</updated><id>https://blog.toshimaru.net/rfc</id><content type="html" xml:base="https://blog.toshimaru.net/rfc/"><![CDATA[<h2 id="追記">追記</h2>

<p>タイトルが少し誤解を招きそうなので本文とともに修正しておきました。</p>

<p>本エントリでは <strong>メールアドレス登録時に安心して使える文字列</strong> を紹介していますが、本文中にも書いてある通り本来RFC的に使ってよい文字列は広範です。詳しくは下記エントリを参照してください。</p>

<p><a href="http://orgachem.hatenablog.com/entry/2013/11/26/015343">「メールアドレスのルール」系まとめがそろって間違ってるのでご注意を - 若き JavaScripter の悩み</a></p>

<hr />

<h2 id="tldr">TL;DR</h2>

<p>メールアドレスとして安心して使える使用可能文字は <strong>アルファベット、数字、<code class="language-plaintext highlighter-rouge">-</code>（ハイフン）、<code class="language-plaintext highlighter-rouge">_</code>（アンダースコア）、<code class="language-plaintext highlighter-rouge">.</code>（ドット）</strong>。</p>

<h2 id="gmailのプラス付アドレス">Gmailのプラス付アドレス</h2>

<p>メールアドレスのローカル部に使用できる記号について調べた。調べるきっかけはGmailの<code class="language-plaintext highlighter-rouge">+</code>（プラス）の入ったアドレスを使おうとしたこと。</p>

<blockquote>
  <p>Gmail が次のような仕様になっているからだ。</p>

  <ul>
    <li>.(ドット/ピリオド) は無視される</li>
    <li>+(プラス) から @ までは無視される</li>
  </ul>
</blockquote>

<p>via. <a href="http://blog.livedoor.jp/lalha/archives/50158699.html">Gmail における .(ドット/ピリオド) と +(プラス) の扱いの不思議</a></p>

<p>上記のようなGmailの仕様から、例えば会員登録機能を開発したときに１つのGmailアカウントをとってそれを使い回せばテストするのにいろいろと便利なのです。<code class="language-plaintext highlighter-rouge">myaddress+test1@gmail.com</code>、 <code class="language-plaintext highlighter-rouge">myaddress+test2@gmail.com</code>という具合に。こうすることで１つのメールアドレスで１つのサービスに対して複数アカウントを登録できます。</p>

<h2 id="プラス記号が使えなかった">プラス記号が使えなかった</h2>

<p>ということで自分が作った会員登録機能でこのプラスアドレスを使おうと思ったが、どういうわけか不正なメールアドレスとして弾かれる。調べてみると、開発においてとあるバリデーションのライブラリを使用していたのだが、そのバリデーション機構が<code class="language-plaintext highlighter-rouge">+</code>の文字列を弾いているらしいことがわかった。</p>

<p><a href="http://n.h7a.org/blog/entry/1509">メールアドレスに + を使うと危ない件</a></p>

<p>え？プラスって使っちゃいけないのか？ （タイトルだけ読んで判断したが、元記事はそんなことは全くいってません）</p>

<h2 id="rfc的に使ってよい文字">RFC的に使ってよい文字</h2>

<p>RFC的にはどーなんだろうか。調べてみよう。</p>

<blockquote>
  <p>上記をまとめると、メールアドレスに使える文字は</p>

  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>アルファベット 数字 ! # $ % &amp; ’ * + - / = ? ^ _ ` { | } ~ .
</code></pre></div>  </div>

  <p>となります。<code class="language-plaintext highlighter-rouge">.</code>は先頭と最後には利用することができません。</p>
</blockquote>

<p>via. <a href="http://www.go5.jp/~nyomo/net/mailaddr.html">メールアドレスで使える記号</a></p>

<p>つまりRFCでは下記の記号は使って良いとされており、<strong>RFCの仕様的には使える記号はけっこうある</strong> んです。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>! # $ % &amp; ’ * + - / = ? ^ _ ` { | } ~ .
</code></pre></div></div>

<h2 id="リアルワールドで安心して使えそうな文字">リアルワールドで安心して使えそうな文字</h2>

<p>しかし実際のところ同記事に書いてあるとおり、<strong>プロバイダ側で使える文字を制限している</strong> のが現実です。</p>

<blockquote>
  <p>メールでの利用やwebサイトに掲載の際に安心して利用できる文字種は以下の通り</p>

  <ul>
    <li>アルファベットの大文字と小文字</li>
    <li>数字</li>
    <li><code class="language-plaintext highlighter-rouge">-</code>(ハイフン)</li>
    <li><code class="language-plaintext highlighter-rouge">_</code>(アンダーバー)</li>
    <li><code class="language-plaintext highlighter-rouge">.</code>(ピリオド)但し利用制限あり(@の直前は不可、連続しての利用も不可)</li>
  </ul>
</blockquote>

<p>via. <a href="http://www.go5.jp/~nyomo/net/mailaddr.html">メールアドレスで使える記号</a></p>

<p>結局のところ安心して使えるのは上記の文字となるようです。</p>

<p>RFCは個人的にはネットワークにおける聖典、絶対的な価値基準だと思っていたけどそんなことはないようです。<a href="http://ke-tai.org/blog/2009/09/25/aurfc/">RFCをそもそも守らない大手通信キャリアさん</a>もあったようですので<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup> まだRFCの基準の範囲内にあるだけよいのかもしれません。</p>

<h2 id="まとめ">まとめ</h2>

<ul>
  <li>メールアドレスとして安心して使える使用可能文字はアルファベット、数字、<code class="language-plaintext highlighter-rouge">-</code>（ハイフン）、<code class="language-plaintext highlighter-rouge">_</code>（アンダースコア）、<code class="language-plaintext highlighter-rouge">.</code>（ドット）</li>
  <li>RFC仕様的に使用可能な文字にもかかわらず、プロバイダや通信キャリアの制限などによって使えない場合もある</li>
</ul>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>RFC準拠ではないメールアドレスにメールを送ろうとする度にiPhoneのメールクライアントに宛先メールアドレスは不正なメールアドレスですと怒られる <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Toshimaru</name></author><category term="mail" /><category term="rfc" /><summary type="html"><![CDATA[メールアドレスのローカル部に使用できる記号について調べた。調べるきっかけはGmailの+（プラス）付アドレスを使おうとして使えなかったこと。]]></summary></entry></feed>