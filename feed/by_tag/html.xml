<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator><link href="https://blog.toshimaru.net/feed/by_tag/html.xml" rel="self" type="application/atom+xml" /><link href="https://blog.toshimaru.net/" rel="alternate" type="text/html" /><updated>2023-04-30T22:40:52+09:00</updated><id>https://blog.toshimaru.net/feed/by_tag/html.xml</id><title type="html">Hack Your Design!</title><subtitle>toshimaruの技術系なブログ</subtitle><author><name>Toshimaru</name></author><entry><title type="html">Responsive Web Design 時代の画像スライダー</title><link href="https://blog.toshimaru.net/responsive-web-design/" rel="alternate" type="text/html" title="Responsive Web Design 時代の画像スライダー" /><published>2012-10-11T00:00:00+09:00</published><updated>2012-10-11T00:00:00+09:00</updated><id>https://blog.toshimaru.net/responsive-web-design</id><content type="html" xml:base="https://blog.toshimaru.net/responsive-web-design/"><![CDATA[<p>え？　"れすぽんしぶうぇぶでざいん"って何かって？</p>
<p>なかなか日本では聞きなれないような気がしなくもないですがこんな意味です。</p>
<blockquote>
<p>Responsive web design (often abbreviated to RWD) is an approach to web design in which a site is crafted to provide an optimal viewing experience&mdash;easy reading and navigation with a minimum of resizing, panning, and scrolling&mdash;across a wide range of devices (from desktop computer monitors to mobile phones).</p>
<p><a href="http://en.wikipedia.org/wiki/Responsive_web_design">Responsive web design (wikipedia)</a></p>
</blockquote>
<p>つまり、レスポンシブWEBデザインとは、デバイスの幅に応じてWebの見た目（レイアウトとかサイズとか）が最適化されるWebデザインの手法のことです。タブレット、スマホの台頭によってますます重要視されている手法ですね。</p>
<p>さて、本題。本日は画像スライダーのお話。</p>
<p>先日画像スライダーを実装する機会があったので「js slider」なんかでググって一番最初に出てくる<a href="http://www.slidesjs.com/">slidesjs</a>で画像スライダーを実装するわけです。でもスマホやタブレット見て分かる通り、全然それらのデバイスに最適化されてませんね。</p>
<p><img src="/images/2012/10/slider2.png"></p>
<p><a href="http://toshimaru.net/demo/slidesjs/">http://toshimaru.net/demo/slidesjs/</a></p>
<p>幅がデバイスに応じて変わったりもしないので、ちゃんと最適化されるような違う画像スライダーを探してみます。</p>
<p>んでたどり着いたのが<a href="http://flexslider.woothemes.com/">FlexSlider2</a>。ちゃんとPCでもタブレットでも最適化されて表示されますね。</p>
<p><img src="/images/2012/10/slider3.png"></p>
<p><img src="/images/2012/10/slider1.png"></p>
<p>スマホ、タブレット対応が必須な今、しっかりレスポンシブデザインを心がけてWEB制作をしていきたいところです。</p>
<h3>参考</h3>
<ul>
<li><a href="http://ascii.jp/elem/000/000/697/697463/">レスポンシブWebデザインとは</a> </li>
</ul>]]></content><author><name>Toshimaru</name></author><category term="css" /><category term="design" /><category term="html" /><category term="javascript" /><summary type="html"><![CDATA[え？　"れすぽんしぶうぇぶでざいん"って何かって？ なかなか日本では聞きなれないような気がしなくもないですがこんな意味です。 Responsive web design (often abbreviated to RWD) is an approach to web design in which a site is crafted to provide an optimal viewing experience&mdash;easy reading and navigation with a minimum of resizing, panning, and scrolling&mdash;across a wide range of devices (from desktop computer monitors to mobile phones). Responsive web design (wikipedia) つまり、レスポンシブWEBデザインとは、デバイスの幅に応じてWebの見た目（レイアウトとかサイズとか）が最適化されるWebデザインの手法のことです。タブレット、スマホの台頭によってますます重要視されている手法ですね。 さて、本題。本日は画像スライダーのお話。 先日画像スライダーを実装する機会があったので「js slider」なんかでググって一番最初に出てくるslidesjsで画像スライダーを実装するわけです。でもスマホやタブレット見て分かる通り、全然それらのデバイスに最適化されてませんね。 http://toshimaru.net/demo/slidesjs/ 幅がデバイスに応じて変わったりもしないので、ちゃんと最適化されるような違う画像スライダーを探してみます。 んでたどり着いたのがFlexSlider2。ちゃんとPCでもタブレットでも最適化されて表示されますね。 スマホ、タブレット対応が必須な今、しっかりレスポンシブデザインを心がけてWEB制作をしていきたいところです。 参考 レスポンシブWebデザインとは]]></summary></entry><entry><title type="html">アスペクト比を計算するWebアプリを作成しました</title><link href="https://blog.toshimaru.net/web/" rel="alternate" type="text/html" title="アスペクト比を計算するWebアプリを作成しました" /><published>2012-10-01T00:00:00+09:00</published><updated>2018-01-24T00:00:00+09:00</updated><id>https://blog.toshimaru.net/web</id><content type="html" xml:base="https://blog.toshimaru.net/web/"><![CDATA[<p><a href="http://ratiocalculator.toshimaru.net/" class="btn btn-primary">Ratio Calculator</a></p>

<p><a href="http://ratiocalculator.toshimaru.net/">http://ratiocalculator.toshimaru.net/</a></p>

<p>様々なアスペクト比を計算するWebアプリを作成しました。作ったきっかけは16:9の画像をいろいろと使っていて、いちいちサイズ計算するのが面倒だったから。</p>

<p>使った言語、環境など紹介します。</p>

<h2 id="フロントエンド">フロントエンド</h2>

<ul>
  <li>HTML5</li>
  <li>CSS3 (with Bootstrap)</li>
  <li>jQuery</li>
</ul>

<h2 id="バックエンド">バックエンド</h2>

<ul>
  <li><del>Google App Engine</del></li>
  <li><del>Python (<a href="http://flask.pocoo.org/">Flask</a>)</del></li>
</ul>

<p><strong>追記</strong>: バックエンドはGoogleAppEngineからGitHub Pagesに移行しています。ソースは下記GitHub URLにて公開しています。</p>

<p>https://github.com/toshimaru/ratiocalculator</p>

<h2 id="インスパイアされたサービス">インスパイアされたサービス</h2>

<p><a href="http://zeller-lab.com/img-width/">Web計。</a></p>]]></content><author><name>Toshimaru</name></author><category term="css" /><category term="html" /><category term="javascript" /><summary type="html"><![CDATA[様々なアスペクト比を計算するWebアプリを作成しました。作ったきっかけは16:9の画像をいろいろと使っていて、いちいちサイズ計算するのが面倒だったから。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/2012/10/ratiocal.png" /><media:content medium="image" url="https://blog.toshimaru.net/images/2012/10/ratiocal.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">携帯電話の文字入力時の入力モードを指定する</title><link href="https://blog.toshimaru.net/84789272/" rel="alternate" type="text/html" title="携帯電話の文字入力時の入力モードを指定する" /><published>2011-12-09T00:00:00+09:00</published><updated>2011-12-09T00:00:00+09:00</updated><id>https://blog.toshimaru.net/84789272</id><content type="html" xml:base="https://blog.toshimaru.net/84789272/"><![CDATA[<p>ガラケー開発をする機会がありまして、驚くのはやはりガラケー独自の仕様です。</p>
<p>html内の&lt;input type="text"&gt;のテキストボックスで文字入力時にガラケーのデフォルトの入力モードを指定できる属性があることを知ったのでメモ。</p>
<table>

<tr>
<th colspan="2"> Docomo &amp; au </th>
</tr>
<tr>
<td>istyle="1"</td>
<td>全角かな</td>
</tr>
<tr>
<td>istyle="2"</td>
<td>半角カナ</td>
</tr>
<tr>
<td>istyle="3&Prime;</td>
<td>英字</td>
</tr>
<tr>
<td>istyle="4&Prime;</td>
<td>数字</td>
</tr>

</table>
<table>

<tr>
<th colspan="2"> SoftBank </th>
</tr>
<tr>
<td>mode="hiragana"</td>
<td>全角かな</td>
</tr>
<tr>
<td>mode="katakana"</td>
<td>全角カナ</td>
</tr>
<tr>
<td>mode="hankakukana"</td>
<td>半角カナ</td>
</tr>
<tr>
<td>mode="alphabet"</td>
<td>英字</td>
</tr>
<tr>
<td>mode="numeric"</td>
<td>数字</td>
</tr>

</table>]]></content><author><name>Toshimaru</name></author><category term="html" /><summary type="html"><![CDATA[ガラケー開発をする機会がありまして、驚くのはやはりガラケー独自の仕様です。 html内の&lt;input type="text"&gt;のテキストボックスで文字入力時にガラケーのデフォルトの入力モードを指定できる属性があることを知ったのでメモ。 Docomo &amp; au istyle="1" 全角かな istyle="2" 半角カナ istyle="3&Prime; 英字 istyle="4&Prime; 数字 SoftBank mode="hiragana" 全角かな mode="katakana" 全角カナ mode="hankakukana" 半角カナ mode="alphabet" 英字 mode="numeric" 数字]]></summary></entry></feed>