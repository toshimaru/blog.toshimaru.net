<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator><link href="https://blog.toshimaru.net/feed/by_tag/packer.xml" rel="self" type="application/atom+xml" /><link href="https://blog.toshimaru.net/" rel="alternate" type="text/html" /><updated>2023-04-30T22:40:52+09:00</updated><id>https://blog.toshimaru.net/feed/by_tag/packer.xml</id><title type="html">Hack Your Design!</title><subtitle>toshimaruの技術系なブログ</subtitle><author><name>Toshimaru</name></author><entry><title type="html">packerを使ってDigital Ocean上にイメージを作成する</title><link href="https://blog.toshimaru.net/digitalocean-image-with-packer/" rel="alternate" type="text/html" title="packerを使ってDigital Ocean上にイメージを作成する" /><published>2014-03-16T00:00:00+09:00</published><updated>2014-03-16T00:00:00+09:00</updated><id>https://blog.toshimaru.net/digitalocean-image-with-packer</id><content type="html" xml:base="https://blog.toshimaru.net/digitalocean-image-with-packer/"><![CDATA[<p>＜前回のあらすじ＞<br />
<a href="/digital-ocean-vagrant-puppet/">1円クラウド・DigitalOceanのインスタンスをVagrantで上げて、puppetでプロビジョニングする</a></p>

<p><a href="http://www.packer.io/">packer</a>を使ってDigital Ocean上にイメージを作成してみたのでそのときのメモ。</p>

<h2 id="packerとは">Packerとは？</h2>

<p><a href="http://www.vagrantup.com/">Vagrant</a>がVMの構築とかAWS/Digitgal Oceanでのインスタンス作成とかを抽象化して、プログラマブルにすることが可能なツールだとしたら、Packerはそれをさらに抽象化して、1つの設定ファイル(JSON)からAWS, Digital Ocean, VirtualBox向けのイメージを作成できるツール。</p>

<h2 id="digital-oceanにイメージ作成する">Digital Oceanにイメージ作成する</h2>

<p>今回はDigital Oceanにイメージを作成した。まずはpakcer用のディレクトリを用意。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ mkdir packer-test
$ cd packer-test
</code></pre></div></div>

<p>次にpackerの設定ファイルを用意。ファイル名は何でもよいっぽい。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ touch Packer.json
</code></pre></div></div>

<p>このように書く。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{
  "builders": [
    {
      "type": "digitalocean",
      "client_id": "your_client_id",
      "api_key": "your_api_key",
      "image_id": 1505447,
      "region_id": 3,
      "size_id": 66
    }
  ],

  "provisioners": [
    {
      "type": "shell",
      "script": "setup.sh"
    }
  ]
}
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">builder</code>でタイプをチョイス。今回は<code class="language-plaintext highlighter-rouge">digitalocean</code>を選択。<code class="language-plaintext highlighter-rouge">client_id</code>, <code class="language-plaintext highlighter-rouge">api_key</code>を設定。<code class="language-plaintext highlighter-rouge">image_id</code>,<code class="language-plaintext highlighter-rouge">region_id</code>,<code class="language-plaintext highlighter-rouge">size_id</code>のint値については<a href="https://developers.digitalocean.com/">こちらのDigitalOcean API</a>を見るとよいっぽい。</p>

<p>プロビジョニングのタイプは今回はシンプルにshellを設定。適当に<code class="language-plaintext highlighter-rouge">setup.sh</code>を作る。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ echo "echo 'hello world'" &gt; setup.sh
</code></pre></div></div>

<h2 id="packer">Packer!</h2>

<p>packerビルドしてみる。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ packer build Packer.json
digitalocean output will be in this color.

==&gt; digitalocean: Creating temporary ssh key for droplet...
==&gt; digitalocean: Creating droplet...
==&gt; digitalocean: Waiting for droplet to become active...
==&gt; digitalocean: Waiting for SSH to become available...
==&gt; digitalocean: Connected to SSH!
==&gt; digitalocean: Provisioning with shell script: setup.sh
    digitalocean: hello world!
    digitalocean:
==&gt; digitalocean: Gracefully shutting down droplet...
==&gt; digitalocean: Creating snapshot: packer-1395033724
==&gt; digitalocean: Waiting for snapshot to complete...
==&gt; digitalocean: Destroying droplet...
==&gt; digitalocean: Deleting temporary ssh key...
Build 'digitalocean' finished.

==&gt; Builds finished. The artifacts of successful builds are:
--&gt; digitalocean: A snapshot was created: 'packer-1395033724' in region 'San Francisco 1'
</code></pre></div></div>

<h2 id="結果">結果</h2>

<p>Before,Afterで見てみる。</p>

<p>Before:</p>

<p><img src="/images/posts/packer/do-before.png" alt="before" /></p>

<p>After:</p>

<p><img src="/images/posts/packer/do-after.png" alt="after" /></p>

<p>イメージのスナップショット（<code class="language-plaintext highlighter-rouge">packer-1395033724</code>）が作成されてますね。</p>

<h2 id="最後に">最後に</h2>

<p>packerはあくまでもイメージを作成するツールであり、イメージを管理するツールではないようです。</p>

<blockquote>
  <p>Packer only builds images. It does not attempt to manage them in any way.</p>
</blockquote>

<p>See. <a href="http://www.packer.io/intro/getting-started/build-image.html">http://www.packer.io/intro/getting-started/build-image.html</a></p>

<p>また、<code class="language-plaintext highlighter-rouge">builders</code>の設定を変更することで、<a href="http://www.packer.io/docs/builders/amazon.html">Amazon EC2</a>や<a href="http://www.packer.io/docs/builders/googlecompute.html">Google Compute Engine</a>とかにもイメージ作成できるようですね。</p>

<h3 id="github-repo">Github Repo</h3>

<p>今回使ったものをGithubにおいておきます。</p>

<p><a href="https://github.com/toshimaru/packer-digitalocean-sample">https://github.com/toshimaru/packer-digitalocean-sample</a></p>

<h3 id="参考">参考</h3>

<ul>
  <li><a href="http://rebuild.fm/25/">Rebuild: 25: Immutable Infrastructure (Naoya Ito, Gosuke Miyashita)</a></li>
</ul>

<hr />

<p>この記事を気に入っていただけたなら下記のリファラルリンクよりDigital Oceanにご登録いただけますと筆者が喜びます(*´ω｀*)</p>

<p><a href="https://m.do.co/c/a79091850c6e"><img src="/images/digitalocean.png" alt="digitalocean" /></a></p>]]></content><author><name>Toshimaru</name></author><category term="digitalocean" /><category term="packer" /><summary type="html"><![CDATA[packerを使ってDigital Ocean上にイメージを作成してみたのでそのときのメモ。 Packerとは？ VagrantがVMの構築とかAWS/Digitgal Oceanでのインスタンス作成とかを抽象化して、プログラマブルにすることが可能なツールだとしたら、Packerはそれをさらに抽象化して、1つの設定ファイル(JSON)からAWS, Digital Ocean, VirtualBox向けのイメージを作成できるツール。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/packer/packer.png" /><media:content medium="image" url="https://blog.toshimaru.net/images/posts/packer/packer.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>