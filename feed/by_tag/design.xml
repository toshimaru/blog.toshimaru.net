<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://blog.toshimaru.net/feed/by_tag/design.xml" rel="self" type="application/atom+xml" /><link href="https://blog.toshimaru.net/" rel="alternate" type="text/html" /><updated>2024-01-01T10:18:53+09:00</updated><id>https://blog.toshimaru.net/feed/by_tag/design.xml</id><title type="html">Hack Your Design!</title><subtitle>toshimaruの技術系なブログ</subtitle><author><name>Toshimaru</name></author><entry><title type="html">【翻訳】クソ酷いウェブサイト</title><link href="https://blog.toshimaru.net/motherfucking-website/" rel="alternate" type="text/html" title="【翻訳】クソ酷いウェブサイト" /><published>2013-11-24T00:00:00+09:00</published><updated>2013-11-24T00:00:00+09:00</updated><id>https://blog.toshimaru.net/motherfucking-website</id><content type="html" xml:base="https://blog.toshimaru.net/motherfucking-website/"><![CDATA[<p>最近のエントリでクソクソ言ってたらHackers Newsから<a href="http://motherfuckingwebsite.com/">Motherfucking Website</a>というクソ記事が流れてきたので翻訳してみた。</p>

<p>:link:<a href="http://toshimaru.net/motherfuckingwebsite/">クソ酷いウェブサイト</a></p>

<h2 id="あわせて読みたい">あわせて読みたい</h2>

<p><a href="http://justinjackson.ca/words_japan.html">これはウェブページです｡</a></p>

<h2 id="翻訳後記">翻訳後記</h2>

<p>余談になるが、今回の記事は mother fucker, fucking, son-of-bitch などかなりのswear wordsを含むのでその勢いを消さずに翻訳することに努めた。日本語だとあんまりこのような罵倒語にはバリエーションがないのでなかなか難しかったが、原文の勢いはそれなりに保てたように思う。</p>]]></content><author><name>Toshimaru</name></author><category term="design" /><category term="翻訳" /><summary type="html"><![CDATA[最近のエントリでクソクソ言ってたらHackers NewsからMotherfucking Websiteというクソ記事が流れてきたので翻訳してみた。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/fuck-website.png" /><media:content medium="image" url="https://blog.toshimaru.net/images/posts/fuck-website.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">「UIの進化を止めるうんこユーザーに我々はどう立ち向かうべきか」後記</title><link href="https://blog.toshimaru.net/cool-ui-after/" rel="alternate" type="text/html" title="「UIの進化を止めるうんこユーザーに我々はどう立ち向かうべきか」後記" /><published>2013-11-22T00:00:00+09:00</published><updated>2013-11-22T00:00:00+09:00</updated><id>https://blog.toshimaru.net/cool-ui-after</id><content type="html" xml:base="https://blog.toshimaru.net/cool-ui-after/"><![CDATA[<p><a href="/cool-ui/">UIの進化を止めるうんこユーザーに我々はどう立ち向かうべきか</a>が予想以上にたくさんの人に読んでもらった。もともと件の記事の対象読者は開発者・デザイナーなどの「中の人」を想定しており、エントリタイトルの「我々」というのももちろん、僕のようなWEB開発者を含む「中の人」のことを指してる。それが一般ユーザー（件のエントリで言うところの「クソユーザー」を含む）まで広がり読んでいただいたようで、大変ありがたい。感謝！</p>

<p>お陰で記事に関して読んだ人から様々な反応をいただくことができた。せっかくなので後記として残しておく。（文章は砕け気味な）</p>

<h2 id="誰のためのuiか">誰のためのUIか？</h2>

<p>答えはもちろんユーザー。「クソユーザー」とか言ってゴメン。あれは意図的に悪意を持たせたんだ。だからタイトルは「クソ」ユーザーじゃなくてあえて「うんこ」ユーザーと表現を緩めてみたんだ。緩めたといってもケツを緩めたとかそういうわ(以下略</p>

<p>では次に誰のための「UIの進化」か？　もちろんユーザー。破壊的な変更であれ少しの変更であれ、最終帰着点に「より良いユーザー体験（UX）を提供する」ことがなきゃダメだと思う。</p>

<p>そうでなければその変更は運営の「エゴ」であり、（また汚い言葉で気が引けるが）「オナニー」だ。アートであればオナニー上等、それで良い。しかしニコ動の場合そうはいかない。BtoCビジネスで、ユーザーのお金でサービスが成り立っている以上、最後に見るべき・聞くべきはユーザーの声だ。（そしてユーザーが離れてしまった場合、結局困るのはドワンゴだしね）</p>

<p>あの記事では開発者やデザイナーの「オナニー」を推奨する意図はないことをここで強調しておく。</p>

<h2 id="ニコニコ動画に対する僕の態度">ニコニコ動画に対する僕の態度</h2>

<p>「ユーザーDisに見せかけたニコニコDis」とか言われたんだけど、あの記事での僕のスタンスとしてはニコニコ動画は「応援している」である。</p>

<p>よく読めばわかると思うが、あの記事ではニコ動のDisもしてるし同時に支持もしている。現状のUIを「ファット」と表現し変更する必要があることを示した反面、「ニコ動は「本当にクール」なUIを今後も自信を持って提供していくべき」と結んで変更を促している。</p>

<p>僕はどちらかというと変更に許容的なアーリーアダプターの部類で、新しいものは良くなるのであればどんどん入れて欲しい、というタイプだ。だからニコ動の現状のUIを「クソ」だと思ってるからこそ（実際はそこまでヒドイとは思ってないが）、良いUI変更は期待しているしどんどん行っていって欲しい。（僕はニコ動はβ時代からの会員だし、今でも頻繁に見ているよ！）</p>

<h2 id="まさらっきさんについて">まさらっきさんについて</h2>

<p>同じエンジニアとして発言をパプリックに表明したい気持ちもわかるし、「最高にクール」なUIを拒否されたことに対して激おこになる気持ちもわかる。けど「殺す」とかは表現として適切ではないと思う。自分も実経験として不用意なネットの発言で会社に迷惑かけたという苦い思ひ出がある。所属会社を公開しているのであればなおさら発言には自覚的になるべきでは。</p>

<p>という大体皆さんと一緒な一般論。</p>

<h2 id="今回のニコニコ静画の変更について">今回のニコニコ静画の変更について</h2>

<p>「ニコニコ動画のUIの話してるけど今回は静画のUIの話だよ？」ということについて。</p>

<p>僕はニコニコ静画は全然使わないので、今回の運営が行った変更については全く知らない。僕が知っているのは<a href="http://togetter.com/li/590729">@masarakkiさんのTwitter上でのやり取り</a>だけで、実際にニコニコ運営陣がニコニコ静画の何をどう変更したかまでは知らない。知っているのは「ユーザーの不満の声によってどうやらUIをロールバックさせたらしい」ということのみ。よって静画のUI変更については僕は何も言えないし、何も言う権利はない。</p>

<h2 id="結局お前の言うクールなuiってなんなのよ">結局お前の言う「クール」なUIってなんなのよ？</h2>

<p>僕はUIの専門家でもなければデザイナーでもないので、この「クール」なUIは何か、ということは明言は避けた。そして予想通りそこをツッコまれた。</p>

<p>この辺の話は僕が書くべきではないと思うし、書いても素人目線の「クソ」つまらないエントリになることは見え見えだった。だから書かなかった。でもせっかくなのでこれを機に「僕が思うクールな最強(笑)のUI」を別エントリとしてまとめてみようかと考えている。まだ自分の中でうまく言語化できない部分が多いのでいつになるかはわからない。なのでこれ以上はここでは言えない。</p>

<p>あと逆に聞きたいのだけど、UI/UXの専門家さんが思う「クール」なUIってなんなんだろう？　「クール」っていう言葉が気に入らないなら単純に「良い」と思うUIでいい。そのへんをどう定義するか、そもそも定義可能なのか？　すごく興味があるし知りたい。</p>

<h2 id="windows-ui">Windows UI</h2>

<p>「クソUIってWindowsのUIのこと？」ってコメントをいくつか見た。</p>

<p>Windows 8のMetroUI化とMS Officeのリボン化の２つは格好のUI「劇的変化」の例だったんだけど、記事をあれ以上冗長にしたくなかったからそのへんの話は省いた。個人的にはMetroUIはアリ、リボンはナシって感じ。それ以上は言及しない。</p>

<h2 id="日本語はクールじゃない">日本語はクールじゃない？</h2>

<p>「ジャパニーズ・デザイン」として日本語にも言及した。「日本語クールじゃないと思ってんの？」って思われたようだが、そんなことはない。日本語は＜言語＞として表現に富む美しい言語だと思うし、＜文字＞としても書道という素晴らしい芸術があるように美しい文字表現が可能だ。</p>

<p>ただWEBデザインに限定してみるとどうだろう？　英語圏のようにWEBフォントの採用は日本語ではなかなかしにくい。今流行りのフラットデザインと日本語を合わせたときもややボテッとした印象になってしまいクールじゃない。さっき美しいと言った書道のような文字も画像じゃないと十分に表現することは難しいだろう。</p>

<p>このようにWEBでの利用シーンを考えると表現の幅が「クール」じゃない方向に限られるかなとは思ってる。</p>

<h2 id="終わりに">終わりに</h2>

<p>余談になるが本ブログタイトルの「Hack Your Design!」というタイトルは、今ある既成のデザイン、もっといえば僕たちがもっている既成の価値観・パラダイムを組み替えて（ハックして）いこーぜ！という想いの元付けたタイトルである。エクスクラメーションマーク（！）は「破壊的変更」の意味だ（Ruby書く人ならわかるよね？）。</p>

<p>あの記事を書いた後、開発者、デザイナー、UX専門家、ニコ動を使うユーザー、ニコ動を使わないユーザー、いろいろな人から反応をもらえた。これをきっかけに皆の持ってるUIの価値観を少しでも「Hack」することができたのならば、それは幸いだ。</p>

<h3 id="更新情報">更新情報</h3>

<ul>
  <li>「まさらっきさんについて」「日本語はクールじゃない？」を追加（2013/11/23 14:15）</li>
</ul>]]></content><author><name>Toshimaru</name></author><category term="design" /><category term="雑記" /><summary type="html"><![CDATA[UIの進化を止めるうんこユーザーに我々はどう立ち向かうべきかが様々な人に読んでいただいた。もともと件の記事の対象読者は開発者・デザイナーなどの「中の人」を想定しており、エントリタイトルの「我々」というのももちろん、僕のようなWEB開発者を含む「中の人」のことを指してる。それが一般ユーザー（件のエントリで言うところの「クソユーザー」を含む）まで広がり読んでいただいたようで、大変ありがたい。感謝！]]></summary></entry><entry><title type="html">UIの進化を止めるうんこユーザーに我々はどう立ち向かうべきか</title><link href="https://blog.toshimaru.net/cool-ui/" rel="alternate" type="text/html" title="UIの進化を止めるうんこユーザーに我々はどう立ち向かうべきか" /><published>2013-11-20T00:00:00+09:00</published><updated>2013-11-20T00:00:00+09:00</updated><id>https://blog.toshimaru.net/cool-ui</id><content type="html" xml:base="https://blog.toshimaru.net/cool-ui/"><![CDATA[<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/Chart.js/0.2.0/Chart.min.js"></script>

<p><a href="http://togetter.com/li/590729">「基本的に運営側がすることが正しいんですよ Webの世界ってそういう論理で動いてるんですよ」理論</a></p>

<p>実はここで言われている<a href="https://twitter.com/masarakki">@masarakki</a>さんの意見はすごくわかる。「最高にクール」なUIがクソユーザー（便宜上、UIの良さがわからないユーザーを本エントリではそう呼ぶ）によって阻止されるのは中の人としては決して喜ばしいことではない。</p>

<h2 id="ユーザーは最高にクールなuiがわかるか">ユーザーは「最高にクールなUI」がわかるか？</h2>

<p>まずこの問いから始めたい。一般ユーザーは「最高にクール」なUIがわかるか？</p>

<p>答えはNOだ。彼らは「使いやすい」UIはわかっても「クール」なUIはわからない。そして「使いやすい」というのは結局各人の主観に依るものなので、この「使いやすい」UIというのは参考にはできても信用はできないものである。</p>

<p>この話を読んで真っ先に思い出した１つの話がある。</p>

<blockquote class="twitter-tweet"><p>フラットデザインや新機種が評判どうか、というのはAppleにとっては意味が無い。Appleは消費者や開発者の意見を聞かない。なぜなら消費者というのは自分たちが何を欲しがっているのか理解していないため、聞いても意味が無いから（だからAppleではユーザビリティテストをしない）。</p>&mdash; Hak Matsuda (@hak) <a href="https://twitter.com/hak/statuses/383983878186094592">September 28, 2013</a></blockquote>
<script async="" src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>iOS7が紹介されてすぐはiPhone開発者・デザイナーから不満の声をよく聞いた。しかしiOS7がリリースされ実際にアップデートしたユーザーの話を聞いてみると、思ったよりも不満の声は聞かない。むしろ「使い始めてみるとiOS6のデザインが古臭く見える」くらいらしいのだ<sup id="fnref:ios7" role="doc-noteref"><a href="#fn:ios7" class="footnote" rel="footnote">1</a></sup>。結局、iOS7の不満の声はユーザーのiOS7への「慣れ」によって解決されてしまう問題だったのだ。</p>

<p>同時に上の話は当然のようにも思う。なぜならAppleはiPhoneで「未来」のUIを提供しているからだ。そのUIは未だユーザー達が体験したことのないUIであり、ユーザーの想像力の及ばないUIだ。Appleにとってユーザーは「何を欲しがっているのか理解していない」クソなのである。なのでAppleがユーザーの声を聞く意味は無い。</p>

<p>そういう意味において「基本的に運営側がすることが正しいんですよ」理論はあながち間違っていない。</p>

<h2 id="uiを破壊していくという行為">「UIを破壊していく」という行為</h2>

<p>ユーザーの声を第一価値基準に置いてしまうとUIの破壊的変更は行えない。なぜなら旧UIと新UIの２つがあったときにクソユーザーが肯定するのは当然「慣れ」ている旧UIだからだ。この事例の典型的な例が<a href="http://www.itmedia.co.jp/news/articles/1304/02/news033.html">CookpadのiPhone UIリニューアル</a>である。</p>

<p>「開発チームにはユーザーエクスペリエンス（UX）の専門家を入れ、ユーザーインタビューを重ねるなど、ユーザー目線に立った設計を重視。」とあるのでUX的観点でアプリは確実に良くなっているはずである。ただクックパッドチームにとって想定外だったのは「慣れ」を第一価値基準に置くクックパッドユーザー、クソBBAたちの存在である。結果的に彼女らからとんでもないレビュー１スター攻撃をくらってしまった。</p>

<p>しかしこのようなクソユーザーの声ばかりに耳を傾けていてはいけない。さもなければUIの進化は止まる。UIの進化のためにはあるタイミングにおけるUIの破壊行為が不可欠だ。UI破壊のアプローチとして以下の２つが取りうる。</p>

<ol>
  <li>漸進的変化: 徐々にUIに変化を加えていくアプローチ</li>
  <li>劇的変化: UIをフルスクラッチで再構築するアプローチ</li>
</ol>

<h3 id="漸進的変化">漸進的変化</h3>

<p>前者の場合のメリットとしてはユーザーの不満の声を極力少なくすることができる。ユーザーに気づかせない、あるいは「あれ、いつの間にかここ変わってる？」と思われるくらいの変更に留めておく。この変更の例としてはGoogleの検索結果画面が挙げられる。</p>

<p>Googleの検索結果は微細なデザインが変わっているとはいえ、本質的なデザインは何一つ変わっていない。ここに2001年のGoogleの検索結果画面がある。</p>

<p><img src="/images/posts/ui/google.png" alt="google" /></p>

<p>Googleのロゴが左上にあって、その右に検索フォームと検索ボタンがあり、その下に検索結果がある。本質的なUIとしては何も変わっていないのがわかるはずだ。</p>

<p>この変化の仕方のデメリットとしては大々的なUI破壊ができないということだ。具体的には現在のUIをフルフラットUIで作りなおそう、といったことはできない。</p>

<h3 id="劇的変化">劇的変化</h3>

<p>後者はAppleがiOS6をiOS7にアップデートしたときのような劇的な変化、Apple的アプローチだ。メリットとしてはUIをコンセプトレベルで作り変えることができる。フルフラットUIに変更しようとか、3カラムだったデザインを1カラムのレスポンシブデザインに作り変えようとか。</p>

<p>デメリットとしては上記に書いたように旧UIに「慣れ」たユーザーからの不満の声が上がることだ。新UIに全く満足できないユーザーが出てきた場合の最悪のシナリオとして、既存ユーザーのサービス離れも起こりえる。</p>

<p>逆に言うとサービス提供者としてはその最悪のシナリオも想定しておく必要があるだろう。UIをロールバックさせるのか、クソユーザーの不満の声を聞きつつ新UIをアップデートしていくのか、不満の声を無視してサービスの提供を続けていくのか。</p>

<h2 id="何がクールなuiなのか">何が「クール」なUIなのか</h2>

<p>ところで「クール」なUIというのはどういったUIなんだろうか。たとえ運営が「最高にクール」なUIだと信じこんでいたとしても本質的に「クール」でなければユーザーは離れていくだけだろう。クールなUI、私は「慣れとともにUX満足度が向上する」UIだと思っている<sup id="fnref:ui" role="doc-noteref"><a href="#fn:ui" class="footnote" rel="footnote">2</a></sup>。グラフに表すとこのようになる。</p>

<canvas id="myChart1" width="300" height="200"></canvas>

<script type="text/javascript">
(function(){
var ctx = document.getElementById("myChart1").getContext("2d");
var data = {
  labels : ["時間の経過", ""],
  datasets : [
    {
      fillColor : "rgba(106,178,202,0.5)",
      strokeColor : "rgba(150,150,150,1)",
      pointColor : "rgba(150,150,150,1)",
      pointStrokeColor : "#fff",
      data : [20,100]
    }
  ]
};
var options = {
  scaleOverride : true,
  scaleSteps : 10,
  scaleStepWidth : 10,
  scaleStartValue : 0
};
new Chart(ctx).Line(data,options);
})();
</script>

<p>横軸は時間の経過、縦軸はUXの満足度を表している。時間の経過とともにUIに「慣れ」ることで、UXも向上していく。良いUIを提供できればこのような満足度の曲線を描くことだろう。</p>

<p>一方悪いUIを提供した場合の曲線はどうなるか。</p>

<canvas id="myChart2" width="300" height="200"></canvas>

<script type="text/javascript">
(function(){
var ctx = document.getElementById("myChart2").getContext("2d");
var data = {
  labels : ["時間の経過", ""],
  datasets : [
    {
      fillColor : "rgba(106,178,202,0.5)",
      strokeColor : "rgba(150,150,150,1)",
      pointColor : "rgba(150,150,150,1)",
      pointStrokeColor : "#fff",
      data : [20,40]
    }
  ]
};
var options = {
  scaleOverride : true,
  scaleSteps : 10,
  scaleStepWidth : 10,
  scaleStartValue : 0
};
new Chart(ctx).Line(data,options);
})();
</script>

<p>たとえ時間の経過とともにユーザーがUIに「慣れ」たとしてもUXはほとんど向上しない。このダメなUIの例としては楽天の各種サービスが挙げられる。楽天のUIのクソさは単純に慣れとかそれ以前の問題だ。いくら使い込もうともUXは上がらない。せいぜい操作を繰り返す内にナビゲーション・リンクの位置を覚えて操作が前より早くなる程度だ。</p>

<p>破壊的なUI変更を行う場合、サービス運営者は基本的に上曲線のようなユーザーの「慣れ」とともにUXが向上するようなUIを目指すべきである<sup id="fnref:nice-ui" role="doc-noteref"><a href="#fn:nice-ui" class="footnote" rel="footnote">3</a></sup>。</p>

<h2 id="ジャパニーズデザインの限界">「ジャパニーズ・デザイン」の限界</h2>

<p>日本のサービスではヒットしていても欧米と比較してUIがイケていないケースをよく見る。これは日本のデザイン業界が抱える根源的な問題を浮き上がらせている。</p>

<ul>
  <li><a href="http://thebridge.jp/2013/11/why-japanese-web-design-is-so-different">日本のウェブデザインはなぜこんなにも世界と違うのか？</a> (<a href="http://randomwire.com/why-japanese-web-design-is-so-different/">原文</a>)</li>
</ul>

<p>上記事では文化的、歴史的観点から日本のデザインがダサくならざるを得ない状況を述べている。日本人は絵だけでは満足できず文字が必要なこと。日本語という言語特性によりタイポグラフィの表現が乏しいこと（WEBフォントが扱えない）。日本語という文字自体がクールじゃないこと。などなど。</p>

<p><img src="/images/posts/ui/japanese.png" alt="japanese is uncool" /></p>

<p>（via. <a href="http://www.slideshare.net/yuudaitachibana/creators-meetup-8">流行に乗っていいの？フラットデザインの落とし穴</a>）</p>

<p>このような記事を読むと日本という国の文化・社会そのものがUIをクールじゃない方向へと規定しているのではないかとも思う。</p>

<h2 id="ニコ動はどうすべきか">ニコ動はどうすべきか？</h2>

<p>話が飛んだが本来のニコ動の話に戻ってニコ動はどうすべきなのかを私なりに考えてみる。私ならまずはファットなUIをスリムにするところから考え始めるだろう。つまり何の要素を加えるか、または何を変更するかといった足し算ではなく、何の要素を削るかの引き算の発想で始めるのである。</p>

<p>ニコニコ動画に限っていうと、ニコニコ動画のコアな機能は「動画＆コメントを観る」ことと「動画にコメントをする」ことの２つだけだと私は考える。それ以外の機能に関するUIは削るor目立たなくさせて良いだろう。お手本としてはFuluやNetflixが良いだろう。基本は動画視聴サービス。動画を視聴させることに徹底的にUIをフォーカスさせる。ニコニコ動画は動画視聴＋コメント閲覧にフォーカスしたUI作りを考えてスリム化していけばよい。</p>

<p>と、ここまで来た時点でユーザーの不満が噴出することは見え見えである。というのもニコニコ動画というサービス自体がファットな機能に支えられており、ユーザーのニコニコ動画の使い方・楽しみ方も多種多様化してしまっているからだ。コア機能以外を引き算した時点で、その機能を愛用していたユーザーは激おこぷんぷん丸である。</p>

<p>ここでUI変更のディレンマが発生する。「ファットなUIをスリムにしたい」という気持ちと「できるだけ多くのユーザーの声に応えたい」気持ちの間で揺れてしまう。ただ上述したようにクソユーザーにはクールなUIはわからないのだ。そしてもう１つ重要なこととして、<a href="http://fladdict.net/blog/2013/08/client-user-request.html">顧客やユーザーの要望に全て対応すると、アプリは99%破綻する</a>ことも忘れてはならない。</p>

<p>つまり何を言いたいかというと、結局ニコ動はどんなUI変更やっても不満は少なからず絶対来るのだからそんなのいちいち気にするな、ということである。本当に「最高にクール」なUIであれば、慣れとともにユーザー・エクスペリエンスは向上するんだよ。お前らが考えた「最高にクール」なUIだろうが。というかユーザーの声くらいでロールバックしてしまうような変更なら最初からするな、ということである。</p>

<h2 id="まとめ">まとめ</h2>

<p>かなり内容が発散してしまったが、無理やりまとめるとこんな感じだ。</p>

<ul>
  <li>UIに対するユーザーの声は「参考」であって「正解」ではない</li>
  <li>UIの進化のためにはユーザーの声を顧みない破壊的変更が必要である</li>
  <li>「本当にクール」なUIならばUXは「慣れ」とともに向上するはずである</li>
  <li>ニコ動は「本当にクール」なUIを今後も自信を持って提供していくべき</li>
</ul>

<h2 id="追記">追記</h2>

<ul>
  <li>この記事の反応を受けて<a href="/cool-ui-after/">後記</a>を書きました。（2013/11/22　18:05）</li>
</ul>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:ios7" role="doc-endnote">
      <p><a href="http://rebuild.fm/21/">Rebuild: 21: On the Launch of iPhone 5s and iOS 7 (Naoya Ito.)</a>　私はちなみに現時点でiOS6を使用。あと私はAppleは好きですがApple信者ではありません。 <a href="#fnref:ios7" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:ui" role="doc-endnote">
      <p>UIとUXははっきり区別すべきものである。詳しくはこちらを参照されたし。<a href="http://blog.btrax.com/jp/2012/09/10/what_is_ux/">「ユーザーエクスペリエンスとは何か？」【インタビュー】ホワイトハウスも注目のUXデザイナーJanice Fraser氏（前編）</a> <a href="#fnref:ui" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:nice-ui" role="doc-endnote">
      <p>では何が「慣れとともにUX満足度が向上する」UIなのかという話になるが、私はUI/UXの専門家ではないのでそこは専門家に譲るとする。 <a href="#fnref:nice-ui" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Toshimaru</name></author><category term="design" /><summary type="html"><![CDATA[「基本的に運営側がすることが正しいんですよ Webの世界ってそういう論理で動いてるんですよ」理論実はここで言われている@masarakkiさんの意見はすごくわかる。「最高にクール」なUIがクソユーザー（便宜上、UIの良さがわからないユーザーを本エントリではそう呼ぶ）によって阻止されるのは中の人としては決して喜ばしいことではない。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/ui/ios.png" /><media:content medium="image" url="https://blog.toshimaru.net/images/posts/ui/ios.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">レスポンシブサイト構築にあたり参考にしたレスポンシブデザイン１０選</title><link href="https://blog.toshimaru.net/responsive-designs/" rel="alternate" type="text/html" title="レスポンシブサイト構築にあたり参考にしたレスポンシブデザイン１０選" /><published>2013-04-08T00:00:00+09:00</published><updated>2013-04-08T00:00:00+09:00</updated><id>https://blog.toshimaru.net/responsive-designs</id><content type="html" xml:base="https://blog.toshimaru.net/responsive-designs/"><![CDATA[<p><a href="http://blog.toshimaru.net/posterous-to-jekyll/">ブログを移行</a>するにあたって、デザインをフルスクラッチで組み直しました。以前はブログシステム側でモバイル版、PC版の出し分けを行なっておりましたが、今回は流行りの<a href="http://blog.toshimaru.net/responsive-web-design/">レスポンシブWebデザイン</a>で構築してみました。</p>

<p>デザインをレスポンシブにするために私が参考にしたサイト群をピックアップしたいと思います。</p>

<h2 id="1-twitter-bootstrap">1 Twitter Bootstrap</h2>
<p><a href="http://twitter.github.io/bootstrap/"><img src="/images/posts/responsive-designs/1.png" alt="Twitter Bootstrap" /></a></p>

<p>言わずと知れたtwitter bootstrap. 本サイトはbootstrapを使わずに構築していますが、レイアウトの組み方、CSSのコーディング手法などはこちらが大変参考になりました。</p>

<h2 id="2-rockaway-relief">2 Rockaway Relief</h2>
<p><a href="http://rockawayrelief.com/"><img src="/images/posts/responsive-designs/2.png" alt="Rockaway" /></a></p>

<p>ブルーが良い感じに映えるデザインです。</p>

<h2 id="3-creasty">3 Creasty</h2>
<p><a href="http://www.creasty.com/"><img src="/images/posts/responsive-designs/3.png" alt="Creasty" /></a></p>

<p>若手デザイナ/デベロッパのクリスティさんのWEBサイト。モバイル時のメニューの表示のさせ方がかっこいい。</p>

<h2 id="4-anthony-calzadilla">4 ANTHONY CALZADILLA</h2>
<p><a href="http://www.anthonycalzadilla.com/"><img src="/images/posts/responsive-designs/4.png" alt="CALZADILLA" /></a></p>

<p>シンプル&amp;クール。</p>

<h2 id="5-manos">5 Manos</h2>
<p><a href="http://manoscrafted.com/"><img src="/images/posts/responsive-designs/5.png" alt="Manos" /></a></p>

<p>スクロール途中でFIXされるナビゲーションが印象的（PC閲覧時）。</p>

<h2 id="6-gin-lane-media">6 Gin Lane Media</h2>
<p><a href="http://www.ginlanemedia.com/"><img src="/images/posts/responsive-designs/6.png" alt="Gin Lane Media" /></a></p>

<p>上同様、途中でFIXされるナビゲーション。</p>

<h2 id="7-fear-the-grizzly">7 Fear the Grizzly</h2>
<p><a href="http://www.fearthegrizzly.com/"><img src="/images/posts/responsive-designs/7.png" alt="Grizzly" /></a></p>

<p>白を基調とした美麗デザイン。</p>

<h2 id="8-buffalo">8 Buffalo</h2>
<p><a href="http://builtbybuffalo.com/"><img src="/images/posts/responsive-designs/8.png" alt="Buffalo" /></a></p>

<p>PC時とモバイル時のレイアウトの変化のさせ方がイケてます。</p>

<h2 id="9-squarespace">9 Squarespace</h2>
<p><a href="http://www.squarespace.com/"><img src="/images/posts/responsive-designs/9.png" alt="Squarespace" /></a></p>

<p>用意されているサイトのテンプレートもすごくかっこいいSquarespaceさん。そちらも覗いてみてください。</p>

<h2 id="10-muriel-labro">10 Muriel Labro</h2>
<p><a href="http://www.muriel-labro.fr/"><img src="/images/posts/responsive-designs/10.png" alt="Muriel Labro" /></a></p>

<p>パリの美容室のページ。かっこいい美容師さんの紹介です。</p>

<h2 id="参考">参考</h2>
<ul>
  <li><a href="http://responsive-jp.com/">Responsive Web Design JP 日本国内の秀逸なレスポンシブWebデザインを集めたギャラリーサイト</a></li>
</ul>]]></content><author><name>Toshimaru</name></author><category term="design" /><summary type="html"><![CDATA[ブログを移行するにあたって、デザインをフルスクラッチで組み直しました。以前はブログシステム側でモバイル版、PC版の出し分けを行なっておりましたが、今回は流行りのレスポンシブWebデザインで構築してみました。 デザインをレスポンシブにするために私が参考にしたサイト群をピックアップしたいと思います。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/responsive-designs/10.png" /><media:content medium="image" url="https://blog.toshimaru.net/images/posts/responsive-designs/10.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Responsive Web Design 時代の画像スライダー</title><link href="https://blog.toshimaru.net/responsive-web-design/" rel="alternate" type="text/html" title="Responsive Web Design 時代の画像スライダー" /><published>2012-10-11T00:00:00+09:00</published><updated>2012-10-11T00:00:00+09:00</updated><id>https://blog.toshimaru.net/responsive-web-design</id><content type="html" xml:base="https://blog.toshimaru.net/responsive-web-design/"><![CDATA[<p>え？　"れすぽんしぶうぇぶでざいん"って何かって？</p>
<p>なかなか日本では聞きなれないような気がしなくもないですがこんな意味です。</p>
<blockquote>
<p>Responsive web design (often abbreviated to RWD) is an approach to web design in which a site is crafted to provide an optimal viewing experience&mdash;easy reading and navigation with a minimum of resizing, panning, and scrolling&mdash;across a wide range of devices (from desktop computer monitors to mobile phones).</p>
<p><a href="http://en.wikipedia.org/wiki/Responsive_web_design">Responsive web design (wikipedia)</a></p>
</blockquote>
<p>つまり、レスポンシブWEBデザインとは、デバイスの幅に応じてWebの見た目（レイアウトとかサイズとか）が最適化されるWebデザインの手法のことです。タブレット、スマホの台頭によってますます重要視されている手法ですね。</p>
<p>さて、本題。本日は画像スライダーのお話。</p>
<p>先日画像スライダーを実装する機会があったので「js slider」なんかでググって一番最初に出てくる<a href="http://www.slidesjs.com/">slidesjs</a>で画像スライダーを実装するわけです。でもスマホやタブレット見て分かる通り、全然それらのデバイスに最適化されてませんね。</p>
<p><img src="/images/2012/10/slider2.png"></p>
<p><a href="http://toshimaru.net/demo/slidesjs/">http://toshimaru.net/demo/slidesjs/</a></p>
<p>幅がデバイスに応じて変わったりもしないので、ちゃんと最適化されるような違う画像スライダーを探してみます。</p>
<p>んでたどり着いたのが<a href="http://flexslider.woothemes.com/">FlexSlider2</a>。ちゃんとPCでもタブレットでも最適化されて表示されますね。</p>
<p><img src="/images/2012/10/slider3.png"></p>
<p><img src="/images/2012/10/slider1.png"></p>
<p>スマホ、タブレット対応が必須な今、しっかりレスポンシブデザインを心がけてWEB制作をしていきたいところです。</p>
<h3>参考</h3>
<ul>
<li><a href="http://ascii.jp/elem/000/000/697/697463/">レスポンシブWebデザインとは</a> </li>
</ul>]]></content><author><name>Toshimaru</name></author><category term="css" /><category term="design" /><category term="html" /><category term="javascript" /><summary type="html"><![CDATA[え？　"れすぽんしぶうぇぶでざいん"って何かって？ なかなか日本では聞きなれないような気がしなくもないですがこんな意味です。 Responsive web design (often abbreviated to RWD) is an approach to web design in which a site is crafted to provide an optimal viewing experience&mdash;easy reading and navigation with a minimum of resizing, panning, and scrolling&mdash;across a wide range of devices (from desktop computer monitors to mobile phones). Responsive web design (wikipedia) つまり、レスポンシブWEBデザインとは、デバイスの幅に応じてWebの見た目（レイアウトとかサイズとか）が最適化されるWebデザインの手法のことです。タブレット、スマホの台頭によってますます重要視されている手法ですね。 さて、本題。本日は画像スライダーのお話。 先日画像スライダーを実装する機会があったので「js slider」なんかでググって一番最初に出てくるslidesjsで画像スライダーを実装するわけです。でもスマホやタブレット見て分かる通り、全然それらのデバイスに最適化されてませんね。 http://toshimaru.net/demo/slidesjs/ 幅がデバイスに応じて変わったりもしないので、ちゃんと最適化されるような違う画像スライダーを探してみます。 んでたどり着いたのがFlexSlider2。ちゃんとPCでもタブレットでも最適化されて表示されますね。 スマホ、タブレット対応が必須な今、しっかりレスポンシブデザインを心がけてWEB制作をしていきたいところです。 参考 レスポンシブWebデザインとは]]></summary></entry></feed>