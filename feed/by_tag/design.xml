<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://blog.toshimaru.net/feed/by_tag/design.xml" rel="self" type="application/atom+xml" /><link href="https://blog.toshimaru.net/" rel="alternate" type="text/html" /><updated>2021-04-19T21:44:28+09:00</updated><id>https://blog.toshimaru.net/feed/by_tag/design.xml</id><title type="html">Hack Your Design!</title><subtitle>toshimaruの技術系なブログ</subtitle><author><name>Toshimaru</name></author><entry><title type="html">【翻訳】クソ酷いウェブサイト</title><link href="https://blog.toshimaru.net/motherfucking-website/" rel="alternate" type="text/html" title="【翻訳】クソ酷いウェブサイト" /><published>2013-11-24T00:00:00+09:00</published><updated>2013-11-24T00:00:00+09:00</updated><id>https://blog.toshimaru.net/motherfucking-website</id><content type="html" xml:base="https://blog.toshimaru.net/motherfucking-website/">&lt;p&gt;最近のエントリでクソクソ言ってたらHackers Newsから&lt;a href=&quot;http://motherfuckingwebsite.com/&quot;&gt;Motherfucking Website&lt;/a&gt;というクソ記事が流れてきたので翻訳してみた。&lt;/p&gt;

&lt;p&gt;:link:&lt;a href=&quot;http://toshimaru.net/motherfuckingwebsite/&quot;&gt;クソ酷いウェブサイト&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;あわせて読みたい&quot;&gt;あわせて読みたい&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://justinjackson.ca/words_japan.html&quot;&gt;これはウェブページです｡&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;翻訳後記&quot;&gt;翻訳後記&lt;/h2&gt;

&lt;p&gt;余談になるが、今回の記事は mother fucker, fucking, son-of-bitch などかなりのswear wordsを含むのでその勢いを消さずに翻訳することに努めた。日本語だとあんまりこのような罵倒語にはバリエーションがないのでなかなか難しかったが、原文の勢いはそれなりに保てたように思う。&lt;/p&gt;</content><author><name>Toshimaru</name></author><category term="design" /><category term="翻訳" /><summary type="html">最近のエントリでクソクソ言ってたらHackers NewsからMotherfucking Websiteというクソ記事が流れてきたので翻訳してみた。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/fuck-website.png" /><media:content medium="image" url="https://blog.toshimaru.net/images/posts/fuck-website.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">「UIの進化を止めるうんこユーザーに我々はどう立ち向かうべきか」後記</title><link href="https://blog.toshimaru.net/cool-ui-after/" rel="alternate" type="text/html" title="「UIの進化を止めるうんこユーザーに我々はどう立ち向かうべきか」後記" /><published>2013-11-22T00:00:00+09:00</published><updated>2013-11-22T00:00:00+09:00</updated><id>https://blog.toshimaru.net/cool-ui-after</id><content type="html" xml:base="https://blog.toshimaru.net/cool-ui-after/">&lt;p&gt;&lt;a href=&quot;/cool-ui/&quot;&gt;UIの進化を止めるうんこユーザーに我々はどう立ち向かうべきか&lt;/a&gt;が予想以上にたくさんの人に読んでもらった。もともと件の記事の対象読者は開発者・デザイナーなどの「中の人」を想定しており、エントリタイトルの「我々」というのももちろん、僕のようなWEB開発者を含む「中の人」のことを指してる。それが一般ユーザー（件のエントリで言うところの「クソユーザー」を含む）まで広がり読んでいただいたようで、大変ありがたい。感謝！&lt;/p&gt;

&lt;p&gt;お陰で記事に関して読んだ人から様々な反応をいただくことができた。せっかくなので後記として残しておく。（文章は砕け気味な）&lt;/p&gt;

&lt;h2 id=&quot;誰のためのuiか&quot;&gt;誰のためのUIか？&lt;/h2&gt;

&lt;p&gt;答えはもちろんユーザー。「クソユーザー」とか言ってゴメン。あれは意図的に悪意を持たせたんだ。だからタイトルは「クソ」ユーザーじゃなくてあえて「うんこ」ユーザーと表現を緩めてみたんだ。緩めたといってもケツを緩めたとかそういうわ(以下略&lt;/p&gt;

&lt;p&gt;では次に誰のための「UIの進化」か？　もちろんユーザー。破壊的な変更であれ少しの変更であれ、最終帰着点に「より良いユーザー体験（UX）を提供する」ことがなきゃダメだと思う。&lt;/p&gt;

&lt;p&gt;そうでなければその変更は運営の「エゴ」であり、（また汚い言葉で気が引けるが）「オナニー」だ。アートであればオナニー上等、それで良い。しかしニコ動の場合そうはいかない。BtoCビジネスで、ユーザーのお金でサービスが成り立っている以上、最後に見るべき・聞くべきはユーザーの声だ。（そしてユーザーが離れてしまった場合、結局困るのはドワンゴだしね）&lt;/p&gt;

&lt;p&gt;あの記事では開発者やデザイナーの「オナニー」を推奨する意図はないことをここで強調しておく。&lt;/p&gt;

&lt;h2 id=&quot;ニコニコ動画に対する僕の態度&quot;&gt;ニコニコ動画に対する僕の態度&lt;/h2&gt;

&lt;p&gt;「ユーザーDisに見せかけたニコニコDis」とか言われたんだけど、あの記事での僕のスタンスとしてはニコニコ動画は「応援している」である。&lt;/p&gt;

&lt;p&gt;よく読めばわかると思うが、あの記事ではニコ動のDisもしてるし同時に支持もしている。現状のUIを「ファット」と表現し変更する必要があることを示した反面、「ニコ動は「本当にクール」なUIを今後も自信を持って提供していくべき」と結んで変更を促している。&lt;/p&gt;

&lt;p&gt;僕はどちらかというと変更に許容的なアーリーアダプターの部類で、新しいものは良くなるのであればどんどん入れて欲しい、というタイプだ。だからニコ動の現状のUIを「クソ」だと思ってるからこそ（実際はそこまでヒドイとは思ってないが）、良いUI変更は期待しているしどんどん行っていって欲しい。（僕はニコ動はβ時代からの会員だし、今でも頻繁に見ているよ！）&lt;/p&gt;

&lt;h2 id=&quot;まさらっきさんについて&quot;&gt;まさらっきさんについて&lt;/h2&gt;

&lt;p&gt;同じエンジニアとして発言をパプリックに表明したい気持ちもわかるし、「最高にクール」なUIを拒否されたことに対して激おこになる気持ちもわかる。けど「殺す」とかは表現として適切ではないと思う。自分も実経験として不用意なネットの発言で会社に迷惑かけたという苦い思ひ出がある。所属会社を公開しているのであればなおさら発言には自覚的になるべきでは。&lt;/p&gt;

&lt;p&gt;という大体皆さんと一緒な一般論。&lt;/p&gt;

&lt;h2 id=&quot;今回のニコニコ静画の変更について&quot;&gt;今回のニコニコ静画の変更について&lt;/h2&gt;

&lt;p&gt;「ニコニコ動画のUIの話してるけど今回は静画のUIの話だよ？」ということについて。&lt;/p&gt;

&lt;p&gt;僕はニコニコ静画は全然使わないので、今回の運営が行った変更については全く知らない。僕が知っているのは&lt;a href=&quot;http://togetter.com/li/590729&quot;&gt;@masarakkiさんのTwitter上でのやり取り&lt;/a&gt;だけで、実際にニコニコ運営陣がニコニコ静画の何をどう変更したかまでは知らない。知っているのは「ユーザーの不満の声によってどうやらUIをロールバックさせたらしい」ということのみ。よって静画のUI変更については僕は何も言えないし、何も言う権利はない。&lt;/p&gt;

&lt;h2 id=&quot;結局お前の言うクールなuiってなんなのよ&quot;&gt;結局お前の言う「クール」なUIってなんなのよ？&lt;/h2&gt;

&lt;p&gt;僕はUIの専門家でもなければデザイナーでもないので、この「クール」なUIは何か、ということは明言は避けた。そして予想通りそこをツッコまれた。&lt;/p&gt;

&lt;p&gt;この辺の話は僕が書くべきではないと思うし、書いても素人目線の「クソ」つまらないエントリになることは見え見えだった。だから書かなかった。でもせっかくなのでこれを機に「僕が思うクールな最強(笑)のUI」を別エントリとしてまとめてみようかと考えている。まだ自分の中でうまく言語化できない部分が多いのでいつになるかはわからない。なのでこれ以上はここでは言えない。&lt;/p&gt;

&lt;p&gt;あと逆に聞きたいのだけど、UI/UXの専門家さんが思う「クール」なUIってなんなんだろう？　「クール」っていう言葉が気に入らないなら単純に「良い」と思うUIでいい。そのへんをどう定義するか、そもそも定義可能なのか？　すごく興味があるし知りたい。&lt;/p&gt;

&lt;h2 id=&quot;windows-ui&quot;&gt;Windows UI&lt;/h2&gt;

&lt;p&gt;「クソUIってWindowsのUIのこと？」ってコメントをいくつか見た。&lt;/p&gt;

&lt;p&gt;Windows 8のMetroUI化とMS Officeのリボン化の２つは格好のUI「劇的変化」の例だったんだけど、記事をあれ以上冗長にしたくなかったからそのへんの話は省いた。個人的にはMetroUIはアリ、リボンはナシって感じ。それ以上は言及しない。&lt;/p&gt;

&lt;h2 id=&quot;日本語はクールじゃない&quot;&gt;日本語はクールじゃない？&lt;/h2&gt;

&lt;p&gt;「ジャパニーズ・デザイン」として日本語にも言及した。「日本語クールじゃないと思ってんの？」って思われたようだが、そんなことはない。日本語は＜言語＞として表現に富む美しい言語だと思うし、＜文字＞としても書道という素晴らしい芸術があるように美しい文字表現が可能だ。&lt;/p&gt;

&lt;p&gt;ただWEBデザインに限定してみるとどうだろう？　英語圏のようにWEBフォントの採用は日本語ではなかなかしにくい。今流行りのフラットデザインと日本語を合わせたときもややボテッとした印象になってしまいクールじゃない。さっき美しいと言った書道のような文字も画像じゃないと十分に表現することは難しいだろう。&lt;/p&gt;

&lt;p&gt;このようにWEBでの利用シーンを考えると表現の幅が「クール」じゃない方向に限られるかなとは思ってる。&lt;/p&gt;

&lt;h2 id=&quot;終わりに&quot;&gt;終わりに&lt;/h2&gt;

&lt;p&gt;余談になるが本ブログタイトルの「Hack Your Design!」というタイトルは、今ある既成のデザイン、もっといえば僕たちがもっている既成の価値観・パラダイムを組み替えて（ハックして）いこーぜ！という想いの元付けたタイトルである。エクスクラメーションマーク（！）は「破壊的変更」の意味だ（Ruby書く人ならわかるよね？）。&lt;/p&gt;

&lt;p&gt;あの記事を書いた後、開発者、デザイナー、UX専門家、ニコ動を使うユーザー、ニコ動を使わないユーザー、いろいろな人から反応をもらえた。これをきっかけに皆の持ってるUIの価値観を少しでも「Hack」することができたのならば、それは幸いだ。&lt;/p&gt;

&lt;h3 id=&quot;更新情報&quot;&gt;更新情報&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;「まさらっきさんについて」「日本語はクールじゃない？」を追加（2013/11/23 14:15）&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Toshimaru</name></author><category term="design" /><category term="雑記" /><summary type="html">UIの進化を止めるうんこユーザーに我々はどう立ち向かうべきかが予想以上にたくさんの人に読んでもらった。もともと件の記事の対象読者は開発者・デザイナーなどの「中の人」を想定しており、エントリタイトルの「我々」というのももちろん、僕のようなWEB開発者を含む「中の人」のことを指してる。それが一般ユーザー（件のエントリで言うところの「クソユーザー」を含む）まで広がり読んでいただいたようで、大変ありがたい。感謝！</summary></entry><entry><title type="html">UIの進化を止めるうんこユーザーに我々はどう立ち向かうべきか</title><link href="https://blog.toshimaru.net/cool-ui/" rel="alternate" type="text/html" title="UIの進化を止めるうんこユーザーに我々はどう立ち向かうべきか" /><published>2013-11-20T00:00:00+09:00</published><updated>2013-11-20T00:00:00+09:00</updated><id>https://blog.toshimaru.net/cool-ui</id><content type="html" xml:base="https://blog.toshimaru.net/cool-ui/">&lt;script type=&quot;text/javascript&quot; src=&quot;//cdnjs.cloudflare.com/ajax/libs/Chart.js/0.2.0/Chart.min.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;a href=&quot;http://togetter.com/li/590729&quot;&gt;「基本的に運営側がすることが正しいんですよ Webの世界ってそういう論理で動いてるんですよ」理論&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;実はここで言われている&lt;a href=&quot;https://twitter.com/masarakki&quot;&gt;@masarakki&lt;/a&gt;さんの意見はすごくわかる。「最高にクール」なUIがクソユーザー（便宜上、UIの良さがわからないユーザーを本エントリではそう呼ぶ）によって阻止されるのは中の人としては決して喜ばしいことではない。&lt;/p&gt;

&lt;h2 id=&quot;ユーザーは最高にクールなuiがわかるか&quot;&gt;ユーザーは「最高にクールなUI」がわかるか？&lt;/h2&gt;

&lt;p&gt;まずこの問いから始めたい。一般ユーザーは「最高にクール」なUIがわかるか？&lt;/p&gt;

&lt;p&gt;答えはNOだ。彼らは「使いやすい」UIはわかっても「クール」なUIはわからない。そして「使いやすい」というのは結局各人の主観に依るものなので、この「使いやすい」UIというのは参考にはできても信用はできないものである。&lt;/p&gt;

&lt;p&gt;この話を読んで真っ先に思い出した１つの話がある。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p&gt;フラットデザインや新機種が評判どうか、というのはAppleにとっては意味が無い。Appleは消費者や開発者の意見を聞かない。なぜなら消費者というのは自分たちが何を欲しがっているのか理解していないため、聞いても意味が無いから（だからAppleではユーザビリティテストをしない）。&lt;/p&gt;&amp;mdash; Hak Matsuda (@hak) &lt;a href=&quot;https://twitter.com/hak/statuses/383983878186094592&quot;&gt;September 28, 2013&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;iOS7が紹介されてすぐはiPhone開発者・デザイナーから不満の声をよく聞いた。しかしiOS7がリリースされ実際にアップデートしたユーザーの話を聞いてみると、思ったよりも不満の声は聞かない。むしろ「使い始めてみるとiOS6のデザインが古臭く見える」くらいらしいのだ&lt;sup id=&quot;fnref:ios7&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:ios7&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;。結局、iOS7の不満の声はユーザーのiOS7への「慣れ」によって解決されてしまう問題だったのだ。&lt;/p&gt;

&lt;p&gt;同時に上の話は当然のようにも思う。なぜならAppleはiPhoneで「未来」のUIを提供しているからだ。そのUIは未だユーザー達が体験したことのないUIであり、ユーザーの想像力の及ばないUIだ。Appleにとってユーザーは「何を欲しがっているのか理解していない」クソなのである。なのでAppleがユーザーの声を聞く意味は無い。&lt;/p&gt;

&lt;p&gt;そういう意味において「基本的に運営側がすることが正しいんですよ」理論はあながち間違っていない。&lt;/p&gt;

&lt;h2 id=&quot;uiを破壊していくという行為&quot;&gt;「UIを破壊していく」という行為&lt;/h2&gt;

&lt;p&gt;ユーザーの声を第一価値基準に置いてしまうとUIの破壊的変更は行えない。なぜなら旧UIと新UIの２つがあったときにクソユーザーが肯定するのは当然「慣れ」ている旧UIだからだ。この事例の典型的な例が&lt;a href=&quot;http://www.itmedia.co.jp/news/articles/1304/02/news033.html&quot;&gt;CookpadのiPhone UIリニューアル&lt;/a&gt;である。&lt;/p&gt;

&lt;p&gt;「開発チームにはユーザーエクスペリエンス（UX）の専門家を入れ、ユーザーインタビューを重ねるなど、ユーザー目線に立った設計を重視。」とあるのでUX的観点でアプリは確実に良くなっているはずである。ただクックパッドチームにとって想定外だったのは「慣れ」を第一価値基準に置くクックパッドユーザー、クソBBAたちの存在である。結果的に彼女らからとんでもないレビュー１スター攻撃をくらってしまった。&lt;/p&gt;

&lt;p&gt;しかしこのようなクソユーザーの声ばかりに耳を傾けていてはいけない。さもなければUIの進化は止まる。UIの進化のためにはあるタイミングにおけるUIの破壊行為が不可欠だ。UI破壊のアプローチとして以下の２つが取りうる。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;漸進的変化: 徐々にUIに変化を加えていくアプローチ&lt;/li&gt;
  &lt;li&gt;劇的変化: UIをフルスクラッチで再構築するアプローチ&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;漸進的変化&quot;&gt;漸進的変化&lt;/h3&gt;

&lt;p&gt;前者の場合のメリットとしてはユーザーの不満の声を極力少なくすることができる。ユーザーに気づかせない、あるいは「あれ、いつの間にかここ変わってる？」と思われるくらいの変更に留めておく。この変更の例としてはGoogleの検索結果画面が挙げられる。&lt;/p&gt;

&lt;p&gt;Googleの検索結果は微細なデザインが変わっているとはいえ、本質的なデザインは何一つ変わっていない。ここに2001年のGoogleの検索結果画面がある。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/ui/google.png&quot; alt=&quot;google&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Googleのロゴが左上にあって、その右に検索フォームと検索ボタンがあり、その下に検索結果がある。本質的なUIとしては何も変わっていないのがわかるはずだ。&lt;/p&gt;

&lt;p&gt;この変化の仕方のデメリットとしては大々的なUI破壊ができないということだ。具体的には現在のUIをフルフラットUIで作りなおそう、といったことはできない。&lt;/p&gt;

&lt;h3 id=&quot;劇的変化&quot;&gt;劇的変化&lt;/h3&gt;

&lt;p&gt;後者はAppleがiOS6をiOS7にアップデートしたときのような劇的な変化、Apple的アプローチだ。メリットとしてはUIをコンセプトレベルで作り変えることができる。フルフラットUIに変更しようとか、3カラムだったデザインを1カラムのレスポンシブデザインに作り変えようとか。&lt;/p&gt;

&lt;p&gt;デメリットとしては上記に書いたように旧UIに「慣れ」たユーザーからの不満の声が上がることだ。新UIに全く満足できないユーザーが出てきた場合の最悪のシナリオとして、既存ユーザーのサービス離れも起こりえる。&lt;/p&gt;

&lt;p&gt;逆に言うとサービス提供者としてはその最悪のシナリオも想定しておく必要があるだろう。UIをロールバックさせるのか、クソユーザーの不満の声を聞きつつ新UIをアップデートしていくのか、不満の声を無視してサービスの提供を続けていくのか。&lt;/p&gt;

&lt;h2 id=&quot;何がクールなuiなのか&quot;&gt;何が「クール」なUIなのか&lt;/h2&gt;

&lt;p&gt;ところで「クール」なUIというのはどういったUIなんだろうか。たとえ運営が「最高にクール」なUIだと信じこんでいたとしても本質的に「クール」でなければユーザーは離れていくだけだろう。クールなUI、私は「慣れとともにUX満足度が向上する」UIだと思っている&lt;sup id=&quot;fnref:ui&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:ui&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;。グラフに表すとこのようになる。&lt;/p&gt;

&lt;canvas id=&quot;myChart1&quot; width=&quot;300&quot; height=&quot;200&quot;&gt;&lt;/canvas&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
(function(){
var ctx = document.getElementById(&quot;myChart1&quot;).getContext(&quot;2d&quot;);
var data = {
  labels : [&quot;時間の経過&quot;, &quot;&quot;],
  datasets : [
    {
      fillColor : &quot;rgba(106,178,202,0.5)&quot;,
      strokeColor : &quot;rgba(150,150,150,1)&quot;,
      pointColor : &quot;rgba(150,150,150,1)&quot;,
      pointStrokeColor : &quot;#fff&quot;,
      data : [20,100]
    }
  ]
};
var options = {
  scaleOverride : true,
  scaleSteps : 10,
  scaleStepWidth : 10,
  scaleStartValue : 0
};
new Chart(ctx).Line(data,options);
})();
&lt;/script&gt;

&lt;p&gt;横軸は時間の経過、縦軸はUXの満足度を表している。時間の経過とともにUIに「慣れ」ることで、UXも向上していく。良いUIを提供できればこのような満足度の曲線を描くことだろう。&lt;/p&gt;

&lt;p&gt;一方悪いUIを提供した場合の曲線はどうなるか。&lt;/p&gt;

&lt;canvas id=&quot;myChart2&quot; width=&quot;300&quot; height=&quot;200&quot;&gt;&lt;/canvas&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
(function(){
var ctx = document.getElementById(&quot;myChart2&quot;).getContext(&quot;2d&quot;);
var data = {
  labels : [&quot;時間の経過&quot;, &quot;&quot;],
  datasets : [
    {
      fillColor : &quot;rgba(106,178,202,0.5)&quot;,
      strokeColor : &quot;rgba(150,150,150,1)&quot;,
      pointColor : &quot;rgba(150,150,150,1)&quot;,
      pointStrokeColor : &quot;#fff&quot;,
      data : [20,40]
    }
  ]
};
var options = {
  scaleOverride : true,
  scaleSteps : 10,
  scaleStepWidth : 10,
  scaleStartValue : 0
};
new Chart(ctx).Line(data,options);
})();
&lt;/script&gt;

&lt;p&gt;たとえ時間の経過とともにユーザーがUIに「慣れ」たとしてもUXはほとんど向上しない。このダメなUIの例としては楽天の各種サービスが挙げられる。楽天のUIのクソさは単純に慣れとかそれ以前の問題だ。いくら使い込もうともUXは上がらない。せいぜい操作を繰り返す内にナビゲーション・リンクの位置を覚えて操作が前より早くなる程度だ。&lt;/p&gt;

&lt;p&gt;破壊的なUI変更を行う場合、サービス運営者は基本的に上曲線のようなユーザーの「慣れ」とともにUXが向上するようなUIを目指すべきである&lt;sup id=&quot;fnref:nice-ui&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:nice-ui&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h2 id=&quot;ジャパニーズデザインの限界&quot;&gt;「ジャパニーズ・デザイン」の限界&lt;/h2&gt;

&lt;p&gt;日本のサービスではヒットしていても欧米と比較してUIがイケていないケースをよく見る。これは日本のデザイン業界が抱える根源的な問題を浮き上がらせている。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://thebridge.jp/2013/11/why-japanese-web-design-is-so-different&quot;&gt;日本のウェブデザインはなぜこんなにも世界と違うのか？&lt;/a&gt; (&lt;a href=&quot;http://randomwire.com/why-japanese-web-design-is-so-different/&quot;&gt;原文&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上記事では文化的、歴史的観点から日本のデザインがダサくならざるを得ない状況を述べている。日本人は絵だけでは満足できず文字が必要なこと。日本語という言語特性によりタイポグラフィの表現が乏しいこと（WEBフォントが扱えない）。日本語という文字自体がクールじゃないこと。などなど。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/ui/japanese.png&quot; alt=&quot;japanese is uncool&quot; /&gt;&lt;/p&gt;

&lt;p&gt;（via. &lt;a href=&quot;http://www.slideshare.net/yuudaitachibana/creators-meetup-8&quot;&gt;流行に乗っていいの？フラットデザインの落とし穴&lt;/a&gt;）&lt;/p&gt;

&lt;p&gt;このような記事を読むと日本という国の文化・社会そのものがUIをクールじゃない方向へと規定しているのではないかとも思う。&lt;/p&gt;

&lt;h2 id=&quot;ニコ動はどうすべきか&quot;&gt;ニコ動はどうすべきか？&lt;/h2&gt;

&lt;p&gt;話が飛んだが本来のニコ動の話に戻ってニコ動はどうすべきなのかを私なりに考えてみる。私ならまずはファットなUIをスリムにするところから考え始めるだろう。つまり何の要素を加えるか、または何を変更するかといった足し算ではなく、何の要素を削るかの引き算の発想で始めるのである。&lt;/p&gt;

&lt;p&gt;ニコニコ動画に限っていうと、ニコニコ動画のコアな機能は「動画＆コメントを観る」ことと「動画にコメントをする」ことの２つだけだと私は考える。それ以外の機能に関するUIは削るor目立たなくさせて良いだろう。お手本としてはFuluやNetflixが良いだろう。基本は動画視聴サービス。動画を視聴させることに徹底的にUIをフォーカスさせる。ニコニコ動画は動画視聴＋コメント閲覧にフォーカスしたUI作りを考えてスリム化していけばよい。&lt;/p&gt;

&lt;p&gt;と、ここまで来た時点でユーザーの不満が噴出することは見え見えである。というのもニコニコ動画というサービス自体がファットな機能に支えられており、ユーザーのニコニコ動画の使い方・楽しみ方も多種多様化してしまっているからだ。コア機能以外を引き算した時点で、その機能を愛用していたユーザーは激おこぷんぷん丸である。&lt;/p&gt;

&lt;p&gt;ここでUI変更のディレンマが発生する。「ファットなUIをスリムにしたい」という気持ちと「できるだけ多くのユーザーの声に応えたい」気持ちの間で揺れてしまう。ただ上述したようにクソユーザーにはクールなUIはわからないのだ。そしてもう１つ重要なこととして、&lt;a href=&quot;http://fladdict.net/blog/2013/08/client-user-request.html&quot;&gt;顧客やユーザーの要望に全て対応すると、アプリは99%破綻する&lt;/a&gt;ことも忘れてはならない。&lt;/p&gt;

&lt;p&gt;つまり何を言いたいかというと、結局ニコ動はどんなUI変更やっても不満は少なからず絶対来るのだからそんなのいちいち気にするな、ということである。本当に「最高にクール」なUIであれば、慣れとともにユーザー・エクスペリエンスは向上するんだよ。お前らが考えた「最高にクール」なUIだろうが。というかユーザーの声くらいでロールバックしてしまうような変更なら最初からするな、ということである。&lt;/p&gt;

&lt;h2 id=&quot;まとめ&quot;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;かなり内容が発散してしまったが、無理やりまとめるとこんな感じだ。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;UIに対するユーザーの声は「参考」であって「正解」ではない&lt;/li&gt;
  &lt;li&gt;UIの進化のためにはユーザーの声を顧みない破壊的変更が必要である&lt;/li&gt;
  &lt;li&gt;「本当にクール」なUIならばUXは「慣れ」とともに向上するはずである&lt;/li&gt;
  &lt;li&gt;ニコ動は「本当にクール」なUIを今後も自信を持って提供していくべき&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;追記&quot;&gt;追記&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;この記事の反応を受けて&lt;a href=&quot;/cool-ui-after/&quot;&gt;後記&lt;/a&gt;を書きました。（2013/11/22　18:05）&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:ios7&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://rebuild.fm/21/&quot;&gt;Rebuild: 21: On the Launch of iPhone 5s and iOS 7 (Naoya Ito.)&lt;/a&gt;　私はちなみに現時点でiOS6を使用。あと私はAppleは好きですがApple信者ではありません。 &lt;a href=&quot;#fnref:ios7&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:ui&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;UIとUXははっきり区別すべきものである。詳しくはこちらを参照されたし。&lt;a href=&quot;http://blog.btrax.com/jp/2012/09/10/what_is_ux/&quot;&gt;「ユーザーエクスペリエンスとは何か？」【インタビュー】ホワイトハウスも注目のUXデザイナーJanice Fraser氏（前編）&lt;/a&gt; &lt;a href=&quot;#fnref:ui&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:nice-ui&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;では何が「慣れとともにUX満足度が向上する」UIなのかという話になるが、私はUI/UXの専門家ではないのでそこは専門家に譲るとする。 &lt;a href=&quot;#fnref:nice-ui&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Toshimaru</name></author><category term="design" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/ui/ios.png" /><media:content medium="image" url="https://blog.toshimaru.net/images/posts/ui/ios.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">レスポンシブサイト構築にあたり参考にしたレスポンシブデザイン１０選</title><link href="https://blog.toshimaru.net/responsive-designs/" rel="alternate" type="text/html" title="レスポンシブサイト構築にあたり参考にしたレスポンシブデザイン１０選" /><published>2013-04-08T00:00:00+09:00</published><updated>2013-04-08T00:00:00+09:00</updated><id>https://blog.toshimaru.net/responsive-designs</id><content type="html" xml:base="https://blog.toshimaru.net/responsive-designs/">&lt;p&gt;&lt;a href=&quot;http://blog.toshimaru.net/posterous-to-jekyll/&quot;&gt;ブログを移行&lt;/a&gt;するにあたって、デザインをフルスクラッチで組み直しました。以前はブログシステム側でモバイル版、PC版の出し分けを行なっておりましたが、今回は流行りの&lt;a href=&quot;http://blog.toshimaru.net/responsive-web-design/&quot;&gt;レスポンシブWebデザイン&lt;/a&gt;で構築してみました。&lt;/p&gt;

&lt;p&gt;デザインをレスポンシブにするために私が参考にしたサイト群をピックアップしたいと思います。&lt;/p&gt;

&lt;h2 id=&quot;1-twitter-bootstrap&quot;&gt;1 Twitter Bootstrap&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://twitter.github.io/bootstrap/&quot;&gt;&lt;img src=&quot;/images/posts/responsive-designs/1.png&quot; alt=&quot;Twitter Bootstrap&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;言わずと知れたtwitter bootstrap. 本サイトはbootstrapを使わずに構築していますが、レイアウトの組み方、CSSのコーディング手法などはこちらが大変参考になりました。&lt;/p&gt;

&lt;h2 id=&quot;2-rockaway-relief&quot;&gt;2 Rockaway Relief&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://rockawayrelief.com/&quot;&gt;&lt;img src=&quot;/images/posts/responsive-designs/2.png&quot; alt=&quot;Rockaway&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ブルーが良い感じに映えるデザインです。&lt;/p&gt;

&lt;h2 id=&quot;3-creasty&quot;&gt;3 Creasty&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.creasty.com/&quot;&gt;&lt;img src=&quot;/images/posts/responsive-designs/3.png&quot; alt=&quot;Creasty&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;若手デザイナ/デベロッパのクリスティさんのWEBサイト。モバイル時のメニューの表示のさせ方がかっこいい。&lt;/p&gt;

&lt;h2 id=&quot;4-anthony-calzadilla&quot;&gt;4 ANTHONY CALZADILLA&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.anthonycalzadilla.com/&quot;&gt;&lt;img src=&quot;/images/posts/responsive-designs/4.png&quot; alt=&quot;CALZADILLA&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;シンプル&amp;amp;クール。&lt;/p&gt;

&lt;h2 id=&quot;5-manos&quot;&gt;5 Manos&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://manoscrafted.com/&quot;&gt;&lt;img src=&quot;/images/posts/responsive-designs/5.png&quot; alt=&quot;Manos&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;スクロール途中でFIXされるナビゲーションが印象的（PC閲覧時）。&lt;/p&gt;

&lt;h2 id=&quot;6-gin-lane-media&quot;&gt;6 Gin Lane Media&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ginlanemedia.com/&quot;&gt;&lt;img src=&quot;/images/posts/responsive-designs/6.png&quot; alt=&quot;Gin Lane Media&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;上同様、途中でFIXされるナビゲーション。&lt;/p&gt;

&lt;h2 id=&quot;7-fear-the-grizzly&quot;&gt;7 Fear the Grizzly&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.fearthegrizzly.com/&quot;&gt;&lt;img src=&quot;/images/posts/responsive-designs/7.png&quot; alt=&quot;Grizzly&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;白を基調とした美麗デザイン。&lt;/p&gt;

&lt;h2 id=&quot;8-buffalo&quot;&gt;8 Buffalo&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://builtbybuffalo.com/&quot;&gt;&lt;img src=&quot;/images/posts/responsive-designs/8.png&quot; alt=&quot;Buffalo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PC時とモバイル時のレイアウトの変化のさせ方がイケてます。&lt;/p&gt;

&lt;h2 id=&quot;9-squarespace&quot;&gt;9 Squarespace&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.squarespace.com/&quot;&gt;&lt;img src=&quot;/images/posts/responsive-designs/9.png&quot; alt=&quot;Squarespace&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;用意されているサイトのテンプレートもすごくかっこいいSquarespaceさん。そちらも覗いてみてください。&lt;/p&gt;

&lt;h2 id=&quot;10-muriel-labro&quot;&gt;10 Muriel Labro&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.muriel-labro.fr/&quot;&gt;&lt;img src=&quot;/images/posts/responsive-designs/10.png&quot; alt=&quot;Muriel Labro&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;パリの美容室のページ。かっこいい美容師さんの紹介です。&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://responsive-jp.com/&quot;&gt;Responsive Web Design JP 日本国内の秀逸なレスポンシブWebデザインを集めたギャラリーサイト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Toshimaru</name></author><category term="design" /><summary type="html">ブログを移行するにあたって、デザインをフルスクラッチで組み直しました。以前はブログシステム側でモバイル版、PC版の出し分けを行なっておりましたが、今回は流行りのレスポンシブWebデザインで構築してみました。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/responsive-designs/10.png" /><media:content medium="image" url="https://blog.toshimaru.net/images/posts/responsive-designs/10.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Responsive Web Design 時代の画像スライダー</title><link href="https://blog.toshimaru.net/responsive-web-design/" rel="alternate" type="text/html" title="Responsive Web Design 時代の画像スライダー" /><published>2012-10-11T00:00:00+09:00</published><updated>2012-10-11T00:00:00+09:00</updated><id>https://blog.toshimaru.net/responsive-web-design</id><content type="html" xml:base="https://blog.toshimaru.net/responsive-web-design/">&lt;p&gt;え？　&quot;れすぽんしぶうぇぶでざいん&quot;って何かって？&lt;/p&gt;
&lt;p&gt;なかなか日本では聞きなれないような気がしなくもないですがこんな意味です。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Responsive web design (often abbreviated to RWD) is an approach to web design in which a site is crafted to provide an optimal viewing experience&amp;mdash;easy reading and navigation with a minimum of resizing, panning, and scrolling&amp;mdash;across a wide range of devices (from desktop computer monitors to mobile phones).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Responsive_web_design&quot;&gt;Responsive web design (wikipedia)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;つまり、レスポンシブWEBデザインとは、デバイスの幅に応じてWebの見た目（レイアウトとかサイズとか）が最適化されるWebデザインの手法のことです。タブレット、スマホの台頭によってますます重要視されている手法ですね。&lt;/p&gt;
&lt;p&gt;さて、本題。本日は画像スライダーのお話。&lt;/p&gt;
&lt;p&gt;先日画像スライダーを実装する機会があったので「js slider」なんかでググって一番最初に出てくる&lt;a href=&quot;http://www.slidesjs.com/&quot;&gt;slidesjs&lt;/a&gt;で画像スライダーを実装するわけです。でもスマホやタブレット見て分かる通り、全然それらのデバイスに最適化されてませんね。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2012/10/slider2.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://toshimaru.net/demo/slidesjs/&quot;&gt;http://toshimaru.net/demo/slidesjs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;幅がデバイスに応じて変わったりもしないので、ちゃんと最適化されるような違う画像スライダーを探してみます。&lt;/p&gt;
&lt;p&gt;んでたどり着いたのが&lt;a href=&quot;http://flexslider.woothemes.com/&quot;&gt;FlexSlider2&lt;/a&gt;。ちゃんとPCでもタブレットでも最適化されて表示されますね。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2012/10/slider3.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2012/10/slider1.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;スマホ、タブレット対応が必須な今、しっかりレスポンシブデザインを心がけてWEB制作をしていきたいところです。&lt;/p&gt;
&lt;h3&gt;参考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ascii.jp/elem/000/000/697/697463/&quot;&gt;レスポンシブWebデザインとは&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Toshimaru</name></author><category term="css" /><category term="design" /><category term="html" /><category term="javascript" /><summary type="html">え？　&quot;れすぽんしぶうぇぶでざいん&quot;って何かって？ なかなか日本では聞きなれないような気がしなくもないですがこんな意味です。 Responsive web design (often abbreviated to RWD) is an approach to web design in which a site is crafted to provide an optimal viewing experience&amp;mdash;easy reading and navigation with a minimum of resizing, panning, and scrolling&amp;mdash;across a wide range of devices (from desktop computer monitors to mobile phones). Responsive web design (wikipedia) つまり、レスポンシブWEBデザインとは、デバイスの幅に応じてWebの見た目（レイアウトとかサイズとか）が最適化されるWebデザインの手法のことです。タブレット、スマホの台頭によってますます重要視されている手法ですね。 さて、本題。本日は画像スライダーのお話。 先日画像スライダーを実装する機会があったので「js slider」なんかでググって一番最初に出てくるslidesjsで画像スライダーを実装するわけです。でもスマホやタブレット見て分かる通り、全然それらのデバイスに最適化されてませんね。 http://toshimaru.net/demo/slidesjs/ 幅がデバイスに応じて変わったりもしないので、ちゃんと最適化されるような違う画像スライダーを探してみます。 んでたどり着いたのがFlexSlider2。ちゃんとPCでもタブレットでも最適化されて表示されますね。 スマホ、タブレット対応が必須な今、しっかりレスポンシブデザインを心がけてWEB制作をしていきたいところです。 参考 レスポンシブWebデザインとは</summary></entry></feed>